{
  "queries": {
    "connections": [
      {
        "name": "organizations",
        "type": "OrganizationConnection!",
        "kind": "objects",
        "id": "organizationconnection",
        "href": "/graphql/reference/objects#organizationconnection",
        "description": "<p>A list of organizations.</p>",
        "args": [
          {
            "name": "after",
            "type": "String",
            "id": "string",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#string",
            "description": "<p>Returns the elements in the list that come after the specified cursor.</p>"
          },
          {
            "name": "before",
            "type": "String",
            "id": "string",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#string",
            "description": "<p>Returns the elements in the list that come before the specified cursor.</p>"
          },
          {
            "name": "first",
            "type": "Int",
            "id": "int",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#int",
            "description": "<p>Returns the first <em>n</em> elements from the list.</p>"
          },
          {
            "name": "last",
            "type": "Int",
            "id": "int",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#int",
            "description": "<p>Returns the last <em>n</em> elements from the list.</p>"
          }
        ]
      },
      {
        "name": "search",
        "type": "SearchResultItemConnection!",
        "kind": "objects",
        "id": "searchresultitemconnection",
        "href": "/graphql/reference/objects#searchresultitemconnection",
        "description": "<p>Perform a search across resources.</p>",
        "args": [
          {
            "name": "after",
            "type": "String",
            "id": "string",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#string",
            "description": "<p>Returns the elements in the list that come after the specified cursor.</p>"
          },
          {
            "name": "before",
            "type": "String",
            "id": "string",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#string",
            "description": "<p>Returns the elements in the list that come before the specified cursor.</p>"
          },
          {
            "name": "first",
            "type": "Int",
            "id": "int",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#int",
            "description": "<p>Returns the first <em>n</em> elements from the list.</p>"
          },
          {
            "name": "last",
            "type": "Int",
            "id": "int",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#int",
            "description": "<p>Returns the last <em>n</em> elements from the list.</p>"
          },
          {
            "name": "query",
            "type": "String!",
            "id": "string",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#string",
            "description": "<p>The search string to look for.</p>"
          },
          {
            "name": "type",
            "type": "SearchType!",
            "id": "searchtype",
            "kind": "enums",
            "href": "/graphql/reference/enums#searchtype",
            "description": "<p>The types of search items to search within.</p>"
          }
        ]
      },
      {
        "name": "securityAdvisories",
        "type": "SecurityAdvisoryConnection!",
        "kind": "objects",
        "id": "securityadvisoryconnection",
        "href": "/graphql/reference/objects#securityadvisoryconnection",
        "description": "<p>GitHub Security Advisories.</p>",
        "args": [
          {
            "name": "after",
            "type": "String",
            "id": "string",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#string",
            "description": "<p>Returns the elements in the list that come after the specified cursor.</p>"
          },
          {
            "name": "before",
            "type": "String",
            "id": "string",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#string",
            "description": "<p>Returns the elements in the list that come before the specified cursor.</p>"
          },
          {
            "name": "first",
            "type": "Int",
            "id": "int",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#int",
            "description": "<p>Returns the first <em>n</em> elements from the list.</p>"
          },
          {
            "name": "last",
            "type": "Int",
            "id": "int",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#int",
            "description": "<p>Returns the last <em>n</em> elements from the list.</p>"
          },
          {
            "name": "publishedSince",
            "type": "DateTime",
            "id": "datetime",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#datetime",
            "description": "<p>Filter advisories to those published since a time in the past.</p>"
          },
          {
            "name": "updatedSince",
            "type": "DateTime",
            "id": "datetime",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#datetime",
            "description": "<p>Filter advisories to those updated since a time in the past.</p>"
          }
        ]
      },
      {
        "name": "securityVulnerabilities",
        "type": "SecurityVulnerabilityConnection!",
        "kind": "objects",
        "id": "securityvulnerabilityconnection",
        "href": "/graphql/reference/objects#securityvulnerabilityconnection",
        "description": "<p>Software Vulnerabilities documented by GitHub Security Advisories.</p>",
        "args": [
          {
            "name": "after",
            "type": "String",
            "id": "string",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#string",
            "description": "<p>Returns the elements in the list that come after the specified cursor.</p>"
          },
          {
            "name": "before",
            "type": "String",
            "id": "string",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#string",
            "description": "<p>Returns the elements in the list that come before the specified cursor.</p>"
          },
          {
            "name": "ecosystem",
            "type": "SecurityAdvisoryEcosystem",
            "id": "securityadvisoryecosystem",
            "kind": "enums",
            "href": "/graphql/reference/enums#securityadvisoryecosystem",
            "description": "<p>An ecosystem to filter vulnerabilities by.</p>"
          },
          {
            "name": "first",
            "type": "Int",
            "id": "int",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#int",
            "description": "<p>Returns the first <em>n</em> elements from the list.</p>"
          },
          {
            "name": "last",
            "type": "Int",
            "id": "int",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#int",
            "description": "<p>Returns the last <em>n</em> elements from the list.</p>"
          },
          {
            "name": "package",
            "type": "String",
            "id": "string",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#string",
            "description": "<p>A package name to filter vulnerabilities by.</p>"
          },
          {
            "name": "severities",
            "type": "[SecurityAdvisorySeverity!]",
            "id": "securityadvisoryseverity",
            "kind": "enums",
            "href": "/graphql/reference/enums#securityadvisoryseverity",
            "description": "<p>A list of severities to filter vulnerabilities by.</p>"
          }
        ]
      },
      {
        "name": "users",
        "type": "UserConnection!",
        "kind": "objects",
        "id": "userconnection",
        "href": "/graphql/reference/objects#userconnection",
        "description": "<p>A list of users.</p>",
        "args": [
          {
            "name": "after",
            "type": "String",
            "id": "string",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#string",
            "description": "<p>Returns the elements in the list that come after the specified cursor.</p>"
          },
          {
            "name": "before",
            "type": "String",
            "id": "string",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#string",
            "description": "<p>Returns the elements in the list that come before the specified cursor.</p>"
          },
          {
            "name": "first",
            "type": "Int",
            "id": "int",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#int",
            "description": "<p>Returns the first <em>n</em> elements from the list.</p>"
          },
          {
            "name": "last",
            "type": "Int",
            "id": "int",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#int",
            "description": "<p>Returns the last <em>n</em> elements from the list.</p>"
          }
        ]
      }
    ],
    "fields": [
      {
        "name": "codeOfConduct",
        "type": "CodeOfConduct",
        "kind": "objects",
        "id": "codeofconduct",
        "href": "/graphql/reference/objects#codeofconduct",
        "description": "<p>Look up a code of conduct by its key.</p>",
        "args": [
          {
            "name": "key",
            "type": "String!",
            "id": "string",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#string",
            "description": "<p>The code of conduct's key.</p>"
          }
        ]
      },
      {
        "name": "codesOfConduct",
        "type": "[CodeOfConduct]",
        "kind": "objects",
        "id": "codeofconduct",
        "href": "/graphql/reference/objects#codeofconduct",
        "description": "<p>Look up a code of conduct by its key.</p>",
        "args": []
      },
      {
        "name": "license",
        "type": "License",
        "kind": "objects",
        "id": "license",
        "href": "/graphql/reference/objects#license",
        "description": "<p>Look up an open source license by its key.</p>",
        "args": [
          {
            "name": "key",
            "type": "String!",
            "id": "string",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#string",
            "description": "<p>The license's downcased SPDX ID.</p>"
          }
        ]
      },
      {
        "name": "licenses",
        "type": "[License]!",
        "kind": "objects",
        "id": "license",
        "href": "/graphql/reference/objects#license",
        "description": "<p>Return a list of known open source licenses.</p>",
        "args": []
      },
      {
        "name": "meta",
        "type": "GitHubMetadata!",
        "kind": "objects",
        "id": "githubmetadata",
        "href": "/graphql/reference/objects#githubmetadata",
        "description": "<p>Return information about the GitHub instance.</p>",
        "args": []
      },
      {
        "name": "node",
        "type": "Node",
        "kind": "interfaces",
        "id": "node",
        "href": "/graphql/reference/interfaces#node",
        "description": "<p>Fetches an object given its ID.</p>",
        "args": [
          {
            "name": "id",
            "type": "ID!",
            "id": "id",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#id",
            "description": "<p>ID of the object.</p>"
          }
        ]
      },
      {
        "name": "nodes",
        "type": "[Node]!",
        "kind": "interfaces",
        "id": "node",
        "href": "/graphql/reference/interfaces#node",
        "description": "<p>Lookup nodes by a list of IDs.</p>",
        "args": [
          {
            "name": "ids",
            "type": "[ID!]!",
            "id": "id",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#id",
            "description": "<p>The list of node IDs.</p>"
          }
        ]
      },
      {
        "name": "organization",
        "type": "Organization",
        "kind": "objects",
        "id": "organization",
        "href": "/graphql/reference/objects#organization",
        "description": "<p>Lookup a organization by login.</p>",
        "args": [
          {
            "name": "login",
            "type": "String!",
            "id": "string",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#string",
            "description": "<p>The organization's login.</p>"
          }
        ]
      },
      {
        "name": "rateLimit",
        "type": "RateLimit",
        "kind": "objects",
        "id": "ratelimit",
        "href": "/graphql/reference/objects#ratelimit",
        "description": "<p>The client's rate limit information.</p>",
        "args": [
          {
            "name": "dryRun",
            "defaultValue": false,
            "type": "Boolean",
            "id": "boolean",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#boolean",
            "description": "<p>If true, calculate the cost for the query without evaluating it.</p>"
          }
        ]
      },
      {
        "name": "relay",
        "type": "Query!",
        "kind": "objects",
        "id": "query",
        "href": "/graphql/reference/objects#query",
        "description": "<p>Hack to workaround <a href=\"https://github.com/facebook/relay/issues/112\">https://github.com/facebook/relay/issues/112</a> re-exposing the root query object.</p>",
        "args": []
      },
      {
        "name": "repository",
        "type": "Repository",
        "kind": "objects",
        "id": "repository",
        "href": "/graphql/reference/objects#repository",
        "description": "<p>Lookup a given repository by the owner and repository name.</p>",
        "args": [
          {
            "name": "name",
            "type": "String!",
            "id": "string",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#string",
            "description": "<p>The name of the repository.</p>"
          },
          {
            "name": "owner",
            "type": "String!",
            "id": "string",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#string",
            "description": "<p>The login field of a user or organization.</p>"
          }
        ]
      },
      {
        "name": "repositoryOwner",
        "type": "RepositoryOwner",
        "kind": "interfaces",
        "id": "repositoryowner",
        "href": "/graphql/reference/interfaces#repositoryowner",
        "description": "<p>Lookup a repository owner (ie. either a User or an Organization) by login.</p>",
        "args": [
          {
            "name": "login",
            "type": "String!",
            "id": "string",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#string",
            "description": "<p>The username to lookup the owner by.</p>"
          }
        ]
      },
      {
        "name": "resource",
        "type": "UniformResourceLocatable",
        "kind": "interfaces",
        "id": "uniformresourcelocatable",
        "href": "/graphql/reference/interfaces#uniformresourcelocatable",
        "description": "<p>Lookup resource by a URL.</p>",
        "args": [
          {
            "name": "url",
            "type": "URI!",
            "id": "uri",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#uri",
            "description": "<p>The URL.</p>"
          }
        ]
      },
      {
        "name": "securityAdvisory",
        "type": "SecurityAdvisory",
        "kind": "objects",
        "id": "securityadvisory",
        "href": "/graphql/reference/objects#securityadvisory",
        "description": "<p>Fetch a Security Advisory by its GHSA ID.</p>",
        "args": [
          {
            "name": "ghsaId",
            "type": "String!",
            "id": "string",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#string",
            "description": "<p>GitHub Security Advisory ID.</p>"
          }
        ]
      },
      {
        "name": "topic",
        "type": "Topic",
        "kind": "objects",
        "id": "topic",
        "href": "/graphql/reference/objects#topic",
        "description": "<p>Look up a topic by name.</p>",
        "args": [
          {
            "name": "name",
            "type": "String!",
            "id": "string",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#string",
            "description": "<p>The topic's name.</p>"
          }
        ]
      },
      {
        "name": "user",
        "type": "User",
        "kind": "objects",
        "id": "user",
        "href": "/graphql/reference/objects#user",
        "description": "<p>Lookup a user by login.</p>",
        "args": [
          {
            "name": "login",
            "type": "String!",
            "id": "string",
            "kind": "scalars",
            "href": "/graphql/reference/scalars#string",
            "description": "<p>The user's login.</p>"
          }
        ]
      },
      {
        "name": "viewer",
        "type": "User!",
        "kind": "objects",
        "id": "user",
        "href": "/graphql/reference/objects#user",
        "description": "<p>The currently authenticated user.</p>",
        "args": []
      }
    ]
  },
  "mutations": [
    {
      "name": "addAssigneesToAssignable",
      "kind": "mutations",
      "id": "addassigneestoassignable",
      "href": "/graphql/reference/mutations#addassigneestoassignable",
      "description": "<p>Adds assignees to an assignable object.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddAssigneesToAssignableInput!",
          "id": "addassigneestoassignableinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#addassigneestoassignableinput"
        }
      ],
      "returnFields": [
        {
          "name": "assignable",
          "type": "Assignable",
          "id": "assignable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#assignable",
          "description": "<p>The item that was assigned.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "addComment",
      "kind": "mutations",
      "id": "addcomment",
      "href": "/graphql/reference/mutations#addcomment",
      "description": "<p>Adds a comment to an Issue or Pull Request.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddCommentInput!",
          "id": "addcommentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#addcommentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "commentEdge",
          "type": "IssueCommentEdge",
          "id": "issuecommentedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuecommentedge",
          "description": "<p>The edge from the subject's comment connection.</p>"
        },
        {
          "name": "subject",
          "type": "Node",
          "id": "node",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#node",
          "description": "<p>The subject.</p>"
        },
        {
          "name": "timelineEdge",
          "type": "IssueTimelineItemEdge",
          "id": "issuetimelineitemedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuetimelineitemedge",
          "description": "<p>The edge from the subject's timeline connection.</p>"
        }
      ]
    },
    {
      "name": "addLabelsToLabelable",
      "kind": "mutations",
      "id": "addlabelstolabelable",
      "href": "/graphql/reference/mutations#addlabelstolabelable",
      "description": "<p>Adds labels to a labelable object.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddLabelsToLabelableInput!",
          "id": "addlabelstolabelableinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#addlabelstolabelableinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "labelable",
          "type": "Labelable",
          "id": "labelable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#labelable",
          "description": "<p>The item that was labeled.</p>"
        }
      ]
    },
    {
      "name": "addProjectCard",
      "kind": "mutations",
      "id": "addprojectcard",
      "href": "/graphql/reference/mutations#addprojectcard",
      "description": "<p>Adds a card to a ProjectColumn. Either <code>contentId</code> or <code>note</code> must be provided but <strong>not</strong> both.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddProjectCardInput!",
          "id": "addprojectcardinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#addprojectcardinput"
        }
      ],
      "returnFields": [
        {
          "name": "cardEdge",
          "type": "ProjectCardEdge",
          "id": "projectcardedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcardedge",
          "description": "<p>The edge from the ProjectColumn's card connection.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "projectColumn",
          "type": "ProjectColumn",
          "id": "projectcolumn",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcolumn",
          "description": "<p>The ProjectColumn.</p>"
        }
      ]
    },
    {
      "name": "addProjectColumn",
      "kind": "mutations",
      "id": "addprojectcolumn",
      "href": "/graphql/reference/mutations#addprojectcolumn",
      "description": "<p>Adds a column to a Project.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddProjectColumnInput!",
          "id": "addprojectcolumninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#addprojectcolumninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "columnEdge",
          "type": "ProjectColumnEdge",
          "id": "projectcolumnedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcolumnedge",
          "description": "<p>The edge from the project's column connection.</p>"
        },
        {
          "name": "project",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "description": "<p>The project.</p>"
        }
      ]
    },
    {
      "name": "addPullRequestReview",
      "kind": "mutations",
      "id": "addpullrequestreview",
      "href": "/graphql/reference/mutations#addpullrequestreview",
      "description": "<p>Adds a review to a Pull Request.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddPullRequestReviewInput!",
          "id": "addpullrequestreviewinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#addpullrequestreviewinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequestReview",
          "type": "PullRequestReview",
          "id": "pullrequestreview",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreview",
          "description": "<p>The newly created pull request review.</p>"
        },
        {
          "name": "reviewEdge",
          "type": "PullRequestReviewEdge",
          "id": "pullrequestreviewedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewedge",
          "description": "<p>The edge from the pull request's review connection.</p>"
        }
      ]
    },
    {
      "name": "addPullRequestReviewComment",
      "kind": "mutations",
      "id": "addpullrequestreviewcomment",
      "href": "/graphql/reference/mutations#addpullrequestreviewcomment",
      "description": "<p>Adds a comment to a review.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddPullRequestReviewCommentInput!",
          "id": "addpullrequestreviewcommentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#addpullrequestreviewcommentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "comment",
          "type": "PullRequestReviewComment",
          "id": "pullrequestreviewcomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewcomment",
          "description": "<p>The newly created comment.</p>"
        },
        {
          "name": "commentEdge",
          "type": "PullRequestReviewCommentEdge",
          "id": "pullrequestreviewcommentedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewcommentedge",
          "description": "<p>The edge from the review's comment connection.</p>"
        }
      ]
    },
    {
      "name": "addReaction",
      "kind": "mutations",
      "id": "addreaction",
      "href": "/graphql/reference/mutations#addreaction",
      "description": "<p>Adds a reaction to a subject.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddReactionInput!",
          "id": "addreactioninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#addreactioninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "reaction",
          "type": "Reaction",
          "id": "reaction",
          "kind": "objects",
          "href": "/graphql/reference/objects#reaction",
          "description": "<p>The reaction object.</p>"
        },
        {
          "name": "subject",
          "type": "Reactable",
          "id": "reactable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#reactable",
          "description": "<p>The reactable subject.</p>"
        }
      ]
    },
    {
      "name": "addStar",
      "kind": "mutations",
      "id": "addstar",
      "href": "/graphql/reference/mutations#addstar",
      "description": "<p>Adds a star to a Starrable.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "AddStarInput!",
          "id": "addstarinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#addstarinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "starrable",
          "type": "Starrable",
          "id": "starrable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#starrable",
          "description": "<p>The starrable.</p>"
        }
      ]
    },
    {
      "name": "changeUserStatus",
      "kind": "mutations",
      "id": "changeuserstatus",
      "href": "/graphql/reference/mutations#changeuserstatus",
      "description": "<p>Update your status on GitHub.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "ChangeUserStatusInput!",
          "id": "changeuserstatusinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#changeuserstatusinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "status",
          "type": "UserStatus",
          "id": "userstatus",
          "kind": "objects",
          "href": "/graphql/reference/objects#userstatus",
          "description": "<p>Your updated status.</p>"
        }
      ]
    },
    {
      "name": "clearLabelsFromLabelable",
      "kind": "mutations",
      "id": "clearlabelsfromlabelable",
      "href": "/graphql/reference/mutations#clearlabelsfromlabelable",
      "description": "<p>Clears all labels from a labelable object.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "ClearLabelsFromLabelableInput!",
          "id": "clearlabelsfromlabelableinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#clearlabelsfromlabelableinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "labelable",
          "type": "Labelable",
          "id": "labelable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#labelable",
          "description": "<p>The item that was unlabeled.</p>"
        }
      ]
    },
    {
      "name": "cloneProject",
      "kind": "mutations",
      "id": "cloneproject",
      "href": "/graphql/reference/mutations#cloneproject",
      "description": "<p>Creates a new project by cloning configuration from an existing project.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CloneProjectInput!",
          "id": "cloneprojectinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#cloneprojectinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "jobStatusId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>The id of the JobStatus for populating cloned fields.</p>"
        },
        {
          "name": "project",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "description": "<p>The new cloned project.</p>"
        }
      ]
    },
    {
      "name": "closeIssue",
      "kind": "mutations",
      "id": "closeissue",
      "href": "/graphql/reference/mutations#closeissue",
      "description": "<p>Close an issue.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CloseIssueInput!",
          "id": "closeissueinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#closeissueinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "issue",
          "type": "Issue",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue",
          "description": "<p>The issue that was closed.</p>"
        }
      ]
    },
    {
      "name": "closePullRequest",
      "kind": "mutations",
      "id": "closepullrequest",
      "href": "/graphql/reference/mutations#closepullrequest",
      "description": "<p>Close a pull request.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "ClosePullRequestInput!",
          "id": "closepullrequestinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#closepullrequestinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequest",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest",
          "description": "<p>The pull request that was closed.</p>"
        }
      ]
    },
    {
      "name": "convertProjectCardNoteToIssue",
      "kind": "mutations",
      "id": "convertprojectcardnotetoissue",
      "href": "/graphql/reference/mutations#convertprojectcardnotetoissue",
      "description": "<p>Convert a project note card to one associated with a newly created issue.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "ConvertProjectCardNoteToIssueInput!",
          "id": "convertprojectcardnotetoissueinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#convertprojectcardnotetoissueinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "projectCard",
          "type": "ProjectCard",
          "id": "projectcard",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcard",
          "description": "<p>The updated ProjectCard.</p>"
        }
      ]
    },
    {
      "name": "createBranchProtectionRule",
      "kind": "mutations",
      "id": "createbranchprotectionrule",
      "href": "/graphql/reference/mutations#createbranchprotectionrule",
      "description": "<p>Create a new branch protection rule.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CreateBranchProtectionRuleInput!",
          "id": "createbranchprotectionruleinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createbranchprotectionruleinput"
        }
      ],
      "returnFields": [
        {
          "name": "branchProtectionRule",
          "type": "BranchProtectionRule",
          "id": "branchprotectionrule",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionrule",
          "description": "<p>The newly created BranchProtectionRule.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "createCheckRun",
      "kind": "mutations",
      "id": "createcheckrun",
      "href": "/graphql/reference/mutations#createcheckrun",
      "description": "<p>Create a check run.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "CreateCheckRunInput!",
          "id": "createcheckruninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createcheckruninput"
        }
      ],
      "returnFields": [
        {
          "name": "checkRun",
          "type": "CheckRun",
          "id": "checkrun",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkrun",
          "description": "<p>The newly created check run.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "createCheckSuite",
      "kind": "mutations",
      "id": "createchecksuite",
      "href": "/graphql/reference/mutations#createchecksuite",
      "description": "<p>Create a check suite.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "CreateCheckSuiteInput!",
          "id": "createchecksuiteinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createchecksuiteinput"
        }
      ],
      "returnFields": [
        {
          "name": "checkSuite",
          "type": "CheckSuite",
          "id": "checksuite",
          "kind": "objects",
          "href": "/graphql/reference/objects#checksuite",
          "description": "<p>The newly created check suite.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "createContentAttachment",
      "kind": "mutations",
      "id": "createcontentattachment",
      "href": "/graphql/reference/mutations#createcontentattachment",
      "description": "<p>Create a content attachment.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Create content attachments preview",
        "description": "This preview adds support for creating content attachments.",
        "toggled_by": "corsair-preview",
        "toggled_on": [
          "Mutation.createContentAttachment"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.corsair-preview+json",
        "href": "/graphql/overview/schema-previews#create-content-attachments-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "CreateContentAttachmentInput!",
          "id": "createcontentattachmentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createcontentattachmentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "contentAttachment",
          "type": "ContentAttachment",
          "id": "contentattachment",
          "kind": "objects",
          "href": "/graphql/reference/objects#contentattachment",
          "description": "<p>The newly created content attachment.</p>"
        }
      ]
    },
    {
      "name": "createDeployment",
      "kind": "mutations",
      "id": "createdeployment",
      "href": "/graphql/reference/mutations#createdeployment",
      "description": "<p>Creates a new deployment event.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Deployments preview",
        "description": "This preview adds support for deployments mutations and new deployments features.",
        "toggled_by": "flash-preview",
        "toggled_on": [
          "DeploymentStatus.environment",
          "Mutation.createDeploymentStatus",
          "Mutation.createDeployment"
        ],
        "owning_teams": [
          "@github/ecosystem-api"
        ],
        "accept_header": "application/vnd.github.flash-preview+json",
        "href": "/graphql/overview/schema-previews#deployments-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "CreateDeploymentInput!",
          "id": "createdeploymentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createdeploymentinput"
        }
      ],
      "returnFields": [
        {
          "name": "autoMerged",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean",
          "description": "<p>True if the default branch has been auto-merged into the deployment ref.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "deployment",
          "type": "Deployment",
          "id": "deployment",
          "kind": "objects",
          "href": "/graphql/reference/objects#deployment",
          "description": "<p>The new deployment.</p>"
        }
      ]
    },
    {
      "name": "createDeploymentStatus",
      "kind": "mutations",
      "id": "createdeploymentstatus",
      "href": "/graphql/reference/mutations#createdeploymentstatus",
      "description": "<p>Create a deployment status.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Deployments preview",
        "description": "This preview adds support for deployments mutations and new deployments features.",
        "toggled_by": "flash-preview",
        "toggled_on": [
          "DeploymentStatus.environment",
          "Mutation.createDeploymentStatus",
          "Mutation.createDeployment"
        ],
        "owning_teams": [
          "@github/ecosystem-api"
        ],
        "accept_header": "application/vnd.github.flash-preview+json",
        "href": "/graphql/overview/schema-previews#deployments-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "CreateDeploymentStatusInput!",
          "id": "createdeploymentstatusinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createdeploymentstatusinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "deploymentStatus",
          "type": "DeploymentStatus",
          "id": "deploymentstatus",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentstatus",
          "description": "<p>The new deployment status.</p>"
        }
      ]
    },
    {
      "name": "createIssue",
      "kind": "mutations",
      "id": "createissue",
      "href": "/graphql/reference/mutations#createissue",
      "description": "<p>Creates a new issue.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CreateIssueInput!",
          "id": "createissueinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createissueinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "issue",
          "type": "Issue",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue",
          "description": "<p>The new issue.</p>"
        }
      ]
    },
    {
      "name": "createLabel",
      "kind": "mutations",
      "id": "createlabel",
      "href": "/graphql/reference/mutations#createlabel",
      "description": "<p>Creates a new label.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Labels preview",
        "description": "This preview adds support for adding, updating, creating and deleting labels.",
        "toggled_by": "bane-preview",
        "toggled_on": [
          "Mutation.createLabel",
          "Mutation.deleteLabel",
          "Mutation.updateLabel"
        ],
        "owning_teams": [
          "@github/pe-pull-requests"
        ],
        "accept_header": "application/vnd.github.bane-preview+json",
        "href": "/graphql/overview/schema-previews#labels-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "CreateLabelInput!",
          "id": "createlabelinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createlabelinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "label",
          "type": "Label",
          "id": "label",
          "kind": "objects",
          "href": "/graphql/reference/objects#label",
          "description": "<p>The new label.</p>"
        }
      ]
    },
    {
      "name": "createProject",
      "kind": "mutations",
      "id": "createproject",
      "href": "/graphql/reference/mutations#createproject",
      "description": "<p>Creates a new project.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CreateProjectInput!",
          "id": "createprojectinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createprojectinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "project",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "description": "<p>The new project.</p>"
        }
      ]
    },
    {
      "name": "createPullRequest",
      "kind": "mutations",
      "id": "createpullrequest",
      "href": "/graphql/reference/mutations#createpullrequest",
      "description": "<p>Create a new pull request.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "CreatePullRequestInput!",
          "id": "createpullrequestinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createpullrequestinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequest",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest",
          "description": "<p>The new pull request.</p>"
        }
      ]
    },
    {
      "name": "createTeamDiscussion",
      "kind": "mutations",
      "id": "createteamdiscussion",
      "href": "/graphql/reference/mutations#createteamdiscussion",
      "description": "<p>Creates a new team discussion.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Team discussions preview",
        "description": "Adds support for reading and managing discussions within teams.",
        "toggled_by": "echo-preview",
        "toggled_on": [
          "Mutation.createTeamDiscussion",
          "Mutation.createTeamDiscussionComment",
          "Mutation.deleteTeamDiscussion",
          "Mutation.deleteTeamDiscussionComment",
          "Mutation.updateTeamDiscussion",
          "Mutation.updateTeamDiscussionComment",
          "Team.discussion",
          "Team.discussions",
          "Team.discussionsResourcePath",
          "Team.discussionsUrl",
          "TeamDiscussion",
          "TeamDiscussionComment",
          "TeamDiscussionCommentConnection",
          "TeamDiscussionCommentEdge",
          "TeamDiscussionCommentOrder",
          "TeamDiscussionCommentOrderField",
          "TeamDiscussionConnection",
          "TeamDiscussionEdge",
          "TeamDiscussionOrder",
          "TeamDiscussionOrderField"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.echo-preview+json",
        "href": "/graphql/overview/schema-previews#team-discussions-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "CreateTeamDiscussionInput!",
          "id": "createteamdiscussioninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createteamdiscussioninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "teamDiscussion",
          "type": "TeamDiscussion",
          "id": "teamdiscussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussion",
          "description": "<p>The new discussion.</p>"
        }
      ]
    },
    {
      "name": "createTeamDiscussionComment",
      "kind": "mutations",
      "id": "createteamdiscussioncomment",
      "href": "/graphql/reference/mutations#createteamdiscussioncomment",
      "description": "<p>Creates a new team discussion comment.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Team discussions preview",
        "description": "Adds support for reading and managing discussions within teams.",
        "toggled_by": "echo-preview",
        "toggled_on": [
          "Mutation.createTeamDiscussion",
          "Mutation.createTeamDiscussionComment",
          "Mutation.deleteTeamDiscussion",
          "Mutation.deleteTeamDiscussionComment",
          "Mutation.updateTeamDiscussion",
          "Mutation.updateTeamDiscussionComment",
          "Team.discussion",
          "Team.discussions",
          "Team.discussionsResourcePath",
          "Team.discussionsUrl",
          "TeamDiscussion",
          "TeamDiscussionComment",
          "TeamDiscussionCommentConnection",
          "TeamDiscussionCommentEdge",
          "TeamDiscussionCommentOrder",
          "TeamDiscussionCommentOrderField",
          "TeamDiscussionConnection",
          "TeamDiscussionEdge",
          "TeamDiscussionOrder",
          "TeamDiscussionOrderField"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.echo-preview+json",
        "href": "/graphql/overview/schema-previews#team-discussions-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "CreateTeamDiscussionCommentInput!",
          "id": "createteamdiscussioncommentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#createteamdiscussioncommentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "teamDiscussionComment",
          "type": "TeamDiscussionComment",
          "id": "teamdiscussioncomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussioncomment",
          "description": "<p>The new comment.</p>"
        }
      ]
    },
    {
      "name": "deleteBranchProtectionRule",
      "kind": "mutations",
      "id": "deletebranchprotectionrule",
      "href": "/graphql/reference/mutations#deletebranchprotectionrule",
      "description": "<p>Delete a branch protection rule.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteBranchProtectionRuleInput!",
          "id": "deletebranchprotectionruleinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deletebranchprotectionruleinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "deleteIssue",
      "kind": "mutations",
      "id": "deleteissue",
      "href": "/graphql/reference/mutations#deleteissue",
      "description": "<p>Deletes an Issue object.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteIssueInput!",
          "id": "deleteissueinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deleteissueinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "repository",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository",
          "description": "<p>The repository the issue belonged to.</p>"
        }
      ]
    },
    {
      "name": "deleteIssueComment",
      "kind": "mutations",
      "id": "deleteissuecomment",
      "href": "/graphql/reference/mutations#deleteissuecomment",
      "description": "<p>Deletes an IssueComment object.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteIssueCommentInput!",
          "id": "deleteissuecommentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deleteissuecommentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "deleteLabel",
      "kind": "mutations",
      "id": "deletelabel",
      "href": "/graphql/reference/mutations#deletelabel",
      "description": "<p>Deletes a label.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Labels preview",
        "description": "This preview adds support for adding, updating, creating and deleting labels.",
        "toggled_by": "bane-preview",
        "toggled_on": [
          "Mutation.createLabel",
          "Mutation.deleteLabel",
          "Mutation.updateLabel"
        ],
        "owning_teams": [
          "@github/pe-pull-requests"
        ],
        "accept_header": "application/vnd.github.bane-preview+json",
        "href": "/graphql/overview/schema-previews#labels-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteLabelInput!",
          "id": "deletelabelinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deletelabelinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "deleteProject",
      "kind": "mutations",
      "id": "deleteproject",
      "href": "/graphql/reference/mutations#deleteproject",
      "description": "<p>Deletes a project.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteProjectInput!",
          "id": "deleteprojectinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deleteprojectinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "owner",
          "type": "ProjectOwner",
          "id": "projectowner",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#projectowner",
          "description": "<p>The repository or organization the project was removed from.</p>"
        }
      ]
    },
    {
      "name": "deleteProjectCard",
      "kind": "mutations",
      "id": "deleteprojectcard",
      "href": "/graphql/reference/mutations#deleteprojectcard",
      "description": "<p>Deletes a project card.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteProjectCardInput!",
          "id": "deleteprojectcardinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deleteprojectcardinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "column",
          "type": "ProjectColumn",
          "id": "projectcolumn",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcolumn",
          "description": "<p>The column the deleted card was in.</p>"
        },
        {
          "name": "deletedCardId",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "description": "<p>The deleted card ID.</p>"
        }
      ]
    },
    {
      "name": "deleteProjectColumn",
      "kind": "mutations",
      "id": "deleteprojectcolumn",
      "href": "/graphql/reference/mutations#deleteprojectcolumn",
      "description": "<p>Deletes a project column.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteProjectColumnInput!",
          "id": "deleteprojectcolumninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deleteprojectcolumninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "deletedColumnId",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "description": "<p>The deleted column ID.</p>"
        },
        {
          "name": "project",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "description": "<p>The project the deleted column was in.</p>"
        }
      ]
    },
    {
      "name": "deletePullRequestReview",
      "kind": "mutations",
      "id": "deletepullrequestreview",
      "href": "/graphql/reference/mutations#deletepullrequestreview",
      "description": "<p>Deletes a pull request review.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeletePullRequestReviewInput!",
          "id": "deletepullrequestreviewinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deletepullrequestreviewinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequestReview",
          "type": "PullRequestReview",
          "id": "pullrequestreview",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreview",
          "description": "<p>The deleted pull request review.</p>"
        }
      ]
    },
    {
      "name": "deletePullRequestReviewComment",
      "kind": "mutations",
      "id": "deletepullrequestreviewcomment",
      "href": "/graphql/reference/mutations#deletepullrequestreviewcomment",
      "description": "<p>Deletes a pull request review comment.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DeletePullRequestReviewCommentInput!",
          "id": "deletepullrequestreviewcommentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deletepullrequestreviewcommentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequestReview",
          "type": "PullRequestReview",
          "id": "pullrequestreview",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreview",
          "description": "<p>The pull request review the deleted comment belonged to.</p>"
        }
      ]
    },
    {
      "name": "deleteTeamDiscussion",
      "kind": "mutations",
      "id": "deleteteamdiscussion",
      "href": "/graphql/reference/mutations#deleteteamdiscussion",
      "description": "<p>Deletes a team discussion.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Team discussions preview",
        "description": "Adds support for reading and managing discussions within teams.",
        "toggled_by": "echo-preview",
        "toggled_on": [
          "Mutation.createTeamDiscussion",
          "Mutation.createTeamDiscussionComment",
          "Mutation.deleteTeamDiscussion",
          "Mutation.deleteTeamDiscussionComment",
          "Mutation.updateTeamDiscussion",
          "Mutation.updateTeamDiscussionComment",
          "Team.discussion",
          "Team.discussions",
          "Team.discussionsResourcePath",
          "Team.discussionsUrl",
          "TeamDiscussion",
          "TeamDiscussionComment",
          "TeamDiscussionCommentConnection",
          "TeamDiscussionCommentEdge",
          "TeamDiscussionCommentOrder",
          "TeamDiscussionCommentOrderField",
          "TeamDiscussionConnection",
          "TeamDiscussionEdge",
          "TeamDiscussionOrder",
          "TeamDiscussionOrderField"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.echo-preview+json",
        "href": "/graphql/overview/schema-previews#team-discussions-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteTeamDiscussionInput!",
          "id": "deleteteamdiscussioninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deleteteamdiscussioninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "deleteTeamDiscussionComment",
      "kind": "mutations",
      "id": "deleteteamdiscussioncomment",
      "href": "/graphql/reference/mutations#deleteteamdiscussioncomment",
      "description": "<p>Deletes a team discussion comment.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Team discussions preview",
        "description": "Adds support for reading and managing discussions within teams.",
        "toggled_by": "echo-preview",
        "toggled_on": [
          "Mutation.createTeamDiscussion",
          "Mutation.createTeamDiscussionComment",
          "Mutation.deleteTeamDiscussion",
          "Mutation.deleteTeamDiscussionComment",
          "Mutation.updateTeamDiscussion",
          "Mutation.updateTeamDiscussionComment",
          "Team.discussion",
          "Team.discussions",
          "Team.discussionsResourcePath",
          "Team.discussionsUrl",
          "TeamDiscussion",
          "TeamDiscussionComment",
          "TeamDiscussionCommentConnection",
          "TeamDiscussionCommentEdge",
          "TeamDiscussionCommentOrder",
          "TeamDiscussionCommentOrderField",
          "TeamDiscussionConnection",
          "TeamDiscussionEdge",
          "TeamDiscussionOrder",
          "TeamDiscussionOrderField"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.echo-preview+json",
        "href": "/graphql/overview/schema-previews#team-discussions-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "DeleteTeamDiscussionCommentInput!",
          "id": "deleteteamdiscussioncommentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#deleteteamdiscussioncommentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "dismissPullRequestReview",
      "kind": "mutations",
      "id": "dismisspullrequestreview",
      "href": "/graphql/reference/mutations#dismisspullrequestreview",
      "description": "<p>Dismisses an approved or rejected pull request review.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "DismissPullRequestReviewInput!",
          "id": "dismisspullrequestreviewinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#dismisspullrequestreviewinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequestReview",
          "type": "PullRequestReview",
          "id": "pullrequestreview",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreview",
          "description": "<p>The dismissed pull request review.</p>"
        }
      ]
    },
    {
      "name": "importProject",
      "kind": "mutations",
      "id": "importproject",
      "href": "/graphql/reference/mutations#importproject",
      "description": "<p>Creates a new project by importing columns and a list of issues/PRs.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Import project preview",
        "description": "This preview adds support for importing projects.",
        "toggled_by": "slothette-preview",
        "toggled_on": [
          "Mutation.importProject"
        ],
        "owning_teams": [
          "@github/pe-issues-projects"
        ],
        "accept_header": "application/vnd.github.slothette-preview+json",
        "href": "/graphql/overview/schema-previews#import-project-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "ImportProjectInput!",
          "id": "importprojectinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#importprojectinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "project",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "description": "<p>The new Project!.</p>"
        }
      ]
    },
    {
      "name": "lockLockable",
      "kind": "mutations",
      "id": "locklockable",
      "href": "/graphql/reference/mutations#locklockable",
      "description": "<p>Lock a lockable object.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "LockLockableInput!",
          "id": "locklockableinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#locklockableinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "lockedRecord",
          "type": "Lockable",
          "id": "lockable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#lockable",
          "description": "<p>The item that was locked.</p>"
        }
      ]
    },
    {
      "name": "markPullRequestReadyForReview",
      "kind": "mutations",
      "id": "markpullrequestreadyforreview",
      "href": "/graphql/reference/mutations#markpullrequestreadyforreview",
      "description": "<p>Marks a pull request ready for review.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Draft pull requests preview",
        "description": "This preview adds support for draft pull requests.",
        "toggled_by": "shadow-cat-preview",
        "toggled_on": [
          "Mutation.markPullRequestReadyForReview",
          "CreatePullRequestInput.draft",
          "PullRequest.isDraft"
        ],
        "owning_teams": [
          "@github/pe-pull-requests"
        ],
        "accept_header": "application/vnd.github.shadow-cat-preview+json",
        "href": "/graphql/overview/schema-previews#draft-pull-requests-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "MarkPullRequestReadyForReviewInput!",
          "id": "markpullrequestreadyforreviewinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#markpullrequestreadyforreviewinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequest",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest",
          "description": "<p>The pull request that is ready for review.</p>"
        }
      ]
    },
    {
      "name": "mergePullRequest",
      "kind": "mutations",
      "id": "mergepullrequest",
      "href": "/graphql/reference/mutations#mergepullrequest",
      "description": "<p>Merge a pull request.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "MergePullRequestInput!",
          "id": "mergepullrequestinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#mergepullrequestinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequest",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest",
          "description": "<p>The pull request that was merged.</p>"
        }
      ]
    },
    {
      "name": "minimizeComment",
      "kind": "mutations",
      "id": "minimizecomment",
      "href": "/graphql/reference/mutations#minimizecomment",
      "description": "<p>Minimizes a comment on an Issue, Commit, Pull Request, or Gist.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Minimize comments preview",
        "description": "This preview adds support for minimizing comments on issues, pull requests, commits, and gists.",
        "toggled_by": "queen-beryl-preview",
        "toggled_on": [
          "Mutation.minimizeComment",
          "Mutation.unminimizeComment",
          "Minimizable"
        ],
        "owning_teams": [
          "@github/pe-community-and-safety"
        ],
        "accept_header": "application/vnd.github.queen-beryl-preview+json",
        "href": "/graphql/overview/schema-previews#minimize-comments-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "MinimizeCommentInput!",
          "id": "minimizecommentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#minimizecommentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "minimizedComment",
          "type": "Minimizable",
          "id": "minimizable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#minimizable",
          "description": "<p>The comment that was minimized.</p>"
        }
      ]
    },
    {
      "name": "moveProjectCard",
      "kind": "mutations",
      "id": "moveprojectcard",
      "href": "/graphql/reference/mutations#moveprojectcard",
      "description": "<p>Moves a project card to another place.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "MoveProjectCardInput!",
          "id": "moveprojectcardinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#moveprojectcardinput"
        }
      ],
      "returnFields": [
        {
          "name": "cardEdge",
          "type": "ProjectCardEdge",
          "id": "projectcardedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcardedge",
          "description": "<p>The new edge of the moved card.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "moveProjectColumn",
      "kind": "mutations",
      "id": "moveprojectcolumn",
      "href": "/graphql/reference/mutations#moveprojectcolumn",
      "description": "<p>Moves a project column to another place.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "MoveProjectColumnInput!",
          "id": "moveprojectcolumninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#moveprojectcolumninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "columnEdge",
          "type": "ProjectColumnEdge",
          "id": "projectcolumnedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcolumnedge",
          "description": "<p>The new edge of the moved column.</p>"
        }
      ]
    },
    {
      "name": "pinIssue",
      "kind": "mutations",
      "id": "pinissue",
      "href": "/graphql/reference/mutations#pinissue",
      "description": "<p>Pin an issue to a repository.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Pinned issues preview",
        "description": "This preview adds support for pinned issues.",
        "toggled_by": "elektra-preview",
        "toggled_on": [
          "Repository.pinnedIssues",
          "PinnedIssue",
          "PinnedIssueEdge",
          "PinnedIssueConnection",
          "Mutation.pinIssue",
          "Mutation.unpinIssue"
        ],
        "owning_teams": [
          "@github/pe-pull-requests"
        ],
        "accept_header": "application/vnd.github.elektra-preview+json",
        "href": "/graphql/overview/schema-previews#pinned-issues-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "PinIssueInput!",
          "id": "pinissueinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#pinissueinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "issue",
          "type": "Issue",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue",
          "description": "<p>The issue that was pinned.</p>"
        }
      ]
    },
    {
      "name": "removeAssigneesFromAssignable",
      "kind": "mutations",
      "id": "removeassigneesfromassignable",
      "href": "/graphql/reference/mutations#removeassigneesfromassignable",
      "description": "<p>Removes assignees from an assignable object.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "RemoveAssigneesFromAssignableInput!",
          "id": "removeassigneesfromassignableinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#removeassigneesfromassignableinput"
        }
      ],
      "returnFields": [
        {
          "name": "assignable",
          "type": "Assignable",
          "id": "assignable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#assignable",
          "description": "<p>The item that was unassigned.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "removeLabelsFromLabelable",
      "kind": "mutations",
      "id": "removelabelsfromlabelable",
      "href": "/graphql/reference/mutations#removelabelsfromlabelable",
      "description": "<p>Removes labels from a Labelable object.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "RemoveLabelsFromLabelableInput!",
          "id": "removelabelsfromlabelableinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#removelabelsfromlabelableinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "labelable",
          "type": "Labelable",
          "id": "labelable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#labelable",
          "description": "<p>The Labelable the labels were removed from.</p>"
        }
      ]
    },
    {
      "name": "removeOutsideCollaborator",
      "kind": "mutations",
      "id": "removeoutsidecollaborator",
      "href": "/graphql/reference/mutations#removeoutsidecollaborator",
      "description": "<p>Removes outside collaborator from all repositories in an organization.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "RemoveOutsideCollaboratorInput!",
          "id": "removeoutsidecollaboratorinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#removeoutsidecollaboratorinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "removedUser",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user",
          "description": "<p>The user that was removed as an outside collaborator.</p>"
        }
      ]
    },
    {
      "name": "removeReaction",
      "kind": "mutations",
      "id": "removereaction",
      "href": "/graphql/reference/mutations#removereaction",
      "description": "<p>Removes a reaction from a subject.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "RemoveReactionInput!",
          "id": "removereactioninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#removereactioninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "reaction",
          "type": "Reaction",
          "id": "reaction",
          "kind": "objects",
          "href": "/graphql/reference/objects#reaction",
          "description": "<p>The reaction object.</p>"
        },
        {
          "name": "subject",
          "type": "Reactable",
          "id": "reactable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#reactable",
          "description": "<p>The reactable subject.</p>"
        }
      ]
    },
    {
      "name": "removeStar",
      "kind": "mutations",
      "id": "removestar",
      "href": "/graphql/reference/mutations#removestar",
      "description": "<p>Removes a star from a Starrable.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "RemoveStarInput!",
          "id": "removestarinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#removestarinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "starrable",
          "type": "Starrable",
          "id": "starrable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#starrable",
          "description": "<p>The starrable.</p>"
        }
      ]
    },
    {
      "name": "reopenIssue",
      "kind": "mutations",
      "id": "reopenissue",
      "href": "/graphql/reference/mutations#reopenissue",
      "description": "<p>Reopen a issue.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "ReopenIssueInput!",
          "id": "reopenissueinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#reopenissueinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "issue",
          "type": "Issue",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue",
          "description": "<p>The issue that was opened.</p>"
        }
      ]
    },
    {
      "name": "reopenPullRequest",
      "kind": "mutations",
      "id": "reopenpullrequest",
      "href": "/graphql/reference/mutations#reopenpullrequest",
      "description": "<p>Reopen a pull request.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "ReopenPullRequestInput!",
          "id": "reopenpullrequestinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#reopenpullrequestinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequest",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest",
          "description": "<p>The pull request that was reopened.</p>"
        }
      ]
    },
    {
      "name": "requestReviews",
      "kind": "mutations",
      "id": "requestreviews",
      "href": "/graphql/reference/mutations#requestreviews",
      "description": "<p>Set review requests on a pull request.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "RequestReviewsInput!",
          "id": "requestreviewsinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#requestreviewsinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequest",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest",
          "description": "<p>The pull request that is getting requests.</p>"
        },
        {
          "name": "requestedReviewersEdge",
          "type": "UserEdge",
          "id": "useredge",
          "kind": "objects",
          "href": "/graphql/reference/objects#useredge",
          "description": "<p>The edge from the pull request to the requested reviewers.</p>"
        }
      ]
    },
    {
      "name": "rerequestCheckSuite",
      "kind": "mutations",
      "id": "rerequestchecksuite",
      "href": "/graphql/reference/mutations#rerequestchecksuite",
      "description": "<p>Rerequests an existing check suite.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "RerequestCheckSuiteInput!",
          "id": "rerequestchecksuiteinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#rerequestchecksuiteinput"
        }
      ],
      "returnFields": [
        {
          "name": "checkSuite",
          "type": "CheckSuite",
          "id": "checksuite",
          "kind": "objects",
          "href": "/graphql/reference/objects#checksuite",
          "description": "<p>The requested check suite.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "resolveReviewThread",
      "kind": "mutations",
      "id": "resolvereviewthread",
      "href": "/graphql/reference/mutations#resolvereviewthread",
      "description": "<p>Marks a review thread as resolved.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "ResolveReviewThreadInput!",
          "id": "resolvereviewthreadinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#resolvereviewthreadinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "thread",
          "type": "PullRequestReviewThread",
          "id": "pullrequestreviewthread",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewthread",
          "description": "<p>The thread to resolve.</p>"
        }
      ]
    },
    {
      "name": "submitPullRequestReview",
      "kind": "mutations",
      "id": "submitpullrequestreview",
      "href": "/graphql/reference/mutations#submitpullrequestreview",
      "description": "<p>Submits a pending pull request review.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "SubmitPullRequestReviewInput!",
          "id": "submitpullrequestreviewinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#submitpullrequestreviewinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequestReview",
          "type": "PullRequestReview",
          "id": "pullrequestreview",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreview",
          "description": "<p>The submitted pull request review.</p>"
        }
      ]
    },
    {
      "name": "unlockLockable",
      "kind": "mutations",
      "id": "unlocklockable",
      "href": "/graphql/reference/mutations#unlocklockable",
      "description": "<p>Unlock a lockable object.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UnlockLockableInput!",
          "id": "unlocklockableinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#unlocklockableinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "unlockedRecord",
          "type": "Lockable",
          "id": "lockable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#lockable",
          "description": "<p>The item that was unlocked.</p>"
        }
      ]
    },
    {
      "name": "unmarkIssueAsDuplicate",
      "kind": "mutations",
      "id": "unmarkissueasduplicate",
      "href": "/graphql/reference/mutations#unmarkissueasduplicate",
      "description": "<p>Unmark an issue as a duplicate of another issue.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UnmarkIssueAsDuplicateInput!",
          "id": "unmarkissueasduplicateinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#unmarkissueasduplicateinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "duplicate",
          "type": "IssueOrPullRequest",
          "id": "issueorpullrequest",
          "kind": "unions",
          "href": "/graphql/reference/unions#issueorpullrequest",
          "description": "<p>The issue or pull request that was marked as a duplicate.</p>"
        }
      ]
    },
    {
      "name": "unminimizeComment",
      "kind": "mutations",
      "id": "unminimizecomment",
      "href": "/graphql/reference/mutations#unminimizecomment",
      "description": "<p>Unminimizes a comment on an Issue, Commit, Pull Request, or Gist.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Minimize comments preview",
        "description": "This preview adds support for minimizing comments on issues, pull requests, commits, and gists.",
        "toggled_by": "queen-beryl-preview",
        "toggled_on": [
          "Mutation.minimizeComment",
          "Mutation.unminimizeComment",
          "Minimizable"
        ],
        "owning_teams": [
          "@github/pe-community-and-safety"
        ],
        "accept_header": "application/vnd.github.queen-beryl-preview+json",
        "href": "/graphql/overview/schema-previews#minimize-comments-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "UnminimizeCommentInput!",
          "id": "unminimizecommentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#unminimizecommentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "unminimizedComment",
          "type": "Minimizable",
          "id": "minimizable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#minimizable",
          "description": "<p>The comment that was unminimized.</p>"
        }
      ]
    },
    {
      "name": "unpinIssue",
      "kind": "mutations",
      "id": "unpinissue",
      "href": "/graphql/reference/mutations#unpinissue",
      "description": "<p>Unpin a pinned issue from a repository.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Pinned issues preview",
        "description": "This preview adds support for pinned issues.",
        "toggled_by": "elektra-preview",
        "toggled_on": [
          "Repository.pinnedIssues",
          "PinnedIssue",
          "PinnedIssueEdge",
          "PinnedIssueConnection",
          "Mutation.pinIssue",
          "Mutation.unpinIssue"
        ],
        "owning_teams": [
          "@github/pe-pull-requests"
        ],
        "accept_header": "application/vnd.github.elektra-preview+json",
        "href": "/graphql/overview/schema-previews#pinned-issues-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "UnpinIssueInput!",
          "id": "unpinissueinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#unpinissueinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "issue",
          "type": "Issue",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue",
          "description": "<p>The issue that was unpinned.</p>"
        }
      ]
    },
    {
      "name": "unresolveReviewThread",
      "kind": "mutations",
      "id": "unresolvereviewthread",
      "href": "/graphql/reference/mutations#unresolvereviewthread",
      "description": "<p>Marks a review thread as unresolved.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UnresolveReviewThreadInput!",
          "id": "unresolvereviewthreadinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#unresolvereviewthreadinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "thread",
          "type": "PullRequestReviewThread",
          "id": "pullrequestreviewthread",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewthread",
          "description": "<p>The thread to resolve.</p>"
        }
      ]
    },
    {
      "name": "updateBranchProtectionRule",
      "kind": "mutations",
      "id": "updatebranchprotectionrule",
      "href": "/graphql/reference/mutations#updatebranchprotectionrule",
      "description": "<p>Create a new branch protection rule.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateBranchProtectionRuleInput!",
          "id": "updatebranchprotectionruleinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updatebranchprotectionruleinput"
        }
      ],
      "returnFields": [
        {
          "name": "branchProtectionRule",
          "type": "BranchProtectionRule",
          "id": "branchprotectionrule",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionrule",
          "description": "<p>The newly created BranchProtectionRule.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "updateCheckRun",
      "kind": "mutations",
      "id": "updatecheckrun",
      "href": "/graphql/reference/mutations#updatecheckrun",
      "description": "<p>Update a check run.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateCheckRunInput!",
          "id": "updatecheckruninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updatecheckruninput"
        }
      ],
      "returnFields": [
        {
          "name": "checkRun",
          "type": "CheckRun",
          "id": "checkrun",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkrun",
          "description": "<p>The updated check run.</p>"
        },
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        }
      ]
    },
    {
      "name": "updateCheckSuitePreferences",
      "kind": "mutations",
      "id": "updatechecksuitepreferences",
      "href": "/graphql/reference/mutations#updatechecksuitepreferences",
      "description": "<p>Modifies the settings of an existing check suite.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateCheckSuitePreferencesInput!",
          "id": "updatechecksuitepreferencesinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updatechecksuitepreferencesinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "repository",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository",
          "description": "<p>The updated repository.</p>"
        }
      ]
    },
    {
      "name": "updateIssue",
      "kind": "mutations",
      "id": "updateissue",
      "href": "/graphql/reference/mutations#updateissue",
      "description": "<p>Updates an Issue.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateIssueInput!",
          "id": "updateissueinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateissueinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "issue",
          "type": "Issue",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue",
          "description": "<p>The issue.</p>"
        }
      ]
    },
    {
      "name": "updateIssueComment",
      "kind": "mutations",
      "id": "updateissuecomment",
      "href": "/graphql/reference/mutations#updateissuecomment",
      "description": "<p>Updates an IssueComment object.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateIssueCommentInput!",
          "id": "updateissuecommentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateissuecommentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "issueComment",
          "type": "IssueComment",
          "id": "issuecomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuecomment",
          "description": "<p>The updated comment.</p>"
        }
      ]
    },
    {
      "name": "updateLabel",
      "kind": "mutations",
      "id": "updatelabel",
      "href": "/graphql/reference/mutations#updatelabel",
      "description": "<p>Updates an existing label.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Labels preview",
        "description": "This preview adds support for adding, updating, creating and deleting labels.",
        "toggled_by": "bane-preview",
        "toggled_on": [
          "Mutation.createLabel",
          "Mutation.deleteLabel",
          "Mutation.updateLabel"
        ],
        "owning_teams": [
          "@github/pe-pull-requests"
        ],
        "accept_header": "application/vnd.github.bane-preview+json",
        "href": "/graphql/overview/schema-previews#labels-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateLabelInput!",
          "id": "updatelabelinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updatelabelinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "label",
          "type": "Label",
          "id": "label",
          "kind": "objects",
          "href": "/graphql/reference/objects#label",
          "description": "<p>The updated label.</p>"
        }
      ]
    },
    {
      "name": "updateProject",
      "kind": "mutations",
      "id": "updateproject",
      "href": "/graphql/reference/mutations#updateproject",
      "description": "<p>Updates an existing project.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateProjectInput!",
          "id": "updateprojectinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateprojectinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "project",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "description": "<p>The updated project.</p>"
        }
      ]
    },
    {
      "name": "updateProjectCard",
      "kind": "mutations",
      "id": "updateprojectcard",
      "href": "/graphql/reference/mutations#updateprojectcard",
      "description": "<p>Updates an existing project card.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateProjectCardInput!",
          "id": "updateprojectcardinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateprojectcardinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "projectCard",
          "type": "ProjectCard",
          "id": "projectcard",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcard",
          "description": "<p>The updated ProjectCard.</p>"
        }
      ]
    },
    {
      "name": "updateProjectColumn",
      "kind": "mutations",
      "id": "updateprojectcolumn",
      "href": "/graphql/reference/mutations#updateprojectcolumn",
      "description": "<p>Updates an existing project column.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateProjectColumnInput!",
          "id": "updateprojectcolumninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateprojectcolumninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "projectColumn",
          "type": "ProjectColumn",
          "id": "projectcolumn",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcolumn",
          "description": "<p>The updated project column.</p>"
        }
      ]
    },
    {
      "name": "updatePullRequest",
      "kind": "mutations",
      "id": "updatepullrequest",
      "href": "/graphql/reference/mutations#updatepullrequest",
      "description": "<p>Update a pull request.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdatePullRequestInput!",
          "id": "updatepullrequestinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updatepullrequestinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequest",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest",
          "description": "<p>The updated pull request.</p>"
        }
      ]
    },
    {
      "name": "updatePullRequestReview",
      "kind": "mutations",
      "id": "updatepullrequestreview",
      "href": "/graphql/reference/mutations#updatepullrequestreview",
      "description": "<p>Updates the body of a pull request review.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdatePullRequestReviewInput!",
          "id": "updatepullrequestreviewinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updatepullrequestreviewinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequestReview",
          "type": "PullRequestReview",
          "id": "pullrequestreview",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreview",
          "description": "<p>The updated pull request review.</p>"
        }
      ]
    },
    {
      "name": "updatePullRequestReviewComment",
      "kind": "mutations",
      "id": "updatepullrequestreviewcomment",
      "href": "/graphql/reference/mutations#updatepullrequestreviewcomment",
      "description": "<p>Updates a pull request review comment.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdatePullRequestReviewCommentInput!",
          "id": "updatepullrequestreviewcommentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updatepullrequestreviewcommentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "pullRequestReviewComment",
          "type": "PullRequestReviewComment",
          "id": "pullrequestreviewcomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewcomment",
          "description": "<p>The updated comment.</p>"
        }
      ]
    },
    {
      "name": "updateSubscription",
      "kind": "mutations",
      "id": "updatesubscription",
      "href": "/graphql/reference/mutations#updatesubscription",
      "description": "<p>Updates the state for subscribable subjects.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateSubscriptionInput!",
          "id": "updatesubscriptioninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updatesubscriptioninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "subscribable",
          "type": "Subscribable",
          "id": "subscribable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#subscribable",
          "description": "<p>The input subscribable entity.</p>"
        }
      ]
    },
    {
      "name": "updateTeamDiscussion",
      "kind": "mutations",
      "id": "updateteamdiscussion",
      "href": "/graphql/reference/mutations#updateteamdiscussion",
      "description": "<p>Updates a team discussion.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Team discussions preview",
        "description": "Adds support for reading and managing discussions within teams.",
        "toggled_by": "echo-preview",
        "toggled_on": [
          "Mutation.createTeamDiscussion",
          "Mutation.createTeamDiscussionComment",
          "Mutation.deleteTeamDiscussion",
          "Mutation.deleteTeamDiscussionComment",
          "Mutation.updateTeamDiscussion",
          "Mutation.updateTeamDiscussionComment",
          "Team.discussion",
          "Team.discussions",
          "Team.discussionsResourcePath",
          "Team.discussionsUrl",
          "TeamDiscussion",
          "TeamDiscussionComment",
          "TeamDiscussionCommentConnection",
          "TeamDiscussionCommentEdge",
          "TeamDiscussionCommentOrder",
          "TeamDiscussionCommentOrderField",
          "TeamDiscussionConnection",
          "TeamDiscussionEdge",
          "TeamDiscussionOrder",
          "TeamDiscussionOrderField"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.echo-preview+json",
        "href": "/graphql/overview/schema-previews#team-discussions-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateTeamDiscussionInput!",
          "id": "updateteamdiscussioninput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateteamdiscussioninput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "teamDiscussion",
          "type": "TeamDiscussion",
          "id": "teamdiscussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussion",
          "description": "<p>The updated discussion.</p>"
        }
      ]
    },
    {
      "name": "updateTeamDiscussionComment",
      "kind": "mutations",
      "id": "updateteamdiscussioncomment",
      "href": "/graphql/reference/mutations#updateteamdiscussioncomment",
      "description": "<p>Updates a discussion comment.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Team discussions preview",
        "description": "Adds support for reading and managing discussions within teams.",
        "toggled_by": "echo-preview",
        "toggled_on": [
          "Mutation.createTeamDiscussion",
          "Mutation.createTeamDiscussionComment",
          "Mutation.deleteTeamDiscussion",
          "Mutation.deleteTeamDiscussionComment",
          "Mutation.updateTeamDiscussion",
          "Mutation.updateTeamDiscussionComment",
          "Team.discussion",
          "Team.discussions",
          "Team.discussionsResourcePath",
          "Team.discussionsUrl",
          "TeamDiscussion",
          "TeamDiscussionComment",
          "TeamDiscussionCommentConnection",
          "TeamDiscussionCommentEdge",
          "TeamDiscussionCommentOrder",
          "TeamDiscussionCommentOrderField",
          "TeamDiscussionConnection",
          "TeamDiscussionEdge",
          "TeamDiscussionOrder",
          "TeamDiscussionOrderField"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.echo-preview+json",
        "href": "/graphql/overview/schema-previews#team-discussions-preview"
      },
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateTeamDiscussionCommentInput!",
          "id": "updateteamdiscussioncommentinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updateteamdiscussioncommentinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "teamDiscussionComment",
          "type": "TeamDiscussionComment",
          "id": "teamdiscussioncomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussioncomment",
          "description": "<p>The updated comment.</p>"
        }
      ]
    },
    {
      "name": "updateTopics",
      "kind": "mutations",
      "id": "updatetopics",
      "href": "/graphql/reference/mutations#updatetopics",
      "description": "<p>Replaces the repository's topics with the given topics.</p>",
      "inputFields": [
        {
          "name": "input",
          "type": "UpdateTopicsInput!",
          "id": "updatetopicsinput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#updatetopicsinput"
        }
      ],
      "returnFields": [
        {
          "name": "clientMutationId",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>A unique identifier for the client performing the mutation.</p>"
        },
        {
          "name": "invalidTopicNames",
          "type": "[String!]",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "description": "<p>Names of the provided topics that are not valid.</p>"
        },
        {
          "name": "repository",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository",
          "description": "<p>The updated repository.</p>"
        }
      ]
    }
  ],
  "objects": [
    {
      "name": "AddedToProjectEvent",
      "kind": "objects",
      "id": "addedtoprojectevent",
      "href": "/graphql/reference/objects#addedtoprojectevent",
      "description": "<p>Represents a<code>added_to_project</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "project",
          "description": "<p>Project referenced by event.</p>",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "isDeprecated": false,
          "preview": {
            "title": "Project event details preview",
            "description": "This preview adds project, project card, and project column details to project-related issue events.",
            "toggled_by": "starfox-preview",
            "toggled_on": [
              "AddedToProjectEvent.project",
              "AddedToProjectEvent.projectCard",
              "AddedToProjectEvent.projectColumnName",
              "ConvertedNoteToIssueEvent.project",
              "ConvertedNoteToIssueEvent.projectCard",
              "ConvertedNoteToIssueEvent.projectColumnName",
              "MovedColumnsInProjectEvent.project",
              "MovedColumnsInProjectEvent.projectCard",
              "MovedColumnsInProjectEvent.projectColumnName",
              "MovedColumnsInProjectEvent.previousProjectColumnName",
              "RemovedFromProjectEvent.project",
              "RemovedFromProjectEvent.projectColumnName"
            ],
            "owning_teams": [
              "@github/github-projects"
            ],
            "accept_header": "application/vnd.github.starfox-preview+json",
            "href": "/graphql/overview/schema-previews#project-event-details-preview"
          }
        },
        {
          "name": "projectCard",
          "description": "<p>Project card referenced by this project event.</p>",
          "type": "ProjectCard",
          "id": "projectcard",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcard",
          "isDeprecated": false,
          "preview": {
            "title": "Project event details preview",
            "description": "This preview adds project, project card, and project column details to project-related issue events.",
            "toggled_by": "starfox-preview",
            "toggled_on": [
              "AddedToProjectEvent.project",
              "AddedToProjectEvent.projectCard",
              "AddedToProjectEvent.projectColumnName",
              "ConvertedNoteToIssueEvent.project",
              "ConvertedNoteToIssueEvent.projectCard",
              "ConvertedNoteToIssueEvent.projectColumnName",
              "MovedColumnsInProjectEvent.project",
              "MovedColumnsInProjectEvent.projectCard",
              "MovedColumnsInProjectEvent.projectColumnName",
              "MovedColumnsInProjectEvent.previousProjectColumnName",
              "RemovedFromProjectEvent.project",
              "RemovedFromProjectEvent.projectColumnName"
            ],
            "owning_teams": [
              "@github/github-projects"
            ],
            "accept_header": "application/vnd.github.starfox-preview+json",
            "href": "/graphql/overview/schema-previews#project-event-details-preview"
          }
        },
        {
          "name": "projectColumnName",
          "description": "<p>Column name referenced by this project event.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "isDeprecated": false,
          "preview": {
            "title": "Project event details preview",
            "description": "This preview adds project, project card, and project column details to project-related issue events.",
            "toggled_by": "starfox-preview",
            "toggled_on": [
              "AddedToProjectEvent.project",
              "AddedToProjectEvent.projectCard",
              "AddedToProjectEvent.projectColumnName",
              "ConvertedNoteToIssueEvent.project",
              "ConvertedNoteToIssueEvent.projectCard",
              "ConvertedNoteToIssueEvent.projectColumnName",
              "MovedColumnsInProjectEvent.project",
              "MovedColumnsInProjectEvent.projectCard",
              "MovedColumnsInProjectEvent.projectColumnName",
              "MovedColumnsInProjectEvent.previousProjectColumnName",
              "RemovedFromProjectEvent.project",
              "RemovedFromProjectEvent.projectColumnName"
            ],
            "owning_teams": [
              "@github/github-projects"
            ],
            "accept_header": "application/vnd.github.starfox-preview+json",
            "href": "/graphql/overview/schema-previews#project-event-details-preview"
          }
        }
      ]
    },
    {
      "name": "App",
      "kind": "objects",
      "id": "app",
      "href": "/graphql/reference/objects#app",
      "description": "<p>A GitHub App.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "description",
          "description": "<p>The description of the app.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "logoBackgroundColor",
          "description": "<p>The hex color code, without the leading '#', for the logo background.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "logoUrl",
          "description": "<p>A URL pointing to the app's logo.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri",
          "arguments": [
            {
              "name": "size",
              "description": "<p>The size of the resulting image.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "name",
          "description": "<p>The name of the app.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "slug",
          "description": "<p>A slug based on the name of the app for use in URLs.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The URL to the app's homepage.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "AssignedEvent",
      "kind": "objects",
      "id": "assignedevent",
      "href": "/graphql/reference/objects#assignedevent",
      "description": "<p>Represents an<code>assigned</code>event on any assignable object.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "assignable",
          "description": "<p>Identifies the assignable associated with the event.</p>",
          "type": "Assignable!",
          "id": "assignable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#assignable"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "user",
          "description": "<p>Identifies the user who was assigned.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "BaseRefChangedEvent",
      "kind": "objects",
      "id": "baserefchangedevent",
      "href": "/graphql/reference/objects#baserefchangedevent",
      "description": "<p>Represents a<code>base_ref_changed</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "BaseRefForcePushedEvent",
      "kind": "objects",
      "id": "baserefforcepushedevent",
      "href": "/graphql/reference/objects#baserefforcepushedevent",
      "description": "<p>Represents a<code>base_ref_force_pushed</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "afterCommit",
          "description": "<p>Identifies the after commit SHA for the<code>base_ref_force_pushed</code>event.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "beforeCommit",
          "description": "<p>Identifies the before commit SHA for the<code>base_ref_force_pushed</code>event.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "ref",
          "description": "<p>Identifies the fully qualified ref name for the<code>base_ref_force_pushed</code>event.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        }
      ]
    },
    {
      "name": "Blame",
      "kind": "objects",
      "id": "blame",
      "href": "/graphql/reference/objects#blame",
      "description": "<p>Represents a Git blame.</p>",
      "fields": [
        {
          "name": "ranges",
          "description": "<p>The list of ranges from a Git blame.</p>",
          "type": "[BlameRange!]!",
          "id": "blamerange",
          "kind": "objects",
          "href": "/graphql/reference/objects#blamerange"
        }
      ]
    },
    {
      "name": "BlameRange",
      "kind": "objects",
      "id": "blamerange",
      "href": "/graphql/reference/objects#blamerange",
      "description": "<p>Represents a range of information from a Git blame.</p>",
      "fields": [
        {
          "name": "age",
          "description": "<p>Identifies the recency of the change, from 1 (new) to 10 (old). This is\ncalculated as a 2-quantile and determines the length of distance between the\nmedian age of all the changes in the file and the recency of the current\nrange's change.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "commit",
          "description": "<p>Identifies the line author.</p>",
          "type": "Commit!",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "endingLine",
          "description": "<p>The ending line for the range.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "startingLine",
          "description": "<p>The starting line for the range.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "Blob",
      "kind": "objects",
      "id": "blob",
      "href": "/graphql/reference/objects#blob",
      "description": "<p>Represents a Git blob.</p>",
      "implements": [
        {
          "name": "GitObject",
          "id": "gitobject",
          "href": "/graphql/reference/interfaces#gitobject"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "abbreviatedOid",
          "description": "<p>An abbreviated version of the Git object ID.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "byteSize",
          "description": "<p>Byte size of Blob object.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "commitResourcePath",
          "description": "<p>The HTTP path for this Git object.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "commitUrl",
          "description": "<p>The HTTP URL for this Git object.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "isBinary",
          "description": "<p>Indicates whether the Blob is binary or text.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isTruncated",
          "description": "<p>Indicates whether the contents is truncated.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "oid",
          "description": "<p>The Git object ID.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "repository",
          "description": "<p>The Repository the Git object belongs to.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "text",
          "description": "<p>UTF8 text data or null if the Blob is binary.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "Bot",
      "kind": "objects",
      "id": "bot",
      "href": "/graphql/reference/objects#bot",
      "description": "<p>A special type of user which takes actions on behalf of GitHub Apps.</p>",
      "implements": [
        {
          "name": "Actor",
          "id": "actor",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "avatarUrl",
          "description": "<p>A URL pointing to the GitHub App's public avatar.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri",
          "arguments": [
            {
              "name": "size",
              "description": "<p>The size of the resulting square image.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "login",
          "description": "<p>The username of the actor.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this bot.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this bot.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "BranchProtectionRule",
      "kind": "objects",
      "id": "branchprotectionrule",
      "href": "/graphql/reference/objects#branchprotectionrule",
      "description": "<p>A branch protection rule.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "branchProtectionRuleConflicts",
          "description": "<p>A list of conflicts matching branches protection rule and other branch protection rules.</p>",
          "type": "BranchProtectionRuleConflictConnection!",
          "id": "branchprotectionruleconflictconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionruleconflictconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "creator",
          "description": "<p>The actor who created this branch protection rule.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "dismissesStaleReviews",
          "description": "<p>Will new commits pushed to matching branches dismiss pull request review approvals.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isAdminEnforced",
          "description": "<p>Can admins overwrite branch protection.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "matchingRefs",
          "description": "<p>Repository refs that are protected by this rule.</p>",
          "type": "RefConnection!",
          "id": "refconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#refconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "pattern",
          "description": "<p>Identifies the protection rule pattern.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pushAllowances",
          "description": "<p>A list push allowances for this branch protection rule.</p>",
          "type": "PushAllowanceConnection!",
          "id": "pushallowanceconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pushallowanceconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this branch protection rule.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "requiredApprovingReviewCount",
          "description": "<p>Number of approving reviews required to update matching branches.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "requiredStatusCheckContexts",
          "description": "<p>List of required status check contexts that must pass for commits to be accepted to matching branches.</p>",
          "type": "[String]",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "requiresApprovingReviews",
          "description": "<p>Are approving reviews required to update matching branches.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresCommitSignatures",
          "description": "<p>Are commits required to be signed.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresStatusChecks",
          "description": "<p>Are status checks required to update matching branches.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresStrictStatusChecks",
          "description": "<p>Are branches required to be up to date before merging.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "restrictsPushes",
          "description": "<p>Is pushing to matching branches restricted.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "restrictsReviewDismissals",
          "description": "<p>Is dismissal of pull request reviews restricted.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "reviewDismissalAllowances",
          "description": "<p>A list review dismissal allowances for this branch protection rule.</p>",
          "type": "ReviewDismissalAllowanceConnection!",
          "id": "reviewdismissalallowanceconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reviewdismissalallowanceconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "BranchProtectionRuleConflict",
      "kind": "objects",
      "id": "branchprotectionruleconflict",
      "href": "/graphql/reference/objects#branchprotectionruleconflict",
      "description": "<p>A conflict between two branch protection rules.</p>",
      "fields": [
        {
          "name": "branchProtectionRule",
          "description": "<p>Identifies the branch protection rule.</p>",
          "type": "BranchProtectionRule",
          "id": "branchprotectionrule",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionrule"
        },
        {
          "name": "conflictingBranchProtectionRule",
          "description": "<p>Identifies the conflicting branch protection rule.</p>",
          "type": "BranchProtectionRule",
          "id": "branchprotectionrule",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionrule"
        },
        {
          "name": "ref",
          "description": "<p>Identifies the branch ref that has conflicting rules.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        }
      ]
    },
    {
      "name": "BranchProtectionRuleConflictConnection",
      "kind": "objects",
      "id": "branchprotectionruleconflictconnection",
      "href": "/graphql/reference/objects#branchprotectionruleconflictconnection",
      "description": "<p>The connection type for BranchProtectionRuleConflict.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[BranchProtectionRuleConflictEdge]",
          "id": "branchprotectionruleconflictedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionruleconflictedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[BranchProtectionRuleConflict]",
          "id": "branchprotectionruleconflict",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionruleconflict"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "BranchProtectionRuleConflictEdge",
      "kind": "objects",
      "id": "branchprotectionruleconflictedge",
      "href": "/graphql/reference/objects#branchprotectionruleconflictedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "BranchProtectionRuleConflict",
          "id": "branchprotectionruleconflict",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionruleconflict"
        }
      ]
    },
    {
      "name": "BranchProtectionRuleConnection",
      "kind": "objects",
      "id": "branchprotectionruleconnection",
      "href": "/graphql/reference/objects#branchprotectionruleconnection",
      "description": "<p>The connection type for BranchProtectionRule.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[BranchProtectionRuleEdge]",
          "id": "branchprotectionruleedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionruleedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[BranchProtectionRule]",
          "id": "branchprotectionrule",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionrule"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "BranchProtectionRuleEdge",
      "kind": "objects",
      "id": "branchprotectionruleedge",
      "href": "/graphql/reference/objects#branchprotectionruleedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "BranchProtectionRule",
          "id": "branchprotectionrule",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionrule"
        }
      ]
    },
    {
      "name": "CheckAnnotation",
      "kind": "objects",
      "id": "checkannotation",
      "href": "/graphql/reference/objects#checkannotation",
      "description": "<p>A single check annotation.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "fields": [
        {
          "name": "annotationLevel",
          "description": "<p>The annotation's severity level.</p>",
          "type": "CheckAnnotationLevel",
          "id": "checkannotationlevel",
          "kind": "enums",
          "href": "/graphql/reference/enums#checkannotationlevel"
        },
        {
          "name": "blobUrl",
          "description": "<p>The path to the file that this annotation was made on.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "location",
          "description": "<p>The position of this annotation.</p>",
          "type": "CheckAnnotationSpan!",
          "id": "checkannotationspan",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkannotationspan"
        },
        {
          "name": "message",
          "description": "<p>The annotation's message.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "path",
          "description": "<p>The path that this annotation was made on.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "rawDetails",
          "description": "<p>Additional information about the annotation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "title",
          "description": "<p>The annotation's title.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "CheckAnnotationConnection",
      "kind": "objects",
      "id": "checkannotationconnection",
      "href": "/graphql/reference/objects#checkannotationconnection",
      "description": "<p>The connection type for CheckAnnotation.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[CheckAnnotationEdge]",
          "id": "checkannotationedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkannotationedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[CheckAnnotation]",
          "id": "checkannotation",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkannotation",
          "isDeprecated": false,
          "preview": {
            "title": "Checks preview",
            "description": "This preview adds support for reading checks created by GitHub Apps.",
            "toggled_by": "antiope-preview",
            "toggled_on": [
              "CheckAnnotationRange",
              "CheckAnnotationPosition",
              "CheckAnnotationSpan",
              "CheckAnnotation",
              "CheckAnnotationConnection.nodes",
              "CheckAnnotationData",
              "CheckAnnotationEdge.node",
              "CheckAnnotationLevel",
              "CheckConclusionState",
              "CheckStatusState",
              "CheckSuiteAutoTriggerPreference",
              "CheckRun",
              "CheckRunConnection.nodes",
              "CheckRunEdge.node",
              "CheckRunAction",
              "CheckRunFilter",
              "CheckRunOutput",
              "CheckRunOutputImage",
              "CheckRunType",
              "CheckSuite",
              "CheckSuiteConnection.nodes",
              "CheckSuiteEdge.node",
              "CheckSuiteFilter",
              "Commit.checkSuites",
              "Mutation.createCheckRun",
              "Mutation.createCheckSuite",
              "Mutation.rerequestCheckSuite",
              "Mutation.updateCheckRun",
              "Mutation.updateCheckSuitePreferences",
              "Push",
              "RequestableCheckStatusState"
            ],
            "owning_teams": [
              "@github/ecosystem-primitives"
            ],
            "accept_header": "application/vnd.github.antiope-preview+json",
            "href": "/graphql/overview/schema-previews#checks-preview"
          }
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CheckAnnotationEdge",
      "kind": "objects",
      "id": "checkannotationedge",
      "href": "/graphql/reference/objects#checkannotationedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "CheckAnnotation",
          "id": "checkannotation",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkannotation",
          "isDeprecated": false,
          "preview": {
            "title": "Checks preview",
            "description": "This preview adds support for reading checks created by GitHub Apps.",
            "toggled_by": "antiope-preview",
            "toggled_on": [
              "CheckAnnotationRange",
              "CheckAnnotationPosition",
              "CheckAnnotationSpan",
              "CheckAnnotation",
              "CheckAnnotationConnection.nodes",
              "CheckAnnotationData",
              "CheckAnnotationEdge.node",
              "CheckAnnotationLevel",
              "CheckConclusionState",
              "CheckStatusState",
              "CheckSuiteAutoTriggerPreference",
              "CheckRun",
              "CheckRunConnection.nodes",
              "CheckRunEdge.node",
              "CheckRunAction",
              "CheckRunFilter",
              "CheckRunOutput",
              "CheckRunOutputImage",
              "CheckRunType",
              "CheckSuite",
              "CheckSuiteConnection.nodes",
              "CheckSuiteEdge.node",
              "CheckSuiteFilter",
              "Commit.checkSuites",
              "Mutation.createCheckRun",
              "Mutation.createCheckSuite",
              "Mutation.rerequestCheckSuite",
              "Mutation.updateCheckRun",
              "Mutation.updateCheckSuitePreferences",
              "Push",
              "RequestableCheckStatusState"
            ],
            "owning_teams": [
              "@github/ecosystem-primitives"
            ],
            "accept_header": "application/vnd.github.antiope-preview+json",
            "href": "/graphql/overview/schema-previews#checks-preview"
          }
        }
      ]
    },
    {
      "name": "CheckAnnotationPosition",
      "kind": "objects",
      "id": "checkannotationposition",
      "href": "/graphql/reference/objects#checkannotationposition",
      "description": "<p>A character position in a check annotation.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "fields": [
        {
          "name": "column",
          "description": "<p>Column number (1 indexed).</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "line",
          "description": "<p>Line number (1 indexed).</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CheckAnnotationSpan",
      "kind": "objects",
      "id": "checkannotationspan",
      "href": "/graphql/reference/objects#checkannotationspan",
      "description": "<p>An inclusive pair of positions for a check annotation.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "fields": [
        {
          "name": "end",
          "description": "<p>End position (inclusive).</p>",
          "type": "CheckAnnotationPosition!",
          "id": "checkannotationposition",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkannotationposition"
        },
        {
          "name": "start",
          "description": "<p>Start position (inclusive).</p>",
          "type": "CheckAnnotationPosition!",
          "id": "checkannotationposition",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkannotationposition"
        }
      ]
    },
    {
      "name": "CheckRun",
      "kind": "objects",
      "id": "checkrun",
      "href": "/graphql/reference/objects#checkrun",
      "description": "<p>A check run.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "annotations",
          "description": "<p>The check run's annotations.</p>",
          "type": "CheckAnnotationConnection",
          "id": "checkannotationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkannotationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "checkSuite",
          "description": "<p>The check suite that this run is a part of.</p>",
          "type": "CheckSuite!",
          "id": "checksuite",
          "kind": "objects",
          "href": "/graphql/reference/objects#checksuite"
        },
        {
          "name": "completedAt",
          "description": "<p>Identifies the date and time when the check run was completed.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "conclusion",
          "description": "<p>The conclusion of the check run.</p>",
          "type": "CheckConclusionState",
          "id": "checkconclusionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#checkconclusionstate"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "detailsUrl",
          "description": "<p>The URL from which to find full details of the check run on the integrator's site.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "externalId",
          "description": "<p>A reference for the check run on the integrator's system.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The name of the check for this check run.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "permalink",
          "description": "<p>The permalink to the check run summary.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this check run.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this check run.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "startedAt",
          "description": "<p>Identifies the date and time when the check run was started.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "status",
          "description": "<p>The current status of the check run.</p>",
          "type": "CheckStatusState!",
          "id": "checkstatusstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#checkstatusstate"
        },
        {
          "name": "summary",
          "description": "<p>A string representing the check run's summary.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "text",
          "description": "<p>A string representing the check run's text.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "title",
          "description": "<p>A string representing the check run.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this check run.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "CheckRunConnection",
      "kind": "objects",
      "id": "checkrunconnection",
      "href": "/graphql/reference/objects#checkrunconnection",
      "description": "<p>The connection type for CheckRun.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[CheckRunEdge]",
          "id": "checkrunedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkrunedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[CheckRun]",
          "id": "checkrun",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkrun",
          "isDeprecated": false,
          "preview": {
            "title": "Checks preview",
            "description": "This preview adds support for reading checks created by GitHub Apps.",
            "toggled_by": "antiope-preview",
            "toggled_on": [
              "CheckAnnotationRange",
              "CheckAnnotationPosition",
              "CheckAnnotationSpan",
              "CheckAnnotation",
              "CheckAnnotationConnection.nodes",
              "CheckAnnotationData",
              "CheckAnnotationEdge.node",
              "CheckAnnotationLevel",
              "CheckConclusionState",
              "CheckStatusState",
              "CheckSuiteAutoTriggerPreference",
              "CheckRun",
              "CheckRunConnection.nodes",
              "CheckRunEdge.node",
              "CheckRunAction",
              "CheckRunFilter",
              "CheckRunOutput",
              "CheckRunOutputImage",
              "CheckRunType",
              "CheckSuite",
              "CheckSuiteConnection.nodes",
              "CheckSuiteEdge.node",
              "CheckSuiteFilter",
              "Commit.checkSuites",
              "Mutation.createCheckRun",
              "Mutation.createCheckSuite",
              "Mutation.rerequestCheckSuite",
              "Mutation.updateCheckRun",
              "Mutation.updateCheckSuitePreferences",
              "Push",
              "RequestableCheckStatusState"
            ],
            "owning_teams": [
              "@github/ecosystem-primitives"
            ],
            "accept_header": "application/vnd.github.antiope-preview+json",
            "href": "/graphql/overview/schema-previews#checks-preview"
          }
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CheckRunEdge",
      "kind": "objects",
      "id": "checkrunedge",
      "href": "/graphql/reference/objects#checkrunedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "CheckRun",
          "id": "checkrun",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkrun",
          "isDeprecated": false,
          "preview": {
            "title": "Checks preview",
            "description": "This preview adds support for reading checks created by GitHub Apps.",
            "toggled_by": "antiope-preview",
            "toggled_on": [
              "CheckAnnotationRange",
              "CheckAnnotationPosition",
              "CheckAnnotationSpan",
              "CheckAnnotation",
              "CheckAnnotationConnection.nodes",
              "CheckAnnotationData",
              "CheckAnnotationEdge.node",
              "CheckAnnotationLevel",
              "CheckConclusionState",
              "CheckStatusState",
              "CheckSuiteAutoTriggerPreference",
              "CheckRun",
              "CheckRunConnection.nodes",
              "CheckRunEdge.node",
              "CheckRunAction",
              "CheckRunFilter",
              "CheckRunOutput",
              "CheckRunOutputImage",
              "CheckRunType",
              "CheckSuite",
              "CheckSuiteConnection.nodes",
              "CheckSuiteEdge.node",
              "CheckSuiteFilter",
              "Commit.checkSuites",
              "Mutation.createCheckRun",
              "Mutation.createCheckSuite",
              "Mutation.rerequestCheckSuite",
              "Mutation.updateCheckRun",
              "Mutation.updateCheckSuitePreferences",
              "Push",
              "RequestableCheckStatusState"
            ],
            "owning_teams": [
              "@github/ecosystem-primitives"
            ],
            "accept_header": "application/vnd.github.antiope-preview+json",
            "href": "/graphql/overview/schema-previews#checks-preview"
          }
        }
      ]
    },
    {
      "name": "CheckSuite",
      "kind": "objects",
      "id": "checksuite",
      "href": "/graphql/reference/objects#checksuite",
      "description": "<p>A check suite.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "app",
          "description": "<p>The GitHub App which created this check suite.</p>",
          "type": "App",
          "id": "app",
          "kind": "objects",
          "href": "/graphql/reference/objects#app"
        },
        {
          "name": "branch",
          "description": "<p>The name of the branch for this check suite.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        },
        {
          "name": "checkRuns",
          "description": "<p>The check runs associated with a check suite.</p>",
          "type": "CheckRunConnection",
          "id": "checkrunconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#checkrunconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "filterBy",
              "description": "<p>Filters the check runs by this type.</p>",
              "type": {
                "name": "CheckRunFilter",
                "id": "checkrunfilter",
                "href": "/graphql/reference/scalar#checkrunfilter"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "commit",
          "description": "<p>The commit for this check suite.</p>",
          "type": "Commit!",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "conclusion",
          "description": "<p>The conclusion of this check suite.</p>",
          "type": "CheckConclusionState",
          "id": "checkconclusionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#checkconclusionstate"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "matchingPullRequests",
          "description": "<p>A list of open pull requests matching the check suite.</p>",
          "type": "PullRequestConnection",
          "id": "pullrequestconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "baseRefName",
              "description": "<p>The base ref name to filter the pull requests by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "headRefName",
              "description": "<p>The head ref name to filter the pull requests by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "labels",
              "description": "<p>A list of label names to filter the pull requests by.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for pull requests returned from the connection.</p>",
              "type": {
                "name": "IssueOrder",
                "id": "issueorder",
                "href": "/graphql/reference/scalar#issueorder"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the pull requests by.</p>",
              "type": {
                "name": "[PullRequestState!]",
                "id": "pullrequeststate",
                "href": "/graphql/reference/scalar#pullrequeststate"
              }
            }
          ]
        },
        {
          "name": "push",
          "description": "<p>The push that triggered this check suite.</p>",
          "type": "Push",
          "id": "push",
          "kind": "objects",
          "href": "/graphql/reference/objects#push"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this check suite.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "status",
          "description": "<p>The status of this check suite.</p>",
          "type": "CheckStatusState!",
          "id": "checkstatusstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#checkstatusstate"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "CheckSuiteConnection",
      "kind": "objects",
      "id": "checksuiteconnection",
      "href": "/graphql/reference/objects#checksuiteconnection",
      "description": "<p>The connection type for CheckSuite.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[CheckSuiteEdge]",
          "id": "checksuiteedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#checksuiteedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[CheckSuite]",
          "id": "checksuite",
          "kind": "objects",
          "href": "/graphql/reference/objects#checksuite",
          "isDeprecated": false,
          "preview": {
            "title": "Checks preview",
            "description": "This preview adds support for reading checks created by GitHub Apps.",
            "toggled_by": "antiope-preview",
            "toggled_on": [
              "CheckAnnotationRange",
              "CheckAnnotationPosition",
              "CheckAnnotationSpan",
              "CheckAnnotation",
              "CheckAnnotationConnection.nodes",
              "CheckAnnotationData",
              "CheckAnnotationEdge.node",
              "CheckAnnotationLevel",
              "CheckConclusionState",
              "CheckStatusState",
              "CheckSuiteAutoTriggerPreference",
              "CheckRun",
              "CheckRunConnection.nodes",
              "CheckRunEdge.node",
              "CheckRunAction",
              "CheckRunFilter",
              "CheckRunOutput",
              "CheckRunOutputImage",
              "CheckRunType",
              "CheckSuite",
              "CheckSuiteConnection.nodes",
              "CheckSuiteEdge.node",
              "CheckSuiteFilter",
              "Commit.checkSuites",
              "Mutation.createCheckRun",
              "Mutation.createCheckSuite",
              "Mutation.rerequestCheckSuite",
              "Mutation.updateCheckRun",
              "Mutation.updateCheckSuitePreferences",
              "Push",
              "RequestableCheckStatusState"
            ],
            "owning_teams": [
              "@github/ecosystem-primitives"
            ],
            "accept_header": "application/vnd.github.antiope-preview+json",
            "href": "/graphql/overview/schema-previews#checks-preview"
          }
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CheckSuiteEdge",
      "kind": "objects",
      "id": "checksuiteedge",
      "href": "/graphql/reference/objects#checksuiteedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "CheckSuite",
          "id": "checksuite",
          "kind": "objects",
          "href": "/graphql/reference/objects#checksuite",
          "isDeprecated": false,
          "preview": {
            "title": "Checks preview",
            "description": "This preview adds support for reading checks created by GitHub Apps.",
            "toggled_by": "antiope-preview",
            "toggled_on": [
              "CheckAnnotationRange",
              "CheckAnnotationPosition",
              "CheckAnnotationSpan",
              "CheckAnnotation",
              "CheckAnnotationConnection.nodes",
              "CheckAnnotationData",
              "CheckAnnotationEdge.node",
              "CheckAnnotationLevel",
              "CheckConclusionState",
              "CheckStatusState",
              "CheckSuiteAutoTriggerPreference",
              "CheckRun",
              "CheckRunConnection.nodes",
              "CheckRunEdge.node",
              "CheckRunAction",
              "CheckRunFilter",
              "CheckRunOutput",
              "CheckRunOutputImage",
              "CheckRunType",
              "CheckSuite",
              "CheckSuiteConnection.nodes",
              "CheckSuiteEdge.node",
              "CheckSuiteFilter",
              "Commit.checkSuites",
              "Mutation.createCheckRun",
              "Mutation.createCheckSuite",
              "Mutation.rerequestCheckSuite",
              "Mutation.updateCheckRun",
              "Mutation.updateCheckSuitePreferences",
              "Push",
              "RequestableCheckStatusState"
            ],
            "owning_teams": [
              "@github/ecosystem-primitives"
            ],
            "accept_header": "application/vnd.github.antiope-preview+json",
            "href": "/graphql/overview/schema-previews#checks-preview"
          }
        }
      ]
    },
    {
      "name": "ClosedEvent",
      "kind": "objects",
      "id": "closedevent",
      "href": "/graphql/reference/objects#closedevent",
      "description": "<p>Represents a<code>closed</code>event on any <code>Closable</code>.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "closable",
          "description": "<p>Object that was closed.</p>",
          "type": "Closable!",
          "id": "closable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#closable"
        },
        {
          "name": "closer",
          "description": "<p>Object which triggered the creation of this event.</p>",
          "type": "Closer",
          "id": "closer",
          "kind": "unions",
          "href": "/graphql/reference/unions#closer"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this closed event.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this closed event.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "CodeOfConduct",
      "kind": "objects",
      "id": "codeofconduct",
      "href": "/graphql/reference/objects#codeofconduct",
      "description": "<p>The Code of Conduct for a repository.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "body",
          "description": "<p>The body of the Code of Conduct.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "key",
          "description": "<p>The key for the Code of Conduct.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The formal name of the Code of Conduct.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this Code of Conduct.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this Code of Conduct.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "CommentDeletedEvent",
      "kind": "objects",
      "id": "commentdeletedevent",
      "href": "/graphql/reference/objects#commentdeletedevent",
      "description": "<p>Represents a<code>comment_deleted</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "Commit",
      "kind": "objects",
      "id": "commit",
      "href": "/graphql/reference/objects#commit",
      "description": "<p>Represents a Git commit.</p>",
      "implements": [
        {
          "name": "GitObject",
          "id": "gitobject",
          "href": "/graphql/reference/interfaces#gitobject"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Subscribable",
          "id": "subscribable",
          "href": "/graphql/reference/interfaces#subscribable"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "abbreviatedOid",
          "description": "<p>An abbreviated version of the Git object ID.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "additions",
          "description": "<p>The number of additions in this commit.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "associatedPullRequests",
          "description": "<p>The pull requests associated with a commit.</p>",
          "type": "PullRequestConnection",
          "id": "pullrequestconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for pull requests.</p>",
              "type": {
                "name": "PullRequestOrder",
                "id": "pullrequestorder",
                "href": "/graphql/reference/scalar#pullrequestorder"
              }
            }
          ]
        },
        {
          "name": "author",
          "description": "<p>Authorship details of the commit.</p>",
          "type": "GitActor",
          "id": "gitactor",
          "kind": "objects",
          "href": "/graphql/reference/objects#gitactor"
        },
        {
          "name": "authoredByCommitter",
          "description": "<p>Check if the committer and the author match.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "authoredDate",
          "description": "<p>The datetime when this commit was authored.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "blame",
          "description": "<p>Fetches <code>git blame</code> information.</p>",
          "type": "Blame!",
          "id": "blame",
          "kind": "objects",
          "href": "/graphql/reference/objects#blame",
          "arguments": [
            {
              "name": "path",
              "description": "<p>The file whose Git blame information you want.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            }
          ]
        },
        {
          "name": "changedFiles",
          "description": "<p>The number of changed files in this commit.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "checkSuites",
          "description": "<p>The check suites associated with a commit.</p>",
          "type": "CheckSuiteConnection",
          "id": "checksuiteconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#checksuiteconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "filterBy",
              "description": "<p>Filters the check suites by this type.</p>",
              "type": {
                "name": "CheckSuiteFilter",
                "id": "checksuitefilter",
                "href": "/graphql/reference/scalar#checksuitefilter"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ],
          "isDeprecated": false,
          "preview": {
            "title": "Checks preview",
            "description": "This preview adds support for reading checks created by GitHub Apps.",
            "toggled_by": "antiope-preview",
            "toggled_on": [
              "CheckAnnotationRange",
              "CheckAnnotationPosition",
              "CheckAnnotationSpan",
              "CheckAnnotation",
              "CheckAnnotationConnection.nodes",
              "CheckAnnotationData",
              "CheckAnnotationEdge.node",
              "CheckAnnotationLevel",
              "CheckConclusionState",
              "CheckStatusState",
              "CheckSuiteAutoTriggerPreference",
              "CheckRun",
              "CheckRunConnection.nodes",
              "CheckRunEdge.node",
              "CheckRunAction",
              "CheckRunFilter",
              "CheckRunOutput",
              "CheckRunOutputImage",
              "CheckRunType",
              "CheckSuite",
              "CheckSuiteConnection.nodes",
              "CheckSuiteEdge.node",
              "CheckSuiteFilter",
              "Commit.checkSuites",
              "Mutation.createCheckRun",
              "Mutation.createCheckSuite",
              "Mutation.rerequestCheckSuite",
              "Mutation.updateCheckRun",
              "Mutation.updateCheckSuitePreferences",
              "Push",
              "RequestableCheckStatusState"
            ],
            "owning_teams": [
              "@github/ecosystem-primitives"
            ],
            "accept_header": "application/vnd.github.antiope-preview+json",
            "href": "/graphql/overview/schema-previews#checks-preview"
          }
        },
        {
          "name": "comments",
          "description": "<p>Comments made on the commit.</p>",
          "type": "CommitCommentConnection!",
          "id": "commitcommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#commitcommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "commitResourcePath",
          "description": "<p>The HTTP path for this Git object.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "commitUrl",
          "description": "<p>The HTTP URL for this Git object.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "committedDate",
          "description": "<p>The datetime when this commit was committed.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "committedViaWeb",
          "description": "<p>Check if commited via GitHub web UI.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "committer",
          "description": "<p>Committership details of the commit.</p>",
          "type": "GitActor",
          "id": "gitactor",
          "kind": "objects",
          "href": "/graphql/reference/objects#gitactor"
        },
        {
          "name": "deletions",
          "description": "<p>The number of deletions in this commit.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "deployments",
          "description": "<p>The deployments associated with a commit.</p>",
          "type": "DeploymentConnection",
          "id": "deploymentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "environments",
              "description": "<p>Environments to list deployments for.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for deployments returned from the connection.</p>",
              "type": {
                "name": "DeploymentOrder",
                "id": "deploymentorder",
                "href": "/graphql/reference/scalar#deploymentorder"
              }
            }
          ]
        },
        {
          "name": "history",
          "description": "<p>The linear commit history starting from (and including) this commit, in the same order as <code>git log</code>.</p>",
          "type": "CommitHistoryConnection!",
          "id": "commithistoryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#commithistoryconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "author",
              "description": "<p>If non-null, filters history to only show commits with matching authorship.</p>",
              "type": {
                "name": "CommitAuthor",
                "id": "commitauthor",
                "href": "/graphql/reference/scalar#commitauthor"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "path",
              "description": "<p>If non-null, filters history to only show commits touching files under this path.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "since",
              "description": "<p>Allows specifying a beginning time or date for fetching commits.</p>",
              "type": {
                "name": "GitTimestamp",
                "id": "gittimestamp",
                "href": "/graphql/reference/scalar#gittimestamp"
              }
            },
            {
              "name": "until",
              "description": "<p>Allows specifying an ending time or date for fetching commits.</p>",
              "type": {
                "name": "GitTimestamp",
                "id": "gittimestamp",
                "href": "/graphql/reference/scalar#gittimestamp"
              }
            }
          ]
        },
        {
          "name": "message",
          "description": "<p>The Git commit message.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "messageBody",
          "description": "<p>The Git commit message body.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "messageBodyHTML",
          "description": "<p>The commit message body rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "messageHeadline",
          "description": "<p>The Git commit message headline.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "messageHeadlineHTML",
          "description": "<p>The commit message headline rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "oid",
          "description": "<p>The Git object ID.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "parents",
          "description": "<p>The parents of a commit.</p>",
          "type": "CommitConnection!",
          "id": "commitconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#commitconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "pushedDate",
          "description": "<p>The datetime when this commit was pushed.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "repository",
          "description": "<p>The Repository this commit belongs to.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this commit.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "signature",
          "description": "<p>Commit signing information, if present.</p>",
          "type": "GitSignature",
          "id": "gitsignature",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#gitsignature"
        },
        {
          "name": "status",
          "description": "<p>Status information for this commit.</p>",
          "type": "Status",
          "id": "status",
          "kind": "objects",
          "href": "/graphql/reference/objects#status"
        },
        {
          "name": "tarballUrl",
          "description": "<p>Returns a URL to download a tarball archive for a repository.\nNote: For private repositories, these links are temporary and expire after five minutes.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "tree",
          "description": "<p>Commit's root Tree.</p>",
          "type": "Tree!",
          "id": "tree",
          "kind": "objects",
          "href": "/graphql/reference/objects#tree"
        },
        {
          "name": "treeResourcePath",
          "description": "<p>The HTTP path for the tree of this commit.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "treeUrl",
          "description": "<p>The HTTP URL for the tree of this commit.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this commit.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "viewerCanSubscribe",
          "description": "<p>Check if the viewer is able to change their subscription status for the repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerSubscription",
          "description": "<p>Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.</p>",
          "type": "SubscriptionState",
          "id": "subscriptionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#subscriptionstate"
        },
        {
          "name": "zipballUrl",
          "description": "<p>Returns a URL to download a zipball archive for a repository.\nNote: For private repositories, these links are temporary and expire after five minutes.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "CommitComment",
      "kind": "objects",
      "id": "commitcomment",
      "href": "/graphql/reference/objects#commitcomment",
      "description": "<p>Represents a comment on a given Commit.</p>",
      "implements": [
        {
          "name": "Comment",
          "id": "comment",
          "href": "/graphql/reference/interfaces#comment"
        },
        {
          "name": "Deletable",
          "id": "deletable",
          "href": "/graphql/reference/interfaces#deletable"
        },
        {
          "name": "Minimizable",
          "id": "minimizable",
          "href": "/graphql/reference/interfaces#minimizable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Reactable",
          "id": "reactable",
          "href": "/graphql/reference/interfaces#reactable"
        },
        {
          "name": "RepositoryNode",
          "id": "repositorynode",
          "href": "/graphql/reference/interfaces#repositorynode"
        },
        {
          "name": "Updatable",
          "id": "updatable",
          "href": "/graphql/reference/interfaces#updatable"
        },
        {
          "name": "UpdatableComment",
          "id": "updatablecomment",
          "href": "/graphql/reference/interfaces#updatablecomment"
        }
      ],
      "fields": [
        {
          "name": "author",
          "description": "<p>The actor who authored the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "authorAssociation",
          "description": "<p>Author's association with the subject of the comment.</p>",
          "type": "CommentAuthorAssociation!",
          "id": "commentauthorassociation",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentauthorassociation"
        },
        {
          "name": "body",
          "description": "<p>Identifies the comment body.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>Identifies the comment body rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "bodyText",
          "description": "<p>The body rendered to text.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "commit",
          "description": "<p>Identifies the commit associated with the comment, if the commit exists.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdViaEmail",
          "description": "<p>Check if this comment was created via an email reply.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "editor",
          "description": "<p>The actor who edited the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "includesCreatedEdit",
          "description": "<p>Check if this comment was edited and includes an edit with the creation data.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isMinimized",
          "description": "<p>Returns whether or not a comment has been minimized.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "lastEditedAt",
          "description": "<p>The moment the editor made the last edit.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "minimizedReason",
          "description": "<p>Returns why the comment was minimized.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "path",
          "description": "<p>Identifies the file path associated with the comment.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "position",
          "description": "<p>Identifies the line position associated with the comment.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "publishedAt",
          "description": "<p>Identifies when the comment was published at.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "reactionGroups",
          "description": "<p>A list of reactions grouped by content left on the subject.</p>",
          "type": "[ReactionGroup!]",
          "id": "reactiongroup",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactiongroup"
        },
        {
          "name": "reactions",
          "description": "<p>A list of Reactions left on the Issue.</p>",
          "type": "ReactionConnection!",
          "id": "reactionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "content",
              "description": "<p>Allows filtering Reactions by emoji.</p>",
              "type": {
                "name": "ReactionContent",
                "id": "reactioncontent",
                "href": "/graphql/reference/scalar#reactioncontent"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Allows specifying the order in which reactions are returned.</p>",
              "type": {
                "name": "ReactionOrder",
                "id": "reactionorder",
                "href": "/graphql/reference/scalar#reactionorder"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this node.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path permalink for this commit comment.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL permalink for this commit comment.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userContentEdits",
          "description": "<p>A list of edits to this content.</p>",
          "type": "UserContentEditConnection",
          "id": "usercontenteditconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontenteditconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "viewerCanDelete",
          "description": "<p>Check if the current viewer can delete this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanMinimize",
          "description": "<p>Check if the current viewer can minimize this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanReact",
          "description": "<p>Can user react to this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpdate",
          "description": "<p>Check if the current viewer can update this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCannotUpdateReasons",
          "description": "<p>Reasons why the current viewer can not update this comment.</p>",
          "type": "[CommentCannotUpdateReason!]!",
          "id": "commentcannotupdatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentcannotupdatereason"
        },
        {
          "name": "viewerDidAuthor",
          "description": "<p>Did the viewer author this comment.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "CommitCommentConnection",
      "kind": "objects",
      "id": "commitcommentconnection",
      "href": "/graphql/reference/objects#commitcommentconnection",
      "description": "<p>The connection type for CommitComment.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[CommitCommentEdge]",
          "id": "commitcommentedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#commitcommentedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[CommitComment]",
          "id": "commitcomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#commitcomment"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CommitCommentEdge",
      "kind": "objects",
      "id": "commitcommentedge",
      "href": "/graphql/reference/objects#commitcommentedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "CommitComment",
          "id": "commitcomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#commitcomment"
        }
      ]
    },
    {
      "name": "CommitCommentThread",
      "kind": "objects",
      "id": "commitcommentthread",
      "href": "/graphql/reference/objects#commitcommentthread",
      "description": "<p>A thread of comments on a commit.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "RepositoryNode",
          "id": "repositorynode",
          "href": "/graphql/reference/interfaces#repositorynode"
        }
      ],
      "fields": [
        {
          "name": "comments",
          "description": "<p>The comments that exist in this thread.</p>",
          "type": "CommitCommentConnection!",
          "id": "commitcommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#commitcommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "commit",
          "description": "<p>The commit the comments were made on.</p>",
          "type": "Commit!",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "path",
          "description": "<p>The file the comments were made on.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "position",
          "description": "<p>The position in the diff for the commit that the comment was made on.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this node.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "CommitConnection",
      "kind": "objects",
      "id": "commitconnection",
      "href": "/graphql/reference/objects#commitconnection",
      "description": "<p>The connection type for Commit.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[CommitEdge]",
          "id": "commitedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#commitedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Commit]",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CommitContributionsByRepository",
      "kind": "objects",
      "id": "commitcontributionsbyrepository",
      "href": "/graphql/reference/objects#commitcontributionsbyrepository",
      "description": "<p>This aggregates commits made by a user within one repository.</p>",
      "fields": [
        {
          "name": "contributions",
          "description": "<p>The commit contributions, each representing a day.</p>",
          "type": "CreatedCommitContributionConnection!",
          "id": "createdcommitcontributionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdcommitcontributionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for commit contributions returned from the connection.</p>",
              "type": {
                "name": "CommitContributionOrder",
                "id": "commitcontributionorder",
                "href": "/graphql/reference/scalar#commitcontributionorder"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository in which the commits were made.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for the user's commits to the repository in this time range.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for the user's commits to the repository in this time range.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "CommitEdge",
      "kind": "objects",
      "id": "commitedge",
      "href": "/graphql/reference/objects#commitedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        }
      ]
    },
    {
      "name": "CommitHistoryConnection",
      "kind": "objects",
      "id": "commithistoryconnection",
      "href": "/graphql/reference/objects#commithistoryconnection",
      "description": "<p>The connection type for Commit.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[CommitEdge]",
          "id": "commitedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#commitedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Commit]",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ContentAttachment",
      "kind": "objects",
      "id": "contentattachment",
      "href": "/graphql/reference/objects#contentattachment",
      "description": "<p>A content attachment.</p>",
      "fields": [
        {
          "name": "body",
          "description": "<p>The body text of the content attachment. This parameter supports markdown.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "contentReference",
          "description": "<p>The content reference that the content attachment is attached to.</p>",
          "type": "ContentReference!",
          "id": "contentreference",
          "kind": "objects",
          "href": "/graphql/reference/objects#contentreference"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "title",
          "description": "<p>The title of the content attachment.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "ContentReference",
      "kind": "objects",
      "id": "contentreference",
      "href": "/graphql/reference/objects#contentreference",
      "description": "<p>A content reference.</p>",
      "fields": [
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "reference",
          "description": "<p>The reference of the content reference.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "ContributionCalendar",
      "kind": "objects",
      "id": "contributioncalendar",
      "href": "/graphql/reference/objects#contributioncalendar",
      "description": "<p>A calendar of contributions made on GitHub by a user.</p>",
      "fields": [
        {
          "name": "colors",
          "description": "<p>A list of hex color codes used in this calendar. The darker the color, the more contributions it represents.</p>",
          "type": "[String!]!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "isHalloween",
          "description": "<p>Determine if the color set was chosen because it's currently Halloween.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "months",
          "description": "<p>A list of the months of contributions in this calendar.</p>",
          "type": "[ContributionCalendarMonth!]!",
          "id": "contributioncalendarmonth",
          "kind": "objects",
          "href": "/graphql/reference/objects#contributioncalendarmonth"
        },
        {
          "name": "totalContributions",
          "description": "<p>The count of total contributions in the calendar.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "weeks",
          "description": "<p>A list of the weeks of contributions in this calendar.</p>",
          "type": "[ContributionCalendarWeek!]!",
          "id": "contributioncalendarweek",
          "kind": "objects",
          "href": "/graphql/reference/objects#contributioncalendarweek"
        }
      ]
    },
    {
      "name": "ContributionCalendarDay",
      "kind": "objects",
      "id": "contributioncalendarday",
      "href": "/graphql/reference/objects#contributioncalendarday",
      "description": "<p>Represents a single day of contributions on GitHub by a user.</p>",
      "fields": [
        {
          "name": "color",
          "description": "<p>The hex color code that represents how many contributions were made on this day compared to others in the calendar.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "contributionCount",
          "description": "<p>How many contributions were made by the user on this day.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "date",
          "description": "<p>The day this square represents.</p>",
          "type": "Date!",
          "id": "date",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#date"
        },
        {
          "name": "weekday",
          "description": "<p>A number representing which day of the week this square represents, e.g., 1 is Monday.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ContributionCalendarMonth",
      "kind": "objects",
      "id": "contributioncalendarmonth",
      "href": "/graphql/reference/objects#contributioncalendarmonth",
      "description": "<p>A month of contributions in a user's contribution graph.</p>",
      "fields": [
        {
          "name": "firstDay",
          "description": "<p>The date of the first day of this month.</p>",
          "type": "Date!",
          "id": "date",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#date"
        },
        {
          "name": "name",
          "description": "<p>The name of the month.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "totalWeeks",
          "description": "<p>How many weeks started in this month.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "year",
          "description": "<p>The year the month occurred in.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ContributionCalendarWeek",
      "kind": "objects",
      "id": "contributioncalendarweek",
      "href": "/graphql/reference/objects#contributioncalendarweek",
      "description": "<p>A week of contributions in a user's contribution graph.</p>",
      "fields": [
        {
          "name": "contributionDays",
          "description": "<p>The days of contributions in this week.</p>",
          "type": "[ContributionCalendarDay!]!",
          "id": "contributioncalendarday",
          "kind": "objects",
          "href": "/graphql/reference/objects#contributioncalendarday"
        },
        {
          "name": "firstDay",
          "description": "<p>The date of the earliest square in this week.</p>",
          "type": "Date!",
          "id": "date",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#date"
        }
      ]
    },
    {
      "name": "ContributionsCollection",
      "kind": "objects",
      "id": "contributionscollection",
      "href": "/graphql/reference/objects#contributionscollection",
      "description": "<p>A contributions collection aggregates contributions such as opened issues and commits created by a user.</p>",
      "fields": [
        {
          "name": "commitContributionsByRepository",
          "description": "<p>Commit contributions made by the user, grouped by repository.</p>",
          "type": "[CommitContributionsByRepository!]!",
          "id": "commitcontributionsbyrepository",
          "kind": "objects",
          "href": "/graphql/reference/objects#commitcontributionsbyrepository",
          "arguments": [
            {
              "name": "maxRepositories",
              "defaultValue": "25",
              "description": "<p>How many repositories should be included.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "contributionCalendar",
          "description": "<p>A calendar of this user's contributions on GitHub.</p>",
          "type": "ContributionCalendar!",
          "id": "contributioncalendar",
          "kind": "objects",
          "href": "/graphql/reference/objects#contributioncalendar"
        },
        {
          "name": "contributionYears",
          "description": "<p>The years the user has been making contributions with the most recent year first.</p>",
          "type": "[Int!]!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "doesEndInCurrentMonth",
          "description": "<p>Determine if this collection's time span ends in the current month.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "earliestRestrictedContributionDate",
          "description": "<p>The date of the first restricted contribution the user made in this time\nperiod. Can only be non-null when the user has enabled private contribution counts.</p>",
          "type": "Date",
          "id": "date",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#date"
        },
        {
          "name": "endedAt",
          "description": "<p>The ending date and time of this collection.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "firstIssueContribution",
          "description": "<p>The first issue the user opened on GitHub. This will be null if that issue was\nopened outside the collection's time range and ignoreTimeRange is false. If\nthe issue is not visible but the user has opted to show private contributions,\na RestrictedContribution will be returned.</p>",
          "type": "CreatedIssueOrRestrictedContribution",
          "id": "createdissueorrestrictedcontribution",
          "kind": "unions",
          "href": "/graphql/reference/unions#createdissueorrestrictedcontribution",
          "arguments": [
            {
              "name": "ignoreTimeRange",
              "defaultValue": false,
              "description": "<p>If true, the first issue will be returned even if it was opened outside of the collection's time range.</p>\n<p><strong>Upcoming Change on 2019-07-01 UTC</strong>\n<strong>Description:</strong> <code>ignoreTimeRange</code> will be removed. Use a <code>ContributionsCollection</code> starting sufficiently far back\n<strong>Reason:</strong> ignore_time_range will be removed.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            }
          ]
        },
        {
          "name": "firstPullRequestContribution",
          "description": "<p>The first pull request the user opened on GitHub. This will be null if that\npull request was opened outside the collection's time range and\nignoreTimeRange is not true. If the pull request is not visible but the user\nhas opted to show private contributions, a RestrictedContribution will be returned.</p>",
          "type": "CreatedPullRequestOrRestrictedContribution",
          "id": "createdpullrequestorrestrictedcontribution",
          "kind": "unions",
          "href": "/graphql/reference/unions#createdpullrequestorrestrictedcontribution",
          "arguments": [
            {
              "name": "ignoreTimeRange",
              "defaultValue": false,
              "description": "<p>If true, the first pull request will be returned even if it was opened outside of the collection's time range.</p>\n<p><strong>Upcoming Change on 2019-07-01 UTC</strong>\n<strong>Description:</strong> <code>ignoreTimeRange</code> will be removed. Use a <code>ContributionsCollection</code> starting sufficiently far back\n<strong>Reason:</strong> ignore_time_range will be removed.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            }
          ]
        },
        {
          "name": "firstRepositoryContribution",
          "description": "<p>The first repository the user created on GitHub. This will be null if that\nfirst repository was created outside the collection's time range and\nignoreTimeRange is false. If the repository is not visible, then a\nRestrictedContribution is returned.</p>",
          "type": "CreatedRepositoryOrRestrictedContribution",
          "id": "createdrepositoryorrestrictedcontribution",
          "kind": "unions",
          "href": "/graphql/reference/unions#createdrepositoryorrestrictedcontribution",
          "arguments": [
            {
              "name": "ignoreTimeRange",
              "defaultValue": false,
              "description": "<p>If true, the first repository will be returned even if it was opened outside of the collection's time range.</p>\n<p><strong>Upcoming Change on 2019-07-01 UTC</strong>\n<strong>Description:</strong> <code>ignoreTimeRange</code> will be removed. Use a <code>ContributionsCollection</code> starting sufficiently far back\n<strong>Reason:</strong> ignore_time_range will be removed.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            }
          ]
        },
        {
          "name": "hasActivityInThePast",
          "description": "<p>Does the user have any more activity in the timeline that occurred prior to the collection's time range?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hasAnyContributions",
          "description": "<p>Determine if there are any contributions in this collection.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hasAnyRestrictedContributions",
          "description": "<p>Determine if the user made any contributions in this time frame whose details\nare not visible because they were made in a private repository. Can only be\ntrue if the user enabled private contribution counts.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isSingleDay",
          "description": "<p>Whether or not the collector's time span is all within the same day.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "issueContributions",
          "description": "<p>A list of issues the user opened.</p>",
          "type": "CreatedIssueContributionConnection!",
          "id": "createdissuecontributionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdissuecontributionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "excludeFirst",
              "defaultValue": false,
              "description": "<p>Should the user's first issue ever be excluded from the result.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "excludePopular",
              "defaultValue": false,
              "description": "<p>Should the user's most commented issue be excluded from the result.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for contributions returned from the connection.</p>",
              "type": {
                "name": "ContributionOrder",
                "id": "contributionorder",
                "href": "/graphql/reference/scalar#contributionorder"
              }
            }
          ]
        },
        {
          "name": "issueContributionsByRepository",
          "description": "<p>Issue contributions made by the user, grouped by repository.</p>",
          "type": "[IssueContributionsByRepository!]!",
          "id": "issuecontributionsbyrepository",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuecontributionsbyrepository",
          "arguments": [
            {
              "name": "excludeFirst",
              "defaultValue": false,
              "description": "<p>Should the user's first issue ever be excluded from the result.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "excludePopular",
              "defaultValue": false,
              "description": "<p>Should the user's most commented issue be excluded from the result.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "maxRepositories",
              "defaultValue": "25",
              "description": "<p>How many repositories should be included.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "joinedGitHubContribution",
          "description": "<p>When the user signed up for GitHub. This will be null if that sign up date\nfalls outside the collection's time range and ignoreTimeRange is false.</p>",
          "type": "JoinedGitHubContribution",
          "id": "joinedgithubcontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#joinedgithubcontribution",
          "arguments": [
            {
              "name": "ignoreTimeRange",
              "defaultValue": false,
              "description": "<p>If true, the contribution will be returned even if the user signed up outside of the collection's time range.</p>\n<p><strong>Upcoming Change on 2019-07-01 UTC</strong>\n<strong>Description:</strong> <code>ignoreTimeRange</code> will be removed. Use a <code>ContributionsCollection</code> starting sufficiently far back\n<strong>Reason:</strong> ignore_time_range will be removed.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            }
          ]
        },
        {
          "name": "latestRestrictedContributionDate",
          "description": "<p>The date of the most recent restricted contribution the user made in this time\nperiod. Can only be non-null when the user has enabled private contribution counts.</p>",
          "type": "Date",
          "id": "date",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#date"
        },
        {
          "name": "mostRecentCollectionWithActivity",
          "description": "<p>When this collection's time range does not include any activity from the user, use this\nto get a different collection from an earlier time range that does have activity.</p>",
          "type": "ContributionsCollection",
          "id": "contributionscollection",
          "kind": "objects",
          "href": "/graphql/reference/objects#contributionscollection"
        },
        {
          "name": "mostRecentCollectionWithoutActivity",
          "description": "<p>Returns a different contributions collection from an earlier time range than this one\nthat does not have any contributions.</p>",
          "type": "ContributionsCollection",
          "id": "contributionscollection",
          "kind": "objects",
          "href": "/graphql/reference/objects#contributionscollection"
        },
        {
          "name": "popularIssueContribution",
          "description": "<p>The issue the user opened on GitHub that received the most comments in the specified\ntime frame.</p>",
          "type": "CreatedIssueContribution",
          "id": "createdissuecontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdissuecontribution"
        },
        {
          "name": "popularPullRequestContribution",
          "description": "<p>The pull request the user opened on GitHub that received the most comments in the\nspecified time frame.</p>",
          "type": "CreatedPullRequestContribution",
          "id": "createdpullrequestcontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdpullrequestcontribution"
        },
        {
          "name": "pullRequestContributions",
          "description": "<p>Pull request contributions made by the user.</p>",
          "type": "CreatedPullRequestContributionConnection!",
          "id": "createdpullrequestcontributionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdpullrequestcontributionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "excludeFirst",
              "defaultValue": false,
              "description": "<p>Should the user's first pull request ever be excluded from the result.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "excludePopular",
              "defaultValue": false,
              "description": "<p>Should the user's most commented pull request be excluded from the result.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for contributions returned from the connection.</p>",
              "type": {
                "name": "ContributionOrder",
                "id": "contributionorder",
                "href": "/graphql/reference/scalar#contributionorder"
              }
            }
          ]
        },
        {
          "name": "pullRequestContributionsByRepository",
          "description": "<p>Pull request contributions made by the user, grouped by repository.</p>",
          "type": "[PullRequestContributionsByRepository!]!",
          "id": "pullrequestcontributionsbyrepository",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestcontributionsbyrepository",
          "arguments": [
            {
              "name": "excludeFirst",
              "defaultValue": false,
              "description": "<p>Should the user's first pull request ever be excluded from the result.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "excludePopular",
              "defaultValue": false,
              "description": "<p>Should the user's most commented pull request be excluded from the result.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "maxRepositories",
              "defaultValue": "25",
              "description": "<p>How many repositories should be included.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "pullRequestReviewContributions",
          "description": "<p>Pull request review contributions made by the user.</p>",
          "type": "CreatedPullRequestReviewContributionConnection!",
          "id": "createdpullrequestreviewcontributionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdpullrequestreviewcontributionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for contributions returned from the connection.</p>",
              "type": {
                "name": "ContributionOrder",
                "id": "contributionorder",
                "href": "/graphql/reference/scalar#contributionorder"
              }
            }
          ]
        },
        {
          "name": "pullRequestReviewContributionsByRepository",
          "description": "<p>Pull request review contributions made by the user, grouped by repository.</p>",
          "type": "[PullRequestReviewContributionsByRepository!]!",
          "id": "pullrequestreviewcontributionsbyrepository",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewcontributionsbyrepository",
          "arguments": [
            {
              "name": "maxRepositories",
              "defaultValue": "25",
              "description": "<p>How many repositories should be included.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "repositoryContributions",
          "description": "<p>A list of repositories owned by the user that the user created in this time range.</p>",
          "type": "CreatedRepositoryContributionConnection!",
          "id": "createdrepositorycontributionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdrepositorycontributionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "excludeFirst",
              "defaultValue": false,
              "description": "<p>Should the user's first repository ever be excluded from the result.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for contributions returned from the connection.</p>",
              "type": {
                "name": "ContributionOrder",
                "id": "contributionorder",
                "href": "/graphql/reference/scalar#contributionorder"
              }
            }
          ]
        },
        {
          "name": "restrictedContributionsCount",
          "description": "<p>A count of contributions made by the user that the viewer cannot access. Only\nnon-zero when the user has chosen to share their private contribution counts.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "startedAt",
          "description": "<p>The beginning date and time of this collection.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "totalCommitContributions",
          "description": "<p>How many commits were made by the user in this time span.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "totalIssueContributions",
          "description": "<p>How many issues the user opened.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int",
          "arguments": [
            {
              "name": "excludeFirst",
              "defaultValue": false,
              "description": "<p>Should the user's first issue ever be excluded from this count.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "excludePopular",
              "defaultValue": false,
              "description": "<p>Should the user's most commented issue be excluded from this count.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            }
          ]
        },
        {
          "name": "totalPullRequestContributions",
          "description": "<p>How many pull requests the user opened.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int",
          "arguments": [
            {
              "name": "excludeFirst",
              "defaultValue": false,
              "description": "<p>Should the user's first pull request ever be excluded from this count.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "excludePopular",
              "defaultValue": false,
              "description": "<p>Should the user's most commented pull request be excluded from this count.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            }
          ]
        },
        {
          "name": "totalPullRequestReviewContributions",
          "description": "<p>How many pull request reviews the user left.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "totalRepositoriesWithContributedCommits",
          "description": "<p>How many different repositories the user committed to.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "totalRepositoriesWithContributedIssues",
          "description": "<p>How many different repositories the user opened issues in.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int",
          "arguments": [
            {
              "name": "excludeFirst",
              "defaultValue": false,
              "description": "<p>Should the user's first issue ever be excluded from this count.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "excludePopular",
              "defaultValue": false,
              "description": "<p>Should the user's most commented issue be excluded from this count.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            }
          ]
        },
        {
          "name": "totalRepositoriesWithContributedPullRequestReviews",
          "description": "<p>How many different repositories the user left pull request reviews in.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "totalRepositoriesWithContributedPullRequests",
          "description": "<p>How many different repositories the user opened pull requests in.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int",
          "arguments": [
            {
              "name": "excludeFirst",
              "defaultValue": false,
              "description": "<p>Should the user's first pull request ever be excluded from this count.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "excludePopular",
              "defaultValue": false,
              "description": "<p>Should the user's most commented pull request be excluded from this count.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            }
          ]
        },
        {
          "name": "totalRepositoryContributions",
          "description": "<p>How many repositories the user created.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int",
          "arguments": [
            {
              "name": "excludeFirst",
              "defaultValue": false,
              "description": "<p>Should the user's first repository ever be excluded from this count.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            }
          ]
        },
        {
          "name": "user",
          "description": "<p>The user who made the contributions in this collection.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "ConvertedNoteToIssueEvent",
      "kind": "objects",
      "id": "convertednotetoissueevent",
      "href": "/graphql/reference/objects#convertednotetoissueevent",
      "description": "<p>Represents a<code>converted_note_to_issue</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "project",
          "description": "<p>Project referenced by event.</p>",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "isDeprecated": false,
          "preview": {
            "title": "Project event details preview",
            "description": "This preview adds project, project card, and project column details to project-related issue events.",
            "toggled_by": "starfox-preview",
            "toggled_on": [
              "AddedToProjectEvent.project",
              "AddedToProjectEvent.projectCard",
              "AddedToProjectEvent.projectColumnName",
              "ConvertedNoteToIssueEvent.project",
              "ConvertedNoteToIssueEvent.projectCard",
              "ConvertedNoteToIssueEvent.projectColumnName",
              "MovedColumnsInProjectEvent.project",
              "MovedColumnsInProjectEvent.projectCard",
              "MovedColumnsInProjectEvent.projectColumnName",
              "MovedColumnsInProjectEvent.previousProjectColumnName",
              "RemovedFromProjectEvent.project",
              "RemovedFromProjectEvent.projectColumnName"
            ],
            "owning_teams": [
              "@github/github-projects"
            ],
            "accept_header": "application/vnd.github.starfox-preview+json",
            "href": "/graphql/overview/schema-previews#project-event-details-preview"
          }
        },
        {
          "name": "projectCard",
          "description": "<p>Project card referenced by this project event.</p>",
          "type": "ProjectCard",
          "id": "projectcard",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcard",
          "isDeprecated": false,
          "preview": {
            "title": "Project event details preview",
            "description": "This preview adds project, project card, and project column details to project-related issue events.",
            "toggled_by": "starfox-preview",
            "toggled_on": [
              "AddedToProjectEvent.project",
              "AddedToProjectEvent.projectCard",
              "AddedToProjectEvent.projectColumnName",
              "ConvertedNoteToIssueEvent.project",
              "ConvertedNoteToIssueEvent.projectCard",
              "ConvertedNoteToIssueEvent.projectColumnName",
              "MovedColumnsInProjectEvent.project",
              "MovedColumnsInProjectEvent.projectCard",
              "MovedColumnsInProjectEvent.projectColumnName",
              "MovedColumnsInProjectEvent.previousProjectColumnName",
              "RemovedFromProjectEvent.project",
              "RemovedFromProjectEvent.projectColumnName"
            ],
            "owning_teams": [
              "@github/github-projects"
            ],
            "accept_header": "application/vnd.github.starfox-preview+json",
            "href": "/graphql/overview/schema-previews#project-event-details-preview"
          }
        },
        {
          "name": "projectColumnName",
          "description": "<p>Column name referenced by this project event.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "isDeprecated": false,
          "preview": {
            "title": "Project event details preview",
            "description": "This preview adds project, project card, and project column details to project-related issue events.",
            "toggled_by": "starfox-preview",
            "toggled_on": [
              "AddedToProjectEvent.project",
              "AddedToProjectEvent.projectCard",
              "AddedToProjectEvent.projectColumnName",
              "ConvertedNoteToIssueEvent.project",
              "ConvertedNoteToIssueEvent.projectCard",
              "ConvertedNoteToIssueEvent.projectColumnName",
              "MovedColumnsInProjectEvent.project",
              "MovedColumnsInProjectEvent.projectCard",
              "MovedColumnsInProjectEvent.projectColumnName",
              "MovedColumnsInProjectEvent.previousProjectColumnName",
              "RemovedFromProjectEvent.project",
              "RemovedFromProjectEvent.projectColumnName"
            ],
            "owning_teams": [
              "@github/github-projects"
            ],
            "accept_header": "application/vnd.github.starfox-preview+json",
            "href": "/graphql/overview/schema-previews#project-event-details-preview"
          }
        }
      ]
    },
    {
      "name": "CreatedCommitContribution",
      "kind": "objects",
      "id": "createdcommitcontribution",
      "href": "/graphql/reference/objects#createdcommitcontribution",
      "description": "<p>Represents the contribution a user made by committing to a repository.</p>",
      "implements": [
        {
          "name": "Contribution",
          "id": "contribution",
          "href": "/graphql/reference/interfaces#contribution"
        }
      ],
      "fields": [
        {
          "name": "commitCount",
          "description": "<p>How many commits were made on this day to this repository by the user.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "isRestricted",
          "description": "<p>Whether this contribution is associated with a record you do not have access to. For\nexample, your own 'first issue' contribution may have been made on a repository you can no\nlonger access.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "occurredAt",
          "description": "<p>When this contribution was made.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "repository",
          "description": "<p>The repository the user made a commit in.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user who made this contribution.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "CreatedCommitContributionConnection",
      "kind": "objects",
      "id": "createdcommitcontributionconnection",
      "href": "/graphql/reference/objects#createdcommitcontributionconnection",
      "description": "<p>The connection type for CreatedCommitContribution.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[CreatedCommitContributionEdge]",
          "id": "createdcommitcontributionedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdcommitcontributionedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[CreatedCommitContribution]",
          "id": "createdcommitcontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdcommitcontribution"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of commits across days and repositories in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CreatedCommitContributionEdge",
      "kind": "objects",
      "id": "createdcommitcontributionedge",
      "href": "/graphql/reference/objects#createdcommitcontributionedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "CreatedCommitContribution",
          "id": "createdcommitcontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdcommitcontribution"
        }
      ]
    },
    {
      "name": "CreatedIssueContribution",
      "kind": "objects",
      "id": "createdissuecontribution",
      "href": "/graphql/reference/objects#createdissuecontribution",
      "description": "<p>Represents the contribution a user made on GitHub by opening an issue.</p>",
      "implements": [
        {
          "name": "Contribution",
          "id": "contribution",
          "href": "/graphql/reference/interfaces#contribution"
        }
      ],
      "fields": [
        {
          "name": "isRestricted",
          "description": "<p>Whether this contribution is associated with a record you do not have access to. For\nexample, your own 'first issue' contribution may have been made on a repository you can no\nlonger access.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "issue",
          "description": "<p>The issue that was opened.</p>",
          "type": "Issue!",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue"
        },
        {
          "name": "occurredAt",
          "description": "<p>When this contribution was made.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user who made this contribution.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "CreatedIssueContributionConnection",
      "kind": "objects",
      "id": "createdissuecontributionconnection",
      "href": "/graphql/reference/objects#createdissuecontributionconnection",
      "description": "<p>The connection type for CreatedIssueContribution.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[CreatedIssueContributionEdge]",
          "id": "createdissuecontributionedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdissuecontributionedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[CreatedIssueContribution]",
          "id": "createdissuecontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdissuecontribution"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CreatedIssueContributionEdge",
      "kind": "objects",
      "id": "createdissuecontributionedge",
      "href": "/graphql/reference/objects#createdissuecontributionedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "CreatedIssueContribution",
          "id": "createdissuecontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdissuecontribution"
        }
      ]
    },
    {
      "name": "CreatedPullRequestContribution",
      "kind": "objects",
      "id": "createdpullrequestcontribution",
      "href": "/graphql/reference/objects#createdpullrequestcontribution",
      "description": "<p>Represents the contribution a user made on GitHub by opening a pull request.</p>",
      "implements": [
        {
          "name": "Contribution",
          "id": "contribution",
          "href": "/graphql/reference/interfaces#contribution"
        }
      ],
      "fields": [
        {
          "name": "isRestricted",
          "description": "<p>Whether this contribution is associated with a record you do not have access to. For\nexample, your own 'first issue' contribution may have been made on a repository you can no\nlonger access.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "occurredAt",
          "description": "<p>When this contribution was made.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "pullRequest",
          "description": "<p>The pull request that was opened.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user who made this contribution.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "CreatedPullRequestContributionConnection",
      "kind": "objects",
      "id": "createdpullrequestcontributionconnection",
      "href": "/graphql/reference/objects#createdpullrequestcontributionconnection",
      "description": "<p>The connection type for CreatedPullRequestContribution.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[CreatedPullRequestContributionEdge]",
          "id": "createdpullrequestcontributionedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdpullrequestcontributionedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[CreatedPullRequestContribution]",
          "id": "createdpullrequestcontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdpullrequestcontribution"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CreatedPullRequestContributionEdge",
      "kind": "objects",
      "id": "createdpullrequestcontributionedge",
      "href": "/graphql/reference/objects#createdpullrequestcontributionedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "CreatedPullRequestContribution",
          "id": "createdpullrequestcontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdpullrequestcontribution"
        }
      ]
    },
    {
      "name": "CreatedPullRequestReviewContribution",
      "kind": "objects",
      "id": "createdpullrequestreviewcontribution",
      "href": "/graphql/reference/objects#createdpullrequestreviewcontribution",
      "description": "<p>Represents the contribution a user made by leaving a review on a pull request.</p>",
      "implements": [
        {
          "name": "Contribution",
          "id": "contribution",
          "href": "/graphql/reference/interfaces#contribution"
        }
      ],
      "fields": [
        {
          "name": "isRestricted",
          "description": "<p>Whether this contribution is associated with a record you do not have access to. For\nexample, your own 'first issue' contribution may have been made on a repository you can no\nlonger access.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "occurredAt",
          "description": "<p>When this contribution was made.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "pullRequest",
          "description": "<p>The pull request the user reviewed.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "pullRequestReview",
          "description": "<p>The review the user left on the pull request.</p>",
          "type": "PullRequestReview!",
          "id": "pullrequestreview",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreview"
        },
        {
          "name": "repository",
          "description": "<p>The repository containing the pull request that the user reviewed.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user who made this contribution.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "CreatedPullRequestReviewContributionConnection",
      "kind": "objects",
      "id": "createdpullrequestreviewcontributionconnection",
      "href": "/graphql/reference/objects#createdpullrequestreviewcontributionconnection",
      "description": "<p>The connection type for CreatedPullRequestReviewContribution.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[CreatedPullRequestReviewContributionEdge]",
          "id": "createdpullrequestreviewcontributionedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdpullrequestreviewcontributionedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[CreatedPullRequestReviewContribution]",
          "id": "createdpullrequestreviewcontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdpullrequestreviewcontribution"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CreatedPullRequestReviewContributionEdge",
      "kind": "objects",
      "id": "createdpullrequestreviewcontributionedge",
      "href": "/graphql/reference/objects#createdpullrequestreviewcontributionedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "CreatedPullRequestReviewContribution",
          "id": "createdpullrequestreviewcontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdpullrequestreviewcontribution"
        }
      ]
    },
    {
      "name": "CreatedRepositoryContribution",
      "kind": "objects",
      "id": "createdrepositorycontribution",
      "href": "/graphql/reference/objects#createdrepositorycontribution",
      "description": "<p>Represents the contribution a user made on GitHub by creating a repository.</p>",
      "implements": [
        {
          "name": "Contribution",
          "id": "contribution",
          "href": "/graphql/reference/interfaces#contribution"
        }
      ],
      "fields": [
        {
          "name": "isRestricted",
          "description": "<p>Whether this contribution is associated with a record you do not have access to. For\nexample, your own 'first issue' contribution may have been made on a repository you can no\nlonger access.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "occurredAt",
          "description": "<p>When this contribution was made.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "repository",
          "description": "<p>The repository that was created.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user who made this contribution.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "CreatedRepositoryContributionConnection",
      "kind": "objects",
      "id": "createdrepositorycontributionconnection",
      "href": "/graphql/reference/objects#createdrepositorycontributionconnection",
      "description": "<p>The connection type for CreatedRepositoryContribution.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[CreatedRepositoryContributionEdge]",
          "id": "createdrepositorycontributionedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdrepositorycontributionedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[CreatedRepositoryContribution]",
          "id": "createdrepositorycontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdrepositorycontribution"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CreatedRepositoryContributionEdge",
      "kind": "objects",
      "id": "createdrepositorycontributionedge",
      "href": "/graphql/reference/objects#createdrepositorycontributionedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "CreatedRepositoryContribution",
          "id": "createdrepositorycontribution",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdrepositorycontribution"
        }
      ]
    },
    {
      "name": "CrossReferencedEvent",
      "kind": "objects",
      "id": "crossreferencedevent",
      "href": "/graphql/reference/objects#crossreferencedevent",
      "description": "<p>Represents a mention made by one issue or pull request to another.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "isCrossRepository",
          "description": "<p>Reference originated in a different repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "referencedAt",
          "description": "<p>Identifies when the reference was made.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this pull request.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "source",
          "description": "<p>Issue or pull request that made the reference.</p>",
          "type": "ReferencedSubject!",
          "id": "referencedsubject",
          "kind": "unions",
          "href": "/graphql/reference/unions#referencedsubject"
        },
        {
          "name": "target",
          "description": "<p>Issue or pull request to which the reference was made.</p>",
          "type": "ReferencedSubject!",
          "id": "referencedsubject",
          "kind": "unions",
          "href": "/graphql/reference/unions#referencedsubject"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this pull request.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "willCloseTarget",
          "description": "<p>Checks if the target will be closed when the source is merged.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "DemilestonedEvent",
      "kind": "objects",
      "id": "demilestonedevent",
      "href": "/graphql/reference/objects#demilestonedevent",
      "description": "<p>Represents a<code>demilestoned</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "milestoneTitle",
          "description": "<p>Identifies the milestone title associated with the<code>demilestoned</code>event.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "subject",
          "description": "<p>Object referenced by event.</p>",
          "type": "MilestoneItem!",
          "id": "milestoneitem",
          "kind": "unions",
          "href": "/graphql/reference/unions#milestoneitem"
        }
      ]
    },
    {
      "name": "DeployKey",
      "kind": "objects",
      "id": "deploykey",
      "href": "/graphql/reference/objects#deploykey",
      "description": "<p>A repository deploy key.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "key",
          "description": "<p>The deploy key.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "readOnly",
          "description": "<p>Whether or not the deploy key is read only.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "title",
          "description": "<p>The deploy key title.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "verified",
          "description": "<p>Whether or not the deploy key has been verified.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "DeployKeyConnection",
      "kind": "objects",
      "id": "deploykeyconnection",
      "href": "/graphql/reference/objects#deploykeyconnection",
      "description": "<p>The connection type for DeployKey.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[DeployKeyEdge]",
          "id": "deploykeyedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploykeyedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[DeployKey]",
          "id": "deploykey",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploykey"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "DeployKeyEdge",
      "kind": "objects",
      "id": "deploykeyedge",
      "href": "/graphql/reference/objects#deploykeyedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "DeployKey",
          "id": "deploykey",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploykey"
        }
      ]
    },
    {
      "name": "DeployedEvent",
      "kind": "objects",
      "id": "deployedevent",
      "href": "/graphql/reference/objects#deployedevent",
      "description": "<p>Represents a<code>deployed</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "deployment",
          "description": "<p>The deployment associated with the<code>deployed</code>event.</p>",
          "type": "Deployment!",
          "id": "deployment",
          "kind": "objects",
          "href": "/graphql/reference/objects#deployment"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "ref",
          "description": "<p>The ref associated with the<code>deployed</code>event.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        }
      ]
    },
    {
      "name": "Deployment",
      "kind": "objects",
      "id": "deployment",
      "href": "/graphql/reference/objects#deployment",
      "description": "<p>Represents triggered deployment instance.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "commit",
          "description": "<p>Identifies the commit sha of the deployment.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "commitOid",
          "description": "<p>Identifies the oid of the deployment commit, even if the commit has been deleted.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "creator",
          "description": "<p>Identifies the actor who triggered the deployment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "description",
          "description": "<p>The deployment description.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "environment",
          "description": "<p>The environment to which this deployment was made.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "latestStatus",
          "description": "<p>The latest status of this deployment.</p>",
          "type": "DeploymentStatus",
          "id": "deploymentstatus",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentstatus"
        },
        {
          "name": "payload",
          "description": "<p>Extra information that a deployment system might need.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "ref",
          "description": "<p>Identifies the Ref of the deployment, if the deployment was created by ref.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        },
        {
          "name": "repository",
          "description": "<p>Identifies the repository associated with the deployment.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "state",
          "description": "<p>The current state of the deployment.</p>",
          "type": "DeploymentState",
          "id": "deploymentstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#deploymentstate"
        },
        {
          "name": "statuses",
          "description": "<p>A list of statuses associated with the deployment.</p>",
          "type": "DeploymentStatusConnection",
          "id": "deploymentstatusconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentstatusconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "task",
          "description": "<p>The deployment task.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "DeploymentConnection",
      "kind": "objects",
      "id": "deploymentconnection",
      "href": "/graphql/reference/objects#deploymentconnection",
      "description": "<p>The connection type for Deployment.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[DeploymentEdge]",
          "id": "deploymentedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Deployment]",
          "id": "deployment",
          "kind": "objects",
          "href": "/graphql/reference/objects#deployment"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "DeploymentEdge",
      "kind": "objects",
      "id": "deploymentedge",
      "href": "/graphql/reference/objects#deploymentedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Deployment",
          "id": "deployment",
          "kind": "objects",
          "href": "/graphql/reference/objects#deployment"
        }
      ]
    },
    {
      "name": "DeploymentEnvironmentChangedEvent",
      "kind": "objects",
      "id": "deploymentenvironmentchangedevent",
      "href": "/graphql/reference/objects#deploymentenvironmentchangedevent",
      "description": "<p>Represents a<code>deployment_environment_changed</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "deploymentStatus",
          "description": "<p>The deployment status that updated the deployment environment.</p>",
          "type": "DeploymentStatus!",
          "id": "deploymentstatus",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentstatus"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "DeploymentStatus",
      "kind": "objects",
      "id": "deploymentstatus",
      "href": "/graphql/reference/objects#deploymentstatus",
      "description": "<p>Describes the status of a given deployment attempt.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "creator",
          "description": "<p>Identifies the actor who triggered the deployment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "deployment",
          "description": "<p>Identifies the deployment associated with status.</p>",
          "type": "Deployment!",
          "id": "deployment",
          "kind": "objects",
          "href": "/graphql/reference/objects#deployment"
        },
        {
          "name": "description",
          "description": "<p>Identifies the description of the deployment.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "environment",
          "description": "<p>Identifies the environment of the deployment at the time of this deployment status.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "isDeprecated": false,
          "preview": {
            "title": "Deployments preview",
            "description": "This preview adds support for deployments mutations and new deployments features.",
            "toggled_by": "flash-preview",
            "toggled_on": [
              "DeploymentStatus.environment",
              "Mutation.createDeploymentStatus",
              "Mutation.createDeployment"
            ],
            "owning_teams": [
              "@github/ecosystem-api"
            ],
            "accept_header": "application/vnd.github.flash-preview+json",
            "href": "/graphql/overview/schema-previews#deployments-preview"
          }
        },
        {
          "name": "environmentUrl",
          "description": "<p>Identifies the environment URL of the deployment.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "logUrl",
          "description": "<p>Identifies the log URL of the deployment.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "state",
          "description": "<p>Identifies the current state of the deployment.</p>",
          "type": "DeploymentStatusState!",
          "id": "deploymentstatusstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#deploymentstatusstate"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "DeploymentStatusConnection",
      "kind": "objects",
      "id": "deploymentstatusconnection",
      "href": "/graphql/reference/objects#deploymentstatusconnection",
      "description": "<p>The connection type for DeploymentStatus.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[DeploymentStatusEdge]",
          "id": "deploymentstatusedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentstatusedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[DeploymentStatus]",
          "id": "deploymentstatus",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentstatus"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "DeploymentStatusEdge",
      "kind": "objects",
      "id": "deploymentstatusedge",
      "href": "/graphql/reference/objects#deploymentstatusedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "DeploymentStatus",
          "id": "deploymentstatus",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentstatus"
        }
      ]
    },
    {
      "name": "ExternalIdentity",
      "kind": "objects",
      "id": "externalidentity",
      "href": "/graphql/reference/objects#externalidentity",
      "description": "<p>An external identity provisioned by SAML SSO or SCIM.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "guid",
          "description": "<p>The GUID for this identity.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationInvitation",
          "description": "<p>Organization invitation for this SCIM-provisioned external identity.</p>",
          "type": "OrganizationInvitation",
          "id": "organizationinvitation",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationinvitation"
        },
        {
          "name": "samlIdentity",
          "description": "<p>SAML Identity attributes.</p>",
          "type": "ExternalIdentitySamlAttributes",
          "id": "externalidentitysamlattributes",
          "kind": "objects",
          "href": "/graphql/reference/objects#externalidentitysamlattributes"
        },
        {
          "name": "scimIdentity",
          "description": "<p>SCIM Identity attributes.</p>",
          "type": "ExternalIdentityScimAttributes",
          "id": "externalidentityscimattributes",
          "kind": "objects",
          "href": "/graphql/reference/objects#externalidentityscimattributes"
        },
        {
          "name": "user",
          "description": "<p>User linked to this external identity. Will be NULL if this identity has not been claimed by an organization member.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "ExternalIdentityConnection",
      "kind": "objects",
      "id": "externalidentityconnection",
      "href": "/graphql/reference/objects#externalidentityconnection",
      "description": "<p>The connection type for ExternalIdentity.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ExternalIdentityEdge]",
          "id": "externalidentityedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#externalidentityedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[ExternalIdentity]",
          "id": "externalidentity",
          "kind": "objects",
          "href": "/graphql/reference/objects#externalidentity"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ExternalIdentityEdge",
      "kind": "objects",
      "id": "externalidentityedge",
      "href": "/graphql/reference/objects#externalidentityedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "ExternalIdentity",
          "id": "externalidentity",
          "kind": "objects",
          "href": "/graphql/reference/objects#externalidentity"
        }
      ]
    },
    {
      "name": "ExternalIdentitySamlAttributes",
      "kind": "objects",
      "id": "externalidentitysamlattributes",
      "href": "/graphql/reference/objects#externalidentitysamlattributes",
      "description": "<p>SAML attributes for the External Identity.</p>",
      "fields": [
        {
          "name": "nameId",
          "description": "<p>The NameID of the SAML identity.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "ExternalIdentityScimAttributes",
      "kind": "objects",
      "id": "externalidentityscimattributes",
      "href": "/graphql/reference/objects#externalidentityscimattributes",
      "description": "<p>SCIM attributes for the External Identity.</p>",
      "fields": [
        {
          "name": "username",
          "description": "<p>The userName of the SCIM identity.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "FollowerConnection",
      "kind": "objects",
      "id": "followerconnection",
      "href": "/graphql/reference/objects#followerconnection",
      "description": "<p>The connection type for User.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[UserEdge]",
          "id": "useredge",
          "kind": "objects",
          "href": "/graphql/reference/objects#useredge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[User]",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "FollowingConnection",
      "kind": "objects",
      "id": "followingconnection",
      "href": "/graphql/reference/objects#followingconnection",
      "description": "<p>The connection type for User.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[UserEdge]",
          "id": "useredge",
          "kind": "objects",
          "href": "/graphql/reference/objects#useredge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[User]",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "GenericHovercardContext",
      "kind": "objects",
      "id": "generichovercardcontext",
      "href": "/graphql/reference/objects#generichovercardcontext",
      "description": "<p>A generic hovercard context with a message and icon.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Hovercards preview",
        "description": "This preview adds support for reading hovercard contextual data",
        "toggled_by": "hagar-preview",
        "toggled_on": [
          "Issue.hovercard",
          "PullRequest.hovercard",
          "User.hovercard",
          "HovercardContext",
          "GenericHovercardContext",
          "Hovercard",
          "OrganizationTeamsHovercardContext",
          "OrganizationsHovercardContext",
          "ReviewStatusHovercardContext",
          "ViewerHovercardContext"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.hagar-preview+json",
        "href": "/graphql/overview/schema-previews#hovercards-preview"
      },
      "implements": [
        {
          "name": "HovercardContext",
          "id": "hovercardcontext",
          "href": "/graphql/reference/interfaces#hovercardcontext"
        }
      ],
      "fields": [
        {
          "name": "message",
          "description": "<p>A string describing this context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "octicon",
          "description": "<p>An octicon to accompany this context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "Gist",
      "kind": "objects",
      "id": "gist",
      "href": "/graphql/reference/objects#gist",
      "description": "<p>A Gist.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Starrable",
          "id": "starrable",
          "href": "/graphql/reference/interfaces#starrable"
        }
      ],
      "fields": [
        {
          "name": "comments",
          "description": "<p>A list of comments associated with the gist.</p>",
          "type": "GistCommentConnection!",
          "id": "gistcommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#gistcommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "description",
          "description": "<p>The gist description.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "files",
          "description": "<p>The files in this gist.</p>",
          "type": "[GistFile]",
          "id": "gistfile",
          "kind": "objects",
          "href": "/graphql/reference/objects#gistfile",
          "arguments": [
            {
              "name": "limit",
              "defaultValue": "10",
              "description": "<p>The maximum number of files to return.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "isFork",
          "description": "<p>Identifies if the gist is a fork.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isPublic",
          "description": "<p>Whether the gist is public or not.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "name",
          "description": "<p>The gist name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "owner",
          "description": "<p>The gist owner.</p>",
          "type": "RepositoryOwner",
          "id": "repositoryowner",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#repositoryowner"
        },
        {
          "name": "pushedAt",
          "description": "<p>Identifies when the gist was last pushed to.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "stargazers",
          "description": "<p>A list of users who have starred this starrable.</p>",
          "type": "StargazerConnection!",
          "id": "stargazerconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#stargazerconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Order for connection.</p>",
              "type": {
                "name": "StarOrder",
                "id": "starorder",
                "href": "/graphql/reference/scalar#starorder"
              }
            }
          ]
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "viewerHasStarred",
          "description": "<p>Returns a boolean indicating whether the viewing user has starred this starrable.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "GistComment",
      "kind": "objects",
      "id": "gistcomment",
      "href": "/graphql/reference/objects#gistcomment",
      "description": "<p>Represents a comment on an Gist.</p>",
      "implements": [
        {
          "name": "Comment",
          "id": "comment",
          "href": "/graphql/reference/interfaces#comment"
        },
        {
          "name": "Deletable",
          "id": "deletable",
          "href": "/graphql/reference/interfaces#deletable"
        },
        {
          "name": "Minimizable",
          "id": "minimizable",
          "href": "/graphql/reference/interfaces#minimizable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Updatable",
          "id": "updatable",
          "href": "/graphql/reference/interfaces#updatable"
        },
        {
          "name": "UpdatableComment",
          "id": "updatablecomment",
          "href": "/graphql/reference/interfaces#updatablecomment"
        }
      ],
      "fields": [
        {
          "name": "author",
          "description": "<p>The actor who authored the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "authorAssociation",
          "description": "<p>Author's association with the gist.</p>",
          "type": "CommentAuthorAssociation!",
          "id": "commentauthorassociation",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentauthorassociation"
        },
        {
          "name": "body",
          "description": "<p>Identifies the comment body.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>The comment body rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "bodyText",
          "description": "<p>The body rendered to text.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdViaEmail",
          "description": "<p>Check if this comment was created via an email reply.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "editor",
          "description": "<p>The actor who edited the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "gist",
          "description": "<p>The associated gist.</p>",
          "type": "Gist!",
          "id": "gist",
          "kind": "objects",
          "href": "/graphql/reference/objects#gist"
        },
        {
          "name": "includesCreatedEdit",
          "description": "<p>Check if this comment was edited and includes an edit with the creation data.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isMinimized",
          "description": "<p>Returns whether or not a comment has been minimized.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "lastEditedAt",
          "description": "<p>The moment the editor made the last edit.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "minimizedReason",
          "description": "<p>Returns why the comment was minimized.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "publishedAt",
          "description": "<p>Identifies when the comment was published at.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "userContentEdits",
          "description": "<p>A list of edits to this content.</p>",
          "type": "UserContentEditConnection",
          "id": "usercontenteditconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontenteditconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "viewerCanDelete",
          "description": "<p>Check if the current viewer can delete this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanMinimize",
          "description": "<p>Check if the current viewer can minimize this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpdate",
          "description": "<p>Check if the current viewer can update this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCannotUpdateReasons",
          "description": "<p>Reasons why the current viewer can not update this comment.</p>",
          "type": "[CommentCannotUpdateReason!]!",
          "id": "commentcannotupdatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentcannotupdatereason"
        },
        {
          "name": "viewerDidAuthor",
          "description": "<p>Did the viewer author this comment.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "GistCommentConnection",
      "kind": "objects",
      "id": "gistcommentconnection",
      "href": "/graphql/reference/objects#gistcommentconnection",
      "description": "<p>The connection type for GistComment.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[GistCommentEdge]",
          "id": "gistcommentedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#gistcommentedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[GistComment]",
          "id": "gistcomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#gistcomment"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "GistCommentEdge",
      "kind": "objects",
      "id": "gistcommentedge",
      "href": "/graphql/reference/objects#gistcommentedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "GistComment",
          "id": "gistcomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#gistcomment"
        }
      ]
    },
    {
      "name": "GistConnection",
      "kind": "objects",
      "id": "gistconnection",
      "href": "/graphql/reference/objects#gistconnection",
      "description": "<p>The connection type for Gist.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[GistEdge]",
          "id": "gistedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#gistedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Gist]",
          "id": "gist",
          "kind": "objects",
          "href": "/graphql/reference/objects#gist"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "GistEdge",
      "kind": "objects",
      "id": "gistedge",
      "href": "/graphql/reference/objects#gistedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Gist",
          "id": "gist",
          "kind": "objects",
          "href": "/graphql/reference/objects#gist"
        }
      ]
    },
    {
      "name": "GistFile",
      "kind": "objects",
      "id": "gistfile",
      "href": "/graphql/reference/objects#gistfile",
      "description": "<p>A file in a gist.</p>",
      "fields": [
        {
          "name": "encodedName",
          "description": "<p>The file name encoded to remove characters that are invalid in URL paths.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "encoding",
          "description": "<p>The gist file encoding.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "extension",
          "description": "<p>The file extension from the file name.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "isImage",
          "description": "<p>Indicates if this file is an image.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isTruncated",
          "description": "<p>Whether the file's contents were truncated.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "language",
          "description": "<p>The programming language this file is written in.</p>",
          "type": "Language",
          "id": "language",
          "kind": "objects",
          "href": "/graphql/reference/objects#language"
        },
        {
          "name": "name",
          "description": "<p>The gist file name.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "size",
          "description": "<p>The gist file size in bytes.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "text",
          "description": "<p>UTF8 text data or null if the file is binary.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "arguments": [
            {
              "name": "truncate",
              "description": "<p>Optionally truncate the returned file to this length.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "GitActor",
      "kind": "objects",
      "id": "gitactor",
      "href": "/graphql/reference/objects#gitactor",
      "description": "<p>Represents an actor in a Git commit (ie. an author or committer).</p>",
      "fields": [
        {
          "name": "avatarUrl",
          "description": "<p>A URL pointing to the author's public avatar.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri",
          "arguments": [
            {
              "name": "size",
              "description": "<p>The size of the resulting square image.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "date",
          "description": "<p>The timestamp of the Git action (authoring or committing).</p>",
          "type": "GitTimestamp",
          "id": "gittimestamp",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gittimestamp"
        },
        {
          "name": "email",
          "description": "<p>The email in the Git commit.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The name in the Git commit.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "user",
          "description": "<p>The GitHub user corresponding to the email field. Null if no such user exists.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "GitHubMetadata",
      "kind": "objects",
      "id": "githubmetadata",
      "href": "/graphql/reference/objects#githubmetadata",
      "description": "<p>Represents information about the GitHub instance.</p>",
      "fields": [
        {
          "name": "gitHubServicesSha",
          "description": "<p>Returns a String that's a SHA of <code>github-services</code>.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "isPasswordAuthenticationVerifiable",
          "description": "<p>Whether or not users are verified.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "GpgSignature",
      "kind": "objects",
      "id": "gpgsignature",
      "href": "/graphql/reference/objects#gpgsignature",
      "description": "<p>Represents a GPG signature on a Commit or Tag.</p>",
      "implements": [
        {
          "name": "GitSignature",
          "id": "gitsignature",
          "href": "/graphql/reference/interfaces#gitsignature"
        }
      ],
      "fields": [
        {
          "name": "email",
          "description": "<p>Email used to sign this object.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "isValid",
          "description": "<p>True if the signature is valid and verified by GitHub.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "keyId",
          "description": "<p>Hex-encoded ID of the key that signed this object.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "payload",
          "description": "<p>Payload for GPG signing object. Raw ODB object without the signature header.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "signature",
          "description": "<p>ASCII-armored signature header from object.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "signer",
          "description": "<p>GitHub user corresponding to the email signing this commit.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "state",
          "description": "<p>The state of this signature. <code>VALID</code> if signature is valid and verified by\nGitHub, otherwise represents reason why signature is considered invalid.</p>",
          "type": "GitSignatureState!",
          "id": "gitsignaturestate",
          "kind": "enums",
          "href": "/graphql/reference/enums#gitsignaturestate"
        },
        {
          "name": "wasSignedByGitHub",
          "description": "<p>True if the signature was made with GitHub's signing key.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "HeadRefDeletedEvent",
      "kind": "objects",
      "id": "headrefdeletedevent",
      "href": "/graphql/reference/objects#headrefdeletedevent",
      "description": "<p>Represents a<code>head_ref_deleted</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "headRef",
          "description": "<p>Identifies the Ref associated with the <code>head_ref_deleted</code> event.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        },
        {
          "name": "headRefName",
          "description": "<p>Identifies the name of the Ref associated with the <code>head_ref_deleted</code> event.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "HeadRefForcePushedEvent",
      "kind": "objects",
      "id": "headrefforcepushedevent",
      "href": "/graphql/reference/objects#headrefforcepushedevent",
      "description": "<p>Represents a<code>head_ref_force_pushed</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "afterCommit",
          "description": "<p>Identifies the after commit SHA for the<code>head_ref_force_pushed</code>event.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "beforeCommit",
          "description": "<p>Identifies the before commit SHA for the<code>head_ref_force_pushed</code>event.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "ref",
          "description": "<p>Identifies the fully qualified ref name for the<code>head_ref_force_pushed</code>event.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        }
      ]
    },
    {
      "name": "HeadRefRestoredEvent",
      "kind": "objects",
      "id": "headrefrestoredevent",
      "href": "/graphql/reference/objects#headrefrestoredevent",
      "description": "<p>Represents a<code>head_ref_restored</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "Hovercard",
      "kind": "objects",
      "id": "hovercard",
      "href": "/graphql/reference/objects#hovercard",
      "description": "<p>Detail needed to display a hovercard for a user.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Hovercards preview",
        "description": "This preview adds support for reading hovercard contextual data",
        "toggled_by": "hagar-preview",
        "toggled_on": [
          "Issue.hovercard",
          "PullRequest.hovercard",
          "User.hovercard",
          "HovercardContext",
          "GenericHovercardContext",
          "Hovercard",
          "OrganizationTeamsHovercardContext",
          "OrganizationsHovercardContext",
          "ReviewStatusHovercardContext",
          "ViewerHovercardContext"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.hagar-preview+json",
        "href": "/graphql/overview/schema-previews#hovercards-preview"
      },
      "fields": [
        {
          "name": "contexts",
          "description": "<p>Each of the contexts for this hovercard.</p>",
          "type": "[HovercardContext!]!",
          "id": "hovercardcontext",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#hovercardcontext"
        }
      ]
    },
    {
      "name": "Issue",
      "kind": "objects",
      "id": "issue",
      "href": "/graphql/reference/objects#issue",
      "description": "<p>An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.</p>",
      "implements": [
        {
          "name": "Assignable",
          "id": "assignable",
          "href": "/graphql/reference/interfaces#assignable"
        },
        {
          "name": "Closable",
          "id": "closable",
          "href": "/graphql/reference/interfaces#closable"
        },
        {
          "name": "Comment",
          "id": "comment",
          "href": "/graphql/reference/interfaces#comment"
        },
        {
          "name": "Labelable",
          "id": "labelable",
          "href": "/graphql/reference/interfaces#labelable"
        },
        {
          "name": "Lockable",
          "id": "lockable",
          "href": "/graphql/reference/interfaces#lockable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Reactable",
          "id": "reactable",
          "href": "/graphql/reference/interfaces#reactable"
        },
        {
          "name": "RepositoryNode",
          "id": "repositorynode",
          "href": "/graphql/reference/interfaces#repositorynode"
        },
        {
          "name": "Subscribable",
          "id": "subscribable",
          "href": "/graphql/reference/interfaces#subscribable"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        },
        {
          "name": "Updatable",
          "id": "updatable",
          "href": "/graphql/reference/interfaces#updatable"
        },
        {
          "name": "UpdatableComment",
          "id": "updatablecomment",
          "href": "/graphql/reference/interfaces#updatablecomment"
        }
      ],
      "fields": [
        {
          "name": "activeLockReason",
          "description": "<p>Reason that the conversation was locked.</p>",
          "type": "LockReason",
          "id": "lockreason",
          "kind": "enums",
          "href": "/graphql/reference/enums#lockreason"
        },
        {
          "name": "assignees",
          "description": "<p>A list of Users assigned to this object.</p>",
          "type": "UserConnection!",
          "id": "userconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "author",
          "description": "<p>The actor who authored the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "authorAssociation",
          "description": "<p>Author's association with the subject of the comment.</p>",
          "type": "CommentAuthorAssociation!",
          "id": "commentauthorassociation",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentauthorassociation"
        },
        {
          "name": "body",
          "description": "<p>Identifies the body of the issue.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>Identifies the body of the issue rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "bodyText",
          "description": "<p>Identifies the body of the issue rendered to text.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "closed",
          "description": "<p><code>true</code> if the object is closed (definition of closed may depend on type).</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "closedAt",
          "description": "<p>Identifies the date and time when the object was closed.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "comments",
          "description": "<p>A list of comments associated with the Issue.</p>",
          "type": "IssueCommentConnection!",
          "id": "issuecommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuecommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdViaEmail",
          "description": "<p>Check if this comment was created via an email reply.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "editor",
          "description": "<p>The actor who edited the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "hovercard",
          "description": "<p>The hovercard information for this issue.</p>",
          "type": "Hovercard!",
          "id": "hovercard",
          "kind": "objects",
          "href": "/graphql/reference/objects#hovercard",
          "arguments": [
            {
              "name": "includeNotificationContexts",
              "defaultValue": true,
              "description": "<p>Whether or not to include notification contexts.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            }
          ],
          "isDeprecated": false,
          "preview": {
            "title": "Hovercards preview",
            "description": "This preview adds support for reading hovercard contextual data",
            "toggled_by": "hagar-preview",
            "toggled_on": [
              "Issue.hovercard",
              "PullRequest.hovercard",
              "User.hovercard",
              "HovercardContext",
              "GenericHovercardContext",
              "Hovercard",
              "OrganizationTeamsHovercardContext",
              "OrganizationsHovercardContext",
              "ReviewStatusHovercardContext",
              "ViewerHovercardContext"
            ],
            "owning_teams": [
              "@github/identity"
            ],
            "accept_header": "application/vnd.github.hagar-preview+json",
            "href": "/graphql/overview/schema-previews#hovercards-preview"
          }
        },
        {
          "name": "includesCreatedEdit",
          "description": "<p>Check if this comment was edited and includes an edit with the creation data.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "labels",
          "description": "<p>A list of labels associated with the object.</p>",
          "type": "LabelConnection",
          "id": "labelconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#labelconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "lastEditedAt",
          "description": "<p>The moment the editor made the last edit.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "locked",
          "description": "<p><code>true</code> if the object is locked.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "milestone",
          "description": "<p>Identifies the milestone associated with the issue.</p>",
          "type": "Milestone",
          "id": "milestone",
          "kind": "objects",
          "href": "/graphql/reference/objects#milestone"
        },
        {
          "name": "number",
          "description": "<p>Identifies the issue number.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "participants",
          "description": "<p>A list of Users that are participating in the Issue conversation.</p>",
          "type": "UserConnection!",
          "id": "userconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "projectCards",
          "description": "<p>List of project cards associated with this issue.</p>",
          "type": "ProjectCardConnection!",
          "id": "projectcardconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcardconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "archivedStates",
              "description": "<p>A list of archived states to filter the cards by.</p>",
              "type": {
                "name": "[ProjectCardArchivedState]",
                "id": "projectcardarchivedstate",
                "href": "/graphql/reference/scalar#projectcardarchivedstate"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "publishedAt",
          "description": "<p>Identifies when the comment was published at.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "reactionGroups",
          "description": "<p>A list of reactions grouped by content left on the subject.</p>",
          "type": "[ReactionGroup!]",
          "id": "reactiongroup",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactiongroup"
        },
        {
          "name": "reactions",
          "description": "<p>A list of Reactions left on the Issue.</p>",
          "type": "ReactionConnection!",
          "id": "reactionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "content",
              "description": "<p>Allows filtering Reactions by emoji.</p>",
              "type": {
                "name": "ReactionContent",
                "id": "reactioncontent",
                "href": "/graphql/reference/scalar#reactioncontent"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Allows specifying the order in which reactions are returned.</p>",
              "type": {
                "name": "ReactionOrder",
                "id": "reactionorder",
                "href": "/graphql/reference/scalar#reactionorder"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this node.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this issue.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "state",
          "description": "<p>Identifies the state of the issue.</p>",
          "type": "IssueState!",
          "id": "issuestate",
          "kind": "enums",
          "href": "/graphql/reference/enums#issuestate"
        },
        {
          "name": "timeline",
          "description": "<p>A list of events, comments, commits, etc. associated with the issue.</p>",
          "type": "IssueTimelineConnection!",
          "id": "issuetimelineconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuetimelineconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "since",
              "description": "<p>Allows filtering timeline events by a <code>since</code> timestamp.</p>",
              "type": {
                "name": "DateTime",
                "id": "datetime",
                "href": "/graphql/reference/scalar#datetime"
              }
            }
          ]
        },
        {
          "name": "timelineItems",
          "description": "<p>A list of events, comments, commits, etc. associated with the issue.</p>",
          "type": "IssueTimelineItemsConnection!",
          "id": "issuetimelineitemsconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuetimelineitemsconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "itemTypes",
              "description": "<p>Filter timeline items by type.</p>",
              "type": {
                "name": "[IssueTimelineItemsItemType!]",
                "id": "issuetimelineitemsitemtype",
                "href": "/graphql/reference/scalar#issuetimelineitemsitemtype"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "since",
              "description": "<p>Filter timeline items by a <code>since</code> timestamp.</p>",
              "type": {
                "name": "DateTime",
                "id": "datetime",
                "href": "/graphql/reference/scalar#datetime"
              }
            },
            {
              "name": "skip",
              "description": "<p>Skips the first <em>n</em> elements in the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "title",
          "description": "<p>Identifies the issue title.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this issue.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userContentEdits",
          "description": "<p>A list of edits to this content.</p>",
          "type": "UserContentEditConnection",
          "id": "usercontenteditconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontenteditconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "viewerCanReact",
          "description": "<p>Can user react to this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanSubscribe",
          "description": "<p>Check if the viewer is able to change their subscription status for the repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpdate",
          "description": "<p>Check if the current viewer can update this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCannotUpdateReasons",
          "description": "<p>Reasons why the current viewer can not update this comment.</p>",
          "type": "[CommentCannotUpdateReason!]!",
          "id": "commentcannotupdatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentcannotupdatereason"
        },
        {
          "name": "viewerDidAuthor",
          "description": "<p>Did the viewer author this comment.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerSubscription",
          "description": "<p>Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.</p>",
          "type": "SubscriptionState",
          "id": "subscriptionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#subscriptionstate"
        }
      ]
    },
    {
      "name": "IssueComment",
      "kind": "objects",
      "id": "issuecomment",
      "href": "/graphql/reference/objects#issuecomment",
      "description": "<p>Represents a comment on an Issue.</p>",
      "implements": [
        {
          "name": "Comment",
          "id": "comment",
          "href": "/graphql/reference/interfaces#comment"
        },
        {
          "name": "Deletable",
          "id": "deletable",
          "href": "/graphql/reference/interfaces#deletable"
        },
        {
          "name": "Minimizable",
          "id": "minimizable",
          "href": "/graphql/reference/interfaces#minimizable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Reactable",
          "id": "reactable",
          "href": "/graphql/reference/interfaces#reactable"
        },
        {
          "name": "RepositoryNode",
          "id": "repositorynode",
          "href": "/graphql/reference/interfaces#repositorynode"
        },
        {
          "name": "Updatable",
          "id": "updatable",
          "href": "/graphql/reference/interfaces#updatable"
        },
        {
          "name": "UpdatableComment",
          "id": "updatablecomment",
          "href": "/graphql/reference/interfaces#updatablecomment"
        }
      ],
      "fields": [
        {
          "name": "author",
          "description": "<p>The actor who authored the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "authorAssociation",
          "description": "<p>Author's association with the subject of the comment.</p>",
          "type": "CommentAuthorAssociation!",
          "id": "commentauthorassociation",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentauthorassociation"
        },
        {
          "name": "body",
          "description": "<p>The body as Markdown.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>The body rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "bodyText",
          "description": "<p>The body rendered to text.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdViaEmail",
          "description": "<p>Check if this comment was created via an email reply.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "editor",
          "description": "<p>The actor who edited the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "includesCreatedEdit",
          "description": "<p>Check if this comment was edited and includes an edit with the creation data.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isMinimized",
          "description": "<p>Returns whether or not a comment has been minimized.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "issue",
          "description": "<p>Identifies the issue associated with the comment.</p>",
          "type": "Issue!",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue"
        },
        {
          "name": "lastEditedAt",
          "description": "<p>The moment the editor made the last edit.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "minimizedReason",
          "description": "<p>Returns why the comment was minimized.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "publishedAt",
          "description": "<p>Identifies when the comment was published at.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "pullRequest",
          "description": "<p>Returns the pull request associated with the comment, if this comment was made on a\npull request.</p>",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "reactionGroups",
          "description": "<p>A list of reactions grouped by content left on the subject.</p>",
          "type": "[ReactionGroup!]",
          "id": "reactiongroup",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactiongroup"
        },
        {
          "name": "reactions",
          "description": "<p>A list of Reactions left on the Issue.</p>",
          "type": "ReactionConnection!",
          "id": "reactionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "content",
              "description": "<p>Allows filtering Reactions by emoji.</p>",
              "type": {
                "name": "ReactionContent",
                "id": "reactioncontent",
                "href": "/graphql/reference/scalar#reactioncontent"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Allows specifying the order in which reactions are returned.</p>",
              "type": {
                "name": "ReactionOrder",
                "id": "reactionorder",
                "href": "/graphql/reference/scalar#reactionorder"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this node.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this issue comment.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this issue comment.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userContentEdits",
          "description": "<p>A list of edits to this content.</p>",
          "type": "UserContentEditConnection",
          "id": "usercontenteditconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontenteditconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "viewerCanDelete",
          "description": "<p>Check if the current viewer can delete this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanMinimize",
          "description": "<p>Check if the current viewer can minimize this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanReact",
          "description": "<p>Can user react to this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpdate",
          "description": "<p>Check if the current viewer can update this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCannotUpdateReasons",
          "description": "<p>Reasons why the current viewer can not update this comment.</p>",
          "type": "[CommentCannotUpdateReason!]!",
          "id": "commentcannotupdatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentcannotupdatereason"
        },
        {
          "name": "viewerDidAuthor",
          "description": "<p>Did the viewer author this comment.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "IssueCommentConnection",
      "kind": "objects",
      "id": "issuecommentconnection",
      "href": "/graphql/reference/objects#issuecommentconnection",
      "description": "<p>The connection type for IssueComment.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[IssueCommentEdge]",
          "id": "issuecommentedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuecommentedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[IssueComment]",
          "id": "issuecomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuecomment"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "IssueCommentEdge",
      "kind": "objects",
      "id": "issuecommentedge",
      "href": "/graphql/reference/objects#issuecommentedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "IssueComment",
          "id": "issuecomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuecomment"
        }
      ]
    },
    {
      "name": "IssueConnection",
      "kind": "objects",
      "id": "issueconnection",
      "href": "/graphql/reference/objects#issueconnection",
      "description": "<p>The connection type for Issue.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[IssueEdge]",
          "id": "issueedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#issueedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Issue]",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "IssueContributionsByRepository",
      "kind": "objects",
      "id": "issuecontributionsbyrepository",
      "href": "/graphql/reference/objects#issuecontributionsbyrepository",
      "description": "<p>This aggregates issues opened by a user within one repository.</p>",
      "fields": [
        {
          "name": "contributions",
          "description": "<p>The issue contributions.</p>",
          "type": "CreatedIssueContributionConnection!",
          "id": "createdissuecontributionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdissuecontributionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for contributions returned from the connection.</p>",
              "type": {
                "name": "ContributionOrder",
                "id": "contributionorder",
                "href": "/graphql/reference/scalar#contributionorder"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository in which the issues were opened.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "IssueEdge",
      "kind": "objects",
      "id": "issueedge",
      "href": "/graphql/reference/objects#issueedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Issue",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue"
        }
      ]
    },
    {
      "name": "IssueTimelineConnection",
      "kind": "objects",
      "id": "issuetimelineconnection",
      "href": "/graphql/reference/objects#issuetimelineconnection",
      "description": "<p>The connection type for IssueTimelineItem.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[IssueTimelineItemEdge]",
          "id": "issuetimelineitemedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuetimelineitemedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[IssueTimelineItem]",
          "id": "issuetimelineitem",
          "kind": "unions",
          "href": "/graphql/reference/unions#issuetimelineitem"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "IssueTimelineItemEdge",
      "kind": "objects",
      "id": "issuetimelineitemedge",
      "href": "/graphql/reference/objects#issuetimelineitemedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "IssueTimelineItem",
          "id": "issuetimelineitem",
          "kind": "unions",
          "href": "/graphql/reference/unions#issuetimelineitem"
        }
      ]
    },
    {
      "name": "IssueTimelineItemsConnection",
      "kind": "objects",
      "id": "issuetimelineitemsconnection",
      "href": "/graphql/reference/objects#issuetimelineitemsconnection",
      "description": "<p>The connection type for IssueTimelineItems.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[IssueTimelineItemsEdge]",
          "id": "issuetimelineitemsedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuetimelineitemsedge"
        },
        {
          "name": "filteredCount",
          "description": "<p>Identifies the count of items after applying <code>before</code> and <code>after</code> filters.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[IssueTimelineItems]",
          "id": "issuetimelineitems",
          "kind": "unions",
          "href": "/graphql/reference/unions#issuetimelineitems"
        },
        {
          "name": "pageCount",
          "description": "<p>Identifies the count of items after applying <code>before</code>/<code>after</code> filters and <code>first</code>/<code>last</code>/<code>skip</code> slicing.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the timeline was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "IssueTimelineItemsEdge",
      "kind": "objects",
      "id": "issuetimelineitemsedge",
      "href": "/graphql/reference/objects#issuetimelineitemsedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "IssueTimelineItems",
          "id": "issuetimelineitems",
          "kind": "unions",
          "href": "/graphql/reference/unions#issuetimelineitems"
        }
      ]
    },
    {
      "name": "JoinedGitHubContribution",
      "kind": "objects",
      "id": "joinedgithubcontribution",
      "href": "/graphql/reference/objects#joinedgithubcontribution",
      "description": "<p>Represents a user signing up for a GitHub account.</p>",
      "implements": [
        {
          "name": "Contribution",
          "id": "contribution",
          "href": "/graphql/reference/interfaces#contribution"
        }
      ],
      "fields": [
        {
          "name": "isRestricted",
          "description": "<p>Whether this contribution is associated with a record you do not have access to. For\nexample, your own 'first issue' contribution may have been made on a repository you can no\nlonger access.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "occurredAt",
          "description": "<p>When this contribution was made.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user who made this contribution.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "Label",
      "kind": "objects",
      "id": "label",
      "href": "/graphql/reference/objects#label",
      "description": "<p>A label for categorizing Issues or Milestones with a given Repository.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "color",
          "description": "<p>Identifies the label color.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the label was created.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "description",
          "description": "<p>A brief description of this label.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "isDefault",
          "description": "<p>Indicates whether or not this is a default label.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "issues",
          "description": "<p>A list of issues associated with this label.</p>",
          "type": "IssueConnection!",
          "id": "issueconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#issueconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "filterBy",
              "description": "<p>Filtering options for issues returned from the connection.</p>",
              "type": {
                "name": "IssueFilters",
                "id": "issuefilters",
                "href": "/graphql/reference/scalar#issuefilters"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "labels",
              "description": "<p>A list of label names to filter the pull requests by.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for issues returned from the connection.</p>",
              "type": {
                "name": "IssueOrder",
                "id": "issueorder",
                "href": "/graphql/reference/scalar#issueorder"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the issues by.</p>",
              "type": {
                "name": "[IssueState!]",
                "id": "issuestate",
                "href": "/graphql/reference/scalar#issuestate"
              }
            }
          ]
        },
        {
          "name": "name",
          "description": "<p>Identifies the label name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequests",
          "description": "<p>A list of pull requests associated with this label.</p>",
          "type": "PullRequestConnection!",
          "id": "pullrequestconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "baseRefName",
              "description": "<p>The base ref name to filter the pull requests by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "headRefName",
              "description": "<p>The head ref name to filter the pull requests by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "labels",
              "description": "<p>A list of label names to filter the pull requests by.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for pull requests returned from the connection.</p>",
              "type": {
                "name": "IssueOrder",
                "id": "issueorder",
                "href": "/graphql/reference/scalar#issueorder"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the pull requests by.</p>",
              "type": {
                "name": "[PullRequestState!]",
                "id": "pullrequeststate",
                "href": "/graphql/reference/scalar#pullrequeststate"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this label.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this label.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the label was last updated.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this label.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "LabelConnection",
      "kind": "objects",
      "id": "labelconnection",
      "href": "/graphql/reference/objects#labelconnection",
      "description": "<p>The connection type for Label.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[LabelEdge]",
          "id": "labeledge",
          "kind": "objects",
          "href": "/graphql/reference/objects#labeledge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Label]",
          "id": "label",
          "kind": "objects",
          "href": "/graphql/reference/objects#label"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "LabelEdge",
      "kind": "objects",
      "id": "labeledge",
      "href": "/graphql/reference/objects#labeledge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Label",
          "id": "label",
          "kind": "objects",
          "href": "/graphql/reference/objects#label"
        }
      ]
    },
    {
      "name": "LabeledEvent",
      "kind": "objects",
      "id": "labeledevent",
      "href": "/graphql/reference/objects#labeledevent",
      "description": "<p>Represents a<code>labeled</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "label",
          "description": "<p>Identifies the label associated with the<code>labeled</code>event.</p>",
          "type": "Label!",
          "id": "label",
          "kind": "objects",
          "href": "/graphql/reference/objects#label"
        },
        {
          "name": "labelable",
          "description": "<p>Identifies the <code>Labelable</code> associated with the event.</p>",
          "type": "Labelable!",
          "id": "labelable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#labelable"
        }
      ]
    },
    {
      "name": "Language",
      "kind": "objects",
      "id": "language",
      "href": "/graphql/reference/objects#language",
      "description": "<p>Represents a given language found in repositories.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "color",
          "description": "<p>The color defined for the current language.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The name of the current language.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "LanguageConnection",
      "kind": "objects",
      "id": "languageconnection",
      "href": "/graphql/reference/objects#languageconnection",
      "description": "<p>A list of languages associated with the parent.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[LanguageEdge]",
          "id": "languageedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#languageedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Language]",
          "id": "language",
          "kind": "objects",
          "href": "/graphql/reference/objects#language"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "totalSize",
          "description": "<p>The total size in bytes of files written in that language.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "LanguageEdge",
      "kind": "objects",
      "id": "languageedge",
      "href": "/graphql/reference/objects#languageedge",
      "description": "<p>Represents the language of a repository.</p>",
      "fields": [
        {
          "name": "size",
          "description": "<p>The number of bytes of code written in the language.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "License",
      "kind": "objects",
      "id": "license",
      "href": "/graphql/reference/objects#license",
      "description": "<p>A repository's open source license.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "body",
          "description": "<p>The full text of the license.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "conditions",
          "description": "<p>The conditions set by the license.</p>",
          "type": "[LicenseRule]!",
          "id": "licenserule",
          "kind": "objects",
          "href": "/graphql/reference/objects#licenserule"
        },
        {
          "name": "description",
          "description": "<p>A human-readable description of the license.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "featured",
          "description": "<p>Whether the license should be featured.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hidden",
          "description": "<p>Whether the license should be displayed in license pickers.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "implementation",
          "description": "<p>Instructions on how to implement the license.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "key",
          "description": "<p>The lowercased SPDX ID of the license.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "limitations",
          "description": "<p>The limitations set by the license.</p>",
          "type": "[LicenseRule]!",
          "id": "licenserule",
          "kind": "objects",
          "href": "/graphql/reference/objects#licenserule"
        },
        {
          "name": "name",
          "description": "<p>The license full name specified by <a href=\"https://spdx.org/licenses\">https://spdx.org/licenses</a>.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "nickname",
          "description": "<p>Customary short name if applicable (e.g, GPLv3).</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "permissions",
          "description": "<p>The permissions set by the license.</p>",
          "type": "[LicenseRule]!",
          "id": "licenserule",
          "kind": "objects",
          "href": "/graphql/reference/objects#licenserule"
        },
        {
          "name": "pseudoLicense",
          "description": "<p>Whether the license is a pseudo-license placeholder (e.g., other, no-license).</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "spdxId",
          "description": "<p>Short identifier specified by <a href=\"https://spdx.org/licenses\">https://spdx.org/licenses</a>.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "url",
          "description": "<p>URL to the license on <a href=\"https://choosealicense.com\">https://choosealicense.com</a>.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "LicenseRule",
      "kind": "objects",
      "id": "licenserule",
      "href": "/graphql/reference/objects#licenserule",
      "description": "<p>Describes a License's conditions, permissions, and limitations.</p>",
      "fields": [
        {
          "name": "description",
          "description": "<p>A description of the rule.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "key",
          "description": "<p>The machine-readable rule key.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "label",
          "description": "<p>The human-readable rule label.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "LockedEvent",
      "kind": "objects",
      "id": "lockedevent",
      "href": "/graphql/reference/objects#lockedevent",
      "description": "<p>Represents a<code>locked</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "lockReason",
          "description": "<p>Reason that the conversation was locked (optional).</p>",
          "type": "LockReason",
          "id": "lockreason",
          "kind": "enums",
          "href": "/graphql/reference/enums#lockreason"
        },
        {
          "name": "lockable",
          "description": "<p>Object that was locked.</p>",
          "type": "Lockable!",
          "id": "lockable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#lockable"
        }
      ]
    },
    {
      "name": "MentionedEvent",
      "kind": "objects",
      "id": "mentionedevent",
      "href": "/graphql/reference/objects#mentionedevent",
      "description": "<p>Represents a<code>mentioned</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "MergedEvent",
      "kind": "objects",
      "id": "mergedevent",
      "href": "/graphql/reference/objects#mergedevent",
      "description": "<p>Represents a<code>merged</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "commit",
          "description": "<p>Identifies the commit associated with the <code>merge</code> event.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "mergeRef",
          "description": "<p>Identifies the Ref associated with the <code>merge</code> event.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        },
        {
          "name": "mergeRefName",
          "description": "<p>Identifies the name of the Ref associated with the <code>merge</code> event.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this merged event.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this merged event.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "Milestone",
      "kind": "objects",
      "id": "milestone",
      "href": "/graphql/reference/objects#milestone",
      "description": "<p>Represents a Milestone object on a given repository.</p>",
      "implements": [
        {
          "name": "Closable",
          "id": "closable",
          "href": "/graphql/reference/interfaces#closable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "closed",
          "description": "<p><code>true</code> if the object is closed (definition of closed may depend on type).</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "closedAt",
          "description": "<p>Identifies the date and time when the object was closed.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "creator",
          "description": "<p>Identifies the actor who created the milestone.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "description",
          "description": "<p>Identifies the description of the milestone.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "dueOn",
          "description": "<p>Identifies the due date of the milestone.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "issues",
          "description": "<p>A list of issues associated with the milestone.</p>",
          "type": "IssueConnection!",
          "id": "issueconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#issueconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "filterBy",
              "description": "<p>Filtering options for issues returned from the connection.</p>",
              "type": {
                "name": "IssueFilters",
                "id": "issuefilters",
                "href": "/graphql/reference/scalar#issuefilters"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "labels",
              "description": "<p>A list of label names to filter the pull requests by.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for issues returned from the connection.</p>",
              "type": {
                "name": "IssueOrder",
                "id": "issueorder",
                "href": "/graphql/reference/scalar#issueorder"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the issues by.</p>",
              "type": {
                "name": "[IssueState!]",
                "id": "issuestate",
                "href": "/graphql/reference/scalar#issuestate"
              }
            }
          ]
        },
        {
          "name": "number",
          "description": "<p>Identifies the number of the milestone.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "pullRequests",
          "description": "<p>A list of pull requests associated with the milestone.</p>",
          "type": "PullRequestConnection!",
          "id": "pullrequestconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "baseRefName",
              "description": "<p>The base ref name to filter the pull requests by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "headRefName",
              "description": "<p>The head ref name to filter the pull requests by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "labels",
              "description": "<p>A list of label names to filter the pull requests by.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for pull requests returned from the connection.</p>",
              "type": {
                "name": "IssueOrder",
                "id": "issueorder",
                "href": "/graphql/reference/scalar#issueorder"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the pull requests by.</p>",
              "type": {
                "name": "[PullRequestState!]",
                "id": "pullrequeststate",
                "href": "/graphql/reference/scalar#pullrequeststate"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this milestone.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this milestone.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "state",
          "description": "<p>Identifies the state of the milestone.</p>",
          "type": "MilestoneState!",
          "id": "milestonestate",
          "kind": "enums",
          "href": "/graphql/reference/enums#milestonestate"
        },
        {
          "name": "title",
          "description": "<p>Identifies the title of the milestone.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this milestone.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "MilestoneConnection",
      "kind": "objects",
      "id": "milestoneconnection",
      "href": "/graphql/reference/objects#milestoneconnection",
      "description": "<p>The connection type for Milestone.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[MilestoneEdge]",
          "id": "milestoneedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#milestoneedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Milestone]",
          "id": "milestone",
          "kind": "objects",
          "href": "/graphql/reference/objects#milestone"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "MilestoneEdge",
      "kind": "objects",
      "id": "milestoneedge",
      "href": "/graphql/reference/objects#milestoneedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Milestone",
          "id": "milestone",
          "kind": "objects",
          "href": "/graphql/reference/objects#milestone"
        }
      ]
    },
    {
      "name": "MilestonedEvent",
      "kind": "objects",
      "id": "milestonedevent",
      "href": "/graphql/reference/objects#milestonedevent",
      "description": "<p>Represents a<code>milestoned</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "milestoneTitle",
          "description": "<p>Identifies the milestone title associated with the<code>milestoned</code>event.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "subject",
          "description": "<p>Object referenced by event.</p>",
          "type": "MilestoneItem!",
          "id": "milestoneitem",
          "kind": "unions",
          "href": "/graphql/reference/unions#milestoneitem"
        }
      ]
    },
    {
      "name": "MovedColumnsInProjectEvent",
      "kind": "objects",
      "id": "movedcolumnsinprojectevent",
      "href": "/graphql/reference/objects#movedcolumnsinprojectevent",
      "description": "<p>Represents a<code>moved_columns_in_project</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "previousProjectColumnName",
          "description": "<p>Column name the issue or pull request was moved from.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "isDeprecated": false,
          "preview": {
            "title": "Project event details preview",
            "description": "This preview adds project, project card, and project column details to project-related issue events.",
            "toggled_by": "starfox-preview",
            "toggled_on": [
              "AddedToProjectEvent.project",
              "AddedToProjectEvent.projectCard",
              "AddedToProjectEvent.projectColumnName",
              "ConvertedNoteToIssueEvent.project",
              "ConvertedNoteToIssueEvent.projectCard",
              "ConvertedNoteToIssueEvent.projectColumnName",
              "MovedColumnsInProjectEvent.project",
              "MovedColumnsInProjectEvent.projectCard",
              "MovedColumnsInProjectEvent.projectColumnName",
              "MovedColumnsInProjectEvent.previousProjectColumnName",
              "RemovedFromProjectEvent.project",
              "RemovedFromProjectEvent.projectColumnName"
            ],
            "owning_teams": [
              "@github/github-projects"
            ],
            "accept_header": "application/vnd.github.starfox-preview+json",
            "href": "/graphql/overview/schema-previews#project-event-details-preview"
          }
        },
        {
          "name": "project",
          "description": "<p>Project referenced by event.</p>",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "isDeprecated": false,
          "preview": {
            "title": "Project event details preview",
            "description": "This preview adds project, project card, and project column details to project-related issue events.",
            "toggled_by": "starfox-preview",
            "toggled_on": [
              "AddedToProjectEvent.project",
              "AddedToProjectEvent.projectCard",
              "AddedToProjectEvent.projectColumnName",
              "ConvertedNoteToIssueEvent.project",
              "ConvertedNoteToIssueEvent.projectCard",
              "ConvertedNoteToIssueEvent.projectColumnName",
              "MovedColumnsInProjectEvent.project",
              "MovedColumnsInProjectEvent.projectCard",
              "MovedColumnsInProjectEvent.projectColumnName",
              "MovedColumnsInProjectEvent.previousProjectColumnName",
              "RemovedFromProjectEvent.project",
              "RemovedFromProjectEvent.projectColumnName"
            ],
            "owning_teams": [
              "@github/github-projects"
            ],
            "accept_header": "application/vnd.github.starfox-preview+json",
            "href": "/graphql/overview/schema-previews#project-event-details-preview"
          }
        },
        {
          "name": "projectCard",
          "description": "<p>Project card referenced by this project event.</p>",
          "type": "ProjectCard",
          "id": "projectcard",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcard",
          "isDeprecated": false,
          "preview": {
            "title": "Project event details preview",
            "description": "This preview adds project, project card, and project column details to project-related issue events.",
            "toggled_by": "starfox-preview",
            "toggled_on": [
              "AddedToProjectEvent.project",
              "AddedToProjectEvent.projectCard",
              "AddedToProjectEvent.projectColumnName",
              "ConvertedNoteToIssueEvent.project",
              "ConvertedNoteToIssueEvent.projectCard",
              "ConvertedNoteToIssueEvent.projectColumnName",
              "MovedColumnsInProjectEvent.project",
              "MovedColumnsInProjectEvent.projectCard",
              "MovedColumnsInProjectEvent.projectColumnName",
              "MovedColumnsInProjectEvent.previousProjectColumnName",
              "RemovedFromProjectEvent.project",
              "RemovedFromProjectEvent.projectColumnName"
            ],
            "owning_teams": [
              "@github/github-projects"
            ],
            "accept_header": "application/vnd.github.starfox-preview+json",
            "href": "/graphql/overview/schema-previews#project-event-details-preview"
          }
        },
        {
          "name": "projectColumnName",
          "description": "<p>Column name the issue or pull request was moved to.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "isDeprecated": false,
          "preview": {
            "title": "Project event details preview",
            "description": "This preview adds project, project card, and project column details to project-related issue events.",
            "toggled_by": "starfox-preview",
            "toggled_on": [
              "AddedToProjectEvent.project",
              "AddedToProjectEvent.projectCard",
              "AddedToProjectEvent.projectColumnName",
              "ConvertedNoteToIssueEvent.project",
              "ConvertedNoteToIssueEvent.projectCard",
              "ConvertedNoteToIssueEvent.projectColumnName",
              "MovedColumnsInProjectEvent.project",
              "MovedColumnsInProjectEvent.projectCard",
              "MovedColumnsInProjectEvent.projectColumnName",
              "MovedColumnsInProjectEvent.previousProjectColumnName",
              "RemovedFromProjectEvent.project",
              "RemovedFromProjectEvent.projectColumnName"
            ],
            "owning_teams": [
              "@github/github-projects"
            ],
            "accept_header": "application/vnd.github.starfox-preview+json",
            "href": "/graphql/overview/schema-previews#project-event-details-preview"
          }
        }
      ]
    },
    {
      "name": "Organization",
      "kind": "objects",
      "id": "organization",
      "href": "/graphql/reference/objects#organization",
      "description": "<p>An account on GitHub, with one or more owners, that has repositories, members and teams.</p>",
      "implements": [
        {
          "name": "Actor",
          "id": "actor",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "MemberStatusable",
          "id": "memberstatusable",
          "href": "/graphql/reference/interfaces#memberstatusable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "ProfileOwner",
          "id": "profileowner",
          "href": "/graphql/reference/interfaces#profileowner"
        },
        {
          "name": "ProjectOwner",
          "id": "projectowner",
          "href": "/graphql/reference/interfaces#projectowner"
        },
        {
          "name": "RegistryPackageOwner",
          "id": "registrypackageowner",
          "href": "/graphql/reference/interfaces#registrypackageowner"
        },
        {
          "name": "RegistryPackageSearch",
          "id": "registrypackagesearch",
          "href": "/graphql/reference/interfaces#registrypackagesearch"
        },
        {
          "name": "RepositoryOwner",
          "id": "repositoryowner",
          "href": "/graphql/reference/interfaces#repositoryowner"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "anyPinnableItems",
          "description": "<p>Determine if this repository owner has any items that can be pinned to their profile.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean",
          "arguments": [
            {
              "name": "type",
              "description": "<p>Filter to only a particular kind of pinnable item.</p>",
              "type": {
                "name": "PinnableItemType",
                "id": "pinnableitemtype",
                "href": "/graphql/reference/scalar#pinnableitemtype"
              }
            }
          ]
        },
        {
          "name": "avatarUrl",
          "description": "<p>A URL pointing to the organization's public avatar.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri",
          "arguments": [
            {
              "name": "size",
              "description": "<p>The size of the resulting square image.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "description",
          "description": "<p>The organization's public profile description.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "email",
          "description": "<p>The organization's public email.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "itemShowcase",
          "description": "<p>Showcases a selection of repositories and gists that the profile owner has\neither curated or that have been selected automatically based on popularity.</p>",
          "type": "ProfileItemShowcase!",
          "id": "profileitemshowcase",
          "kind": "objects",
          "href": "/graphql/reference/objects#profileitemshowcase"
        },
        {
          "name": "location",
          "description": "<p>The organization's public profile location.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "login",
          "description": "<p>The organization's login name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "memberStatuses",
          "description": "<p>Get the status messages members of this entity have set that are either public or visible only to the organization.</p>",
          "type": "UserStatusConnection!",
          "id": "userstatusconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userstatusconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for user statuses returned from the connection.</p>",
              "type": {
                "name": "UserStatusOrder",
                "id": "userstatusorder",
                "href": "/graphql/reference/scalar#userstatusorder"
              }
            }
          ]
        },
        {
          "name": "members",
          "description": "<p>A list of users who are members of this organization.</p>",
          "type": "UserConnection!",
          "id": "userconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ],
          "isDeprecated": true,
          "deprecationReason": "<p>The <code>members</code> field is deprecated and will be removed soon. Use <code>Organization.membersWithRole</code> instead. Removal on 2019-04-01 UTC.</p>"
        },
        {
          "name": "membersWithRole",
          "description": "<p>A list of users who are members of this organization.</p>",
          "type": "OrganizationMemberConnection!",
          "id": "organizationmemberconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationmemberconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "name",
          "description": "<p>The organization's public profile name.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "newTeamResourcePath",
          "description": "<p>The HTTP path creating a new team.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "newTeamUrl",
          "description": "<p>The HTTP URL creating a new team.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organizationBillingEmail",
          "description": "<p>The billing email for the organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pendingMembers",
          "description": "<p>A list of users who have been invited to join this organization.</p>",
          "type": "UserConnection!",
          "id": "userconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "pinnableItems",
          "description": "<p>A list of repositories and gists this profile owner can pin to their profile.</p>",
          "type": "PinnableItemConnection!",
          "id": "pinnableitemconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinnableitemconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "types",
              "description": "<p>Filter the types of pinnable items that are returned.</p>",
              "type": {
                "name": "[PinnableItemType!]",
                "id": "pinnableitemtype",
                "href": "/graphql/reference/scalar#pinnableitemtype"
              }
            }
          ]
        },
        {
          "name": "pinnedItems",
          "description": "<p>A list of repositories and gists this profile owner has pinned to their profile.</p>",
          "type": "PinnableItemConnection!",
          "id": "pinnableitemconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinnableitemconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "types",
              "description": "<p>Filter the types of pinned items that are returned.</p>",
              "type": {
                "name": "[PinnableItemType!]",
                "id": "pinnableitemtype",
                "href": "/graphql/reference/scalar#pinnableitemtype"
              }
            }
          ]
        },
        {
          "name": "pinnedItemsRemaining",
          "description": "<p>Returns how many more items this profile owner can pin to their profile.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "pinnedRepositories",
          "description": "<p>A list of repositories this user has pinned to their profile.</p>",
          "type": "RepositoryConnection!",
          "id": "repositoryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryconnection",
          "arguments": [
            {
              "name": "affiliations",
              "description": "<p>Array of viewer's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\ncurrent viewer owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "href": "/graphql/reference/scalar#repositoryaffiliation"
              }
            },
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "isLocked",
              "description": "<p>If non-null, filters repositories according to whether they have been locked.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for repositories returned from the connection.</p>",
              "type": {
                "name": "RepositoryOrder",
                "id": "repositoryorder",
                "href": "/graphql/reference/scalar#repositoryorder"
              }
            },
            {
              "name": "ownerAffiliations",
              "description": "<p>Array of owner's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\norganization or user being viewed owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "href": "/graphql/reference/scalar#repositoryaffiliation"
              }
            },
            {
              "name": "privacy",
              "description": "<p>If non-null, filters repositories according to privacy.</p>",
              "type": {
                "name": "RepositoryPrivacy",
                "id": "repositoryprivacy",
                "href": "/graphql/reference/scalar#repositoryprivacy"
              }
            }
          ],
          "isDeprecated": true,
          "deprecationReason": "<p>pinnedRepositories will be removed Use ProfileOwner.pinnedItems instead. Removal on 2019-07-01 UTC.</p>"
        },
        {
          "name": "project",
          "description": "<p>Find project by number.</p>",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The project number to find.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "projects",
          "description": "<p>A list of projects under the owner.</p>",
          "type": "ProjectConnection!",
          "id": "projectconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for projects returned from the connection.</p>",
              "type": {
                "name": "ProjectOrder",
                "id": "projectorder",
                "href": "/graphql/reference/scalar#projectorder"
              }
            },
            {
              "name": "search",
              "description": "<p>Query to search projects by, currently only searching by name.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the projects by.</p>",
              "type": {
                "name": "[ProjectState!]",
                "id": "projectstate",
                "href": "/graphql/reference/scalar#projectstate"
              }
            }
          ]
        },
        {
          "name": "projectsResourcePath",
          "description": "<p>The HTTP path listing organization's projects.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "projectsUrl",
          "description": "<p>The HTTP URL listing organization's projects.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositories",
          "description": "<p>A list of repositories that the user owns.</p>",
          "type": "RepositoryConnection!",
          "id": "repositoryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryconnection",
          "arguments": [
            {
              "name": "affiliations",
              "description": "<p>Array of viewer's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\ncurrent viewer owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "href": "/graphql/reference/scalar#repositoryaffiliation"
              }
            },
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "isFork",
              "description": "<p>If non-null, filters repositories according to whether they are forks of another repository.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "isLocked",
              "description": "<p>If non-null, filters repositories according to whether they have been locked.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for repositories returned from the connection.</p>",
              "type": {
                "name": "RepositoryOrder",
                "id": "repositoryorder",
                "href": "/graphql/reference/scalar#repositoryorder"
              }
            },
            {
              "name": "ownerAffiliations",
              "description": "<p>Array of owner's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\norganization or user being viewed owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "href": "/graphql/reference/scalar#repositoryaffiliation"
              }
            },
            {
              "name": "privacy",
              "description": "<p>If non-null, filters repositories according to privacy.</p>",
              "type": {
                "name": "RepositoryPrivacy",
                "id": "repositoryprivacy",
                "href": "/graphql/reference/scalar#repositoryprivacy"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>Find Repository.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository",
          "arguments": [
            {
              "name": "name",
              "description": "<p>Name of Repository to find.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            }
          ]
        },
        {
          "name": "requiresTwoFactorAuthentication",
          "description": "<p>When true the organization requires all members, billing managers, and outside\ncollaborators to enable two-factor authentication.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this organization.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "samlIdentityProvider",
          "description": "<p>The Organization's SAML identity providers.</p>",
          "type": "OrganizationIdentityProvider",
          "id": "organizationidentityprovider",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationidentityprovider"
        },
        {
          "name": "team",
          "description": "<p>Find an organization's team by its slug.</p>",
          "type": "Team",
          "id": "team",
          "kind": "objects",
          "href": "/graphql/reference/objects#team",
          "arguments": [
            {
              "name": "slug",
              "description": "<p>The name or slug of the team to find.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            }
          ]
        },
        {
          "name": "teams",
          "description": "<p>A list of teams in this organization.</p>",
          "type": "TeamConnection!",
          "id": "teamconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "ldapMapped",
              "description": "<p>If true, filters teams that are mapped to an LDAP Group (Enterprise only).</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for teams returned from the connection.</p>",
              "type": {
                "name": "TeamOrder",
                "id": "teamorder",
                "href": "/graphql/reference/scalar#teamorder"
              }
            },
            {
              "name": "privacy",
              "description": "<p>If non-null, filters teams according to privacy.</p>",
              "type": {
                "name": "TeamPrivacy",
                "id": "teamprivacy",
                "href": "/graphql/reference/scalar#teamprivacy"
              }
            },
            {
              "name": "query",
              "description": "<p>If non-null, filters teams with query on team name and team slug.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "role",
              "description": "<p>If non-null, filters teams according to whether the viewer is an admin or member on team.</p>",
              "type": {
                "name": "TeamRole",
                "id": "teamrole",
                "href": "/graphql/reference/scalar#teamrole"
              }
            },
            {
              "name": "rootTeamsOnly",
              "defaultValue": false,
              "description": "<p>If true, restrict to only root teams.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "userLogins",
              "description": "<p>User logins to filter by.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            }
          ]
        },
        {
          "name": "teamsResourcePath",
          "description": "<p>The HTTP path listing organization's teams.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "teamsUrl",
          "description": "<p>The HTTP URL listing organization's teams.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this organization.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "viewerCanAdminister",
          "description": "<p>Organization is adminable by the viewer.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanChangePinnedItems",
          "description": "<p>Can the viewer pin repositories and gists to the profile?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanCreateProjects",
          "description": "<p>Can the current viewer create new projects on this owner.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanCreateRepositories",
          "description": "<p>Viewer can create repositories on this organization.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanCreateTeams",
          "description": "<p>Viewer can create teams on this organization.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerIsAMember",
          "description": "<p>Viewer is an active member of this organization.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "websiteUrl",
          "description": "<p>The organization's public profile URL.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrganizationConnection",
      "kind": "objects",
      "id": "organizationconnection",
      "href": "/graphql/reference/objects#organizationconnection",
      "description": "<p>The connection type for Organization.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[OrganizationEdge]",
          "id": "organizationedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Organization]",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "OrganizationEdge",
      "kind": "objects",
      "id": "organizationedge",
      "href": "/graphql/reference/objects#organizationedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        }
      ]
    },
    {
      "name": "OrganizationIdentityProvider",
      "kind": "objects",
      "id": "organizationidentityprovider",
      "href": "/graphql/reference/objects#organizationidentityprovider",
      "description": "<p>An Identity Provider configured to provision SAML and SCIM identities for Organizations.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "digestMethod",
          "description": "<p>The digest algorithm used to sign SAML requests for the Identity Provider.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "externalIdentities",
          "description": "<p>External Identities provisioned by this Identity Provider.</p>",
          "type": "ExternalIdentityConnection!",
          "id": "externalidentityconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#externalidentityconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "idpCertificate",
          "description": "<p>The x509 certificate used by the Identity Provder to sign assertions and responses.</p>",
          "type": "X509Certificate",
          "id": "x509certificate",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#x509certificate"
        },
        {
          "name": "issuer",
          "description": "<p>The Issuer Entity ID for the SAML Identity Provider.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organization",
          "description": "<p>Organization this Identity Provider belongs to.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "signatureMethod",
          "description": "<p>The signature algorithm used to sign SAML requests for the Identity Provider.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "ssoUrl",
          "description": "<p>The URL endpoint for the Identity Provider's SAML SSO.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "OrganizationInvitation",
      "kind": "objects",
      "id": "organizationinvitation",
      "href": "/graphql/reference/objects#organizationinvitation",
      "description": "<p>An Invitation for a user to an organization.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "email",
          "description": "<p>The email address of the user invited to the organization.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "invitationType",
          "description": "<p>The type of invitation that was sent (e.g. email, user).</p>",
          "type": "OrganizationInvitationType!",
          "id": "organizationinvitationtype",
          "kind": "enums",
          "href": "/graphql/reference/enums#organizationinvitationtype"
        },
        {
          "name": "invitee",
          "description": "<p>The user who was invited to the organization.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "inviter",
          "description": "<p>The user who created the invitation.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "organization",
          "description": "<p>The organization the invite is for.</p>",
          "type": "Organization!",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "role",
          "description": "<p>The user's pending role in the organization (e.g. member, owner).</p>",
          "type": "OrganizationInvitationRole!",
          "id": "organizationinvitationrole",
          "kind": "enums",
          "href": "/graphql/reference/enums#organizationinvitationrole"
        }
      ]
    },
    {
      "name": "OrganizationInvitationConnection",
      "kind": "objects",
      "id": "organizationinvitationconnection",
      "href": "/graphql/reference/objects#organizationinvitationconnection",
      "description": "<p>The connection type for OrganizationInvitation.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[OrganizationInvitationEdge]",
          "id": "organizationinvitationedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationinvitationedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[OrganizationInvitation]",
          "id": "organizationinvitation",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationinvitation"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "OrganizationInvitationEdge",
      "kind": "objects",
      "id": "organizationinvitationedge",
      "href": "/graphql/reference/objects#organizationinvitationedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "OrganizationInvitation",
          "id": "organizationinvitation",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationinvitation"
        }
      ]
    },
    {
      "name": "OrganizationMemberConnection",
      "kind": "objects",
      "id": "organizationmemberconnection",
      "href": "/graphql/reference/objects#organizationmemberconnection",
      "description": "<p>The connection type for User.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[OrganizationMemberEdge]",
          "id": "organizationmemberedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationmemberedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[User]",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "OrganizationMemberEdge",
      "kind": "objects",
      "id": "organizationmemberedge",
      "href": "/graphql/reference/objects#organizationmemberedge",
      "description": "<p>Represents a user within an organization.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "hasTwoFactorEnabled",
          "description": "<p>Whether the organization member has two factor enabled or not. Returns null if information is not available to viewer.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "role",
          "description": "<p>The role this user has in the organization.</p>",
          "type": "OrganizationMemberRole",
          "id": "organizationmemberrole",
          "kind": "enums",
          "href": "/graphql/reference/enums#organizationmemberrole"
        }
      ]
    },
    {
      "name": "OrganizationTeamsHovercardContext",
      "kind": "objects",
      "id": "organizationteamshovercardcontext",
      "href": "/graphql/reference/objects#organizationteamshovercardcontext",
      "description": "<p>An organization teams hovercard context.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Hovercards preview",
        "description": "This preview adds support for reading hovercard contextual data",
        "toggled_by": "hagar-preview",
        "toggled_on": [
          "Issue.hovercard",
          "PullRequest.hovercard",
          "User.hovercard",
          "HovercardContext",
          "GenericHovercardContext",
          "Hovercard",
          "OrganizationTeamsHovercardContext",
          "OrganizationsHovercardContext",
          "ReviewStatusHovercardContext",
          "ViewerHovercardContext"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.hagar-preview+json",
        "href": "/graphql/overview/schema-previews#hovercards-preview"
      },
      "implements": [
        {
          "name": "HovercardContext",
          "id": "hovercardcontext",
          "href": "/graphql/reference/interfaces#hovercardcontext"
        }
      ],
      "fields": [
        {
          "name": "message",
          "description": "<p>A string describing this context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "octicon",
          "description": "<p>An octicon to accompany this context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "relevantTeams",
          "description": "<p>Teams in this organization the user is a member of that are relevant.</p>",
          "type": "TeamConnection!",
          "id": "teamconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "teamsResourcePath",
          "description": "<p>The path for the full team list for this user.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "teamsUrl",
          "description": "<p>The URL for the full team list for this user.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "totalTeamCount",
          "description": "<p>The total number of teams the user is on in the organization.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "OrganizationsHovercardContext",
      "kind": "objects",
      "id": "organizationshovercardcontext",
      "href": "/graphql/reference/objects#organizationshovercardcontext",
      "description": "<p>An organization list hovercard context.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Hovercards preview",
        "description": "This preview adds support for reading hovercard contextual data",
        "toggled_by": "hagar-preview",
        "toggled_on": [
          "Issue.hovercard",
          "PullRequest.hovercard",
          "User.hovercard",
          "HovercardContext",
          "GenericHovercardContext",
          "Hovercard",
          "OrganizationTeamsHovercardContext",
          "OrganizationsHovercardContext",
          "ReviewStatusHovercardContext",
          "ViewerHovercardContext"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.hagar-preview+json",
        "href": "/graphql/overview/schema-previews#hovercards-preview"
      },
      "implements": [
        {
          "name": "HovercardContext",
          "id": "hovercardcontext",
          "href": "/graphql/reference/interfaces#hovercardcontext"
        }
      ],
      "fields": [
        {
          "name": "message",
          "description": "<p>A string describing this context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "octicon",
          "description": "<p>An octicon to accompany this context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "relevantOrganizations",
          "description": "<p>Organizations this user is a member of that are relevant.</p>",
          "type": "OrganizationConnection!",
          "id": "organizationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "totalOrganizationCount",
          "description": "<p>The total number of organizations this user is in.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PageInfo",
      "kind": "objects",
      "id": "pageinfo",
      "href": "/graphql/reference/objects#pageinfo",
      "description": "<p>Information about pagination in a connection.</p>",
      "fields": [
        {
          "name": "endCursor",
          "description": "<p>When paginating forwards, the cursor to continue.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "hasNextPage",
          "description": "<p>When paginating forwards, are there more items?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hasPreviousPage",
          "description": "<p>When paginating backwards, are there more items?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "startCursor",
          "description": "<p>When paginating backwards, the cursor to continue.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "PermissionSource",
      "kind": "objects",
      "id": "permissionsource",
      "href": "/graphql/reference/objects#permissionsource",
      "description": "<p>A level of permission and source for a user's access to a repository.</p>",
      "fields": [
        {
          "name": "organization",
          "description": "<p>The organization the repository belongs to.</p>",
          "type": "Organization!",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "permission",
          "description": "<p>The level of access this source has granted to the user.</p>",
          "type": "DefaultRepositoryPermissionField!",
          "id": "defaultrepositorypermissionfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#defaultrepositorypermissionfield"
        },
        {
          "name": "source",
          "description": "<p>The source of this permission.</p>",
          "type": "PermissionGranter!",
          "id": "permissiongranter",
          "kind": "unions",
          "href": "/graphql/reference/unions#permissiongranter"
        }
      ]
    },
    {
      "name": "PinnableItemConnection",
      "kind": "objects",
      "id": "pinnableitemconnection",
      "href": "/graphql/reference/objects#pinnableitemconnection",
      "description": "<p>The connection type for PinnableItem.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PinnableItemEdge]",
          "id": "pinnableitemedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinnableitemedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PinnableItem]",
          "id": "pinnableitem",
          "kind": "unions",
          "href": "/graphql/reference/unions#pinnableitem"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PinnableItemEdge",
      "kind": "objects",
      "id": "pinnableitemedge",
      "href": "/graphql/reference/objects#pinnableitemedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PinnableItem",
          "id": "pinnableitem",
          "kind": "unions",
          "href": "/graphql/reference/unions#pinnableitem"
        }
      ]
    },
    {
      "name": "PinnedEvent",
      "kind": "objects",
      "id": "pinnedevent",
      "href": "/graphql/reference/objects#pinnedevent",
      "description": "<p>Represents a<code>pinned</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "issue",
          "description": "<p>Identifies the issue associated with the event.</p>",
          "type": "Issue!",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue"
        }
      ]
    },
    {
      "name": "PinnedIssue",
      "kind": "objects",
      "id": "pinnedissue",
      "href": "/graphql/reference/objects#pinnedissue",
      "description": "<p>A Pinned Issue is a issue pinned to a repository's index page.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Pinned issues preview",
        "description": "This preview adds support for pinned issues.",
        "toggled_by": "elektra-preview",
        "toggled_on": [
          "Repository.pinnedIssues",
          "PinnedIssue",
          "PinnedIssueEdge",
          "PinnedIssueConnection",
          "Mutation.pinIssue",
          "Mutation.unpinIssue"
        ],
        "owning_teams": [
          "@github/pe-pull-requests"
        ],
        "accept_header": "application/vnd.github.elektra-preview+json",
        "href": "/graphql/overview/schema-previews#pinned-issues-preview"
      },
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "issue",
          "description": "<p>The issue that was pinned.</p>",
          "type": "Issue!",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue"
        },
        {
          "name": "pinnedBy",
          "description": "<p>The actor that pinned this issue.</p>",
          "type": "Actor!",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "repository",
          "description": "<p>The repository that this issue was pinned to.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "PinnedIssueConnection",
      "kind": "objects",
      "id": "pinnedissueconnection",
      "href": "/graphql/reference/objects#pinnedissueconnection",
      "description": "<p>The connection type for PinnedIssue.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Pinned issues preview",
        "description": "This preview adds support for pinned issues.",
        "toggled_by": "elektra-preview",
        "toggled_on": [
          "Repository.pinnedIssues",
          "PinnedIssue",
          "PinnedIssueEdge",
          "PinnedIssueConnection",
          "Mutation.pinIssue",
          "Mutation.unpinIssue"
        ],
        "owning_teams": [
          "@github/pe-pull-requests"
        ],
        "accept_header": "application/vnd.github.elektra-preview+json",
        "href": "/graphql/overview/schema-previews#pinned-issues-preview"
      },
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PinnedIssueEdge]",
          "id": "pinnedissueedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinnedissueedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PinnedIssue]",
          "id": "pinnedissue",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinnedissue"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PinnedIssueEdge",
      "kind": "objects",
      "id": "pinnedissueedge",
      "href": "/graphql/reference/objects#pinnedissueedge",
      "description": "<p>An edge in a connection.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Pinned issues preview",
        "description": "This preview adds support for pinned issues.",
        "toggled_by": "elektra-preview",
        "toggled_on": [
          "Repository.pinnedIssues",
          "PinnedIssue",
          "PinnedIssueEdge",
          "PinnedIssueConnection",
          "Mutation.pinIssue",
          "Mutation.unpinIssue"
        ],
        "owning_teams": [
          "@github/pe-pull-requests"
        ],
        "accept_header": "application/vnd.github.elektra-preview+json",
        "href": "/graphql/overview/schema-previews#pinned-issues-preview"
      },
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PinnedIssue",
          "id": "pinnedissue",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinnedissue"
        }
      ]
    },
    {
      "name": "ProfileItemShowcase",
      "kind": "objects",
      "id": "profileitemshowcase",
      "href": "/graphql/reference/objects#profileitemshowcase",
      "description": "<p>A curatable list of repositories relating to a repository owner, which defaults\nto showing the most popular repositories they own.</p>",
      "fields": [
        {
          "name": "hasPinnedItems",
          "description": "<p>Whether or not the owner has pinned any repositories or gists.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "items",
          "description": "<p>The repositories and gists in the showcase. If the profile owner has any\npinned items, those will be returned. Otherwise, the profile owner's popular\nrepositories will be returned.</p>",
          "type": "PinnableItemConnection!",
          "id": "pinnableitemconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinnableitemconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Project",
      "kind": "objects",
      "id": "project",
      "href": "/graphql/reference/objects#project",
      "description": "<p>Projects manage issues, pull requests and notes within a project owner.</p>",
      "implements": [
        {
          "name": "Closable",
          "id": "closable",
          "href": "/graphql/reference/interfaces#closable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Updatable",
          "id": "updatable",
          "href": "/graphql/reference/interfaces#updatable"
        }
      ],
      "fields": [
        {
          "name": "body",
          "description": "<p>The project's description body.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>The projects description body rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "closed",
          "description": "<p><code>true</code> if the object is closed (definition of closed may depend on type).</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "closedAt",
          "description": "<p>Identifies the date and time when the object was closed.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "columns",
          "description": "<p>List of columns in the project.</p>",
          "type": "ProjectColumnConnection!",
          "id": "projectcolumnconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcolumnconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "creator",
          "description": "<p>The actor who originally created the project.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "name",
          "description": "<p>The project's name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "number",
          "description": "<p>The project's number.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "owner",
          "description": "<p>The project's owner. Currently limited to repositories, organizations, and users.</p>",
          "type": "ProjectOwner!",
          "id": "projectowner",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#projectowner"
        },
        {
          "name": "pendingCards",
          "description": "<p>List of pending cards in this project.</p>",
          "type": "ProjectCardConnection!",
          "id": "projectcardconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcardconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "archivedStates",
              "description": "<p>A list of archived states to filter the cards by.</p>",
              "type": {
                "name": "[ProjectCardArchivedState]",
                "id": "projectcardarchivedstate",
                "href": "/graphql/reference/scalar#projectcardarchivedstate"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this project.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "state",
          "description": "<p>Whether the project is open or closed.</p>",
          "type": "ProjectState!",
          "id": "projectstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#projectstate"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this project.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "viewerCanUpdate",
          "description": "<p>Check if the current viewer can update this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "ProjectCard",
      "kind": "objects",
      "id": "projectcard",
      "href": "/graphql/reference/objects#projectcard",
      "description": "<p>A card in a project.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "column",
          "description": "<p>The project column this card is associated under. A card may only belong to one\nproject column at a time. The column field will be null if the card is created\nin a pending state and has yet to be associated with a column. Once cards are\nassociated with a column, they will not become pending in the future.</p>",
          "type": "ProjectColumn",
          "id": "projectcolumn",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcolumn"
        },
        {
          "name": "content",
          "description": "<p>The card content item.</p>",
          "type": "ProjectCardItem",
          "id": "projectcarditem",
          "kind": "unions",
          "href": "/graphql/reference/unions#projectcarditem"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "creator",
          "description": "<p>The actor who created this card.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "isArchived",
          "description": "<p>Whether the card is archived.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "note",
          "description": "<p>The card note.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "project",
          "description": "<p>The project that contains this card.</p>",
          "type": "Project!",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this card.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "state",
          "description": "<p>The state of ProjectCard.</p>",
          "type": "ProjectCardState",
          "id": "projectcardstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#projectcardstate"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this card.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "ProjectCardConnection",
      "kind": "objects",
      "id": "projectcardconnection",
      "href": "/graphql/reference/objects#projectcardconnection",
      "description": "<p>The connection type for ProjectCard.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ProjectCardEdge]",
          "id": "projectcardedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcardedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[ProjectCard]",
          "id": "projectcard",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcard"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ProjectCardEdge",
      "kind": "objects",
      "id": "projectcardedge",
      "href": "/graphql/reference/objects#projectcardedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "ProjectCard",
          "id": "projectcard",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcard"
        }
      ]
    },
    {
      "name": "ProjectColumn",
      "kind": "objects",
      "id": "projectcolumn",
      "href": "/graphql/reference/objects#projectcolumn",
      "description": "<p>A column inside a project.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "cards",
          "description": "<p>List of cards in the column.</p>",
          "type": "ProjectCardConnection!",
          "id": "projectcardconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcardconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "archivedStates",
              "description": "<p>A list of archived states to filter the cards by.</p>",
              "type": {
                "name": "[ProjectCardArchivedState]",
                "id": "projectcardarchivedstate",
                "href": "/graphql/reference/scalar#projectcardarchivedstate"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "name",
          "description": "<p>The project column's name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "project",
          "description": "<p>The project that contains this column.</p>",
          "type": "Project!",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project"
        },
        {
          "name": "purpose",
          "description": "<p>The semantic purpose of the column.</p>",
          "type": "ProjectColumnPurpose",
          "id": "projectcolumnpurpose",
          "kind": "enums",
          "href": "/graphql/reference/enums#projectcolumnpurpose"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this project column.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this project column.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "ProjectColumnConnection",
      "kind": "objects",
      "id": "projectcolumnconnection",
      "href": "/graphql/reference/objects#projectcolumnconnection",
      "description": "<p>The connection type for ProjectColumn.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ProjectColumnEdge]",
          "id": "projectcolumnedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcolumnedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[ProjectColumn]",
          "id": "projectcolumn",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcolumn"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ProjectColumnEdge",
      "kind": "objects",
      "id": "projectcolumnedge",
      "href": "/graphql/reference/objects#projectcolumnedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "ProjectColumn",
          "id": "projectcolumn",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcolumn"
        }
      ]
    },
    {
      "name": "ProjectConnection",
      "kind": "objects",
      "id": "projectconnection",
      "href": "/graphql/reference/objects#projectconnection",
      "description": "<p>A list of projects associated with the owner.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ProjectEdge]",
          "id": "projectedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Project]",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ProjectEdge",
      "kind": "objects",
      "id": "projectedge",
      "href": "/graphql/reference/objects#projectedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project"
        }
      ]
    },
    {
      "name": "PublicKey",
      "kind": "objects",
      "id": "publickey",
      "href": "/graphql/reference/objects#publickey",
      "description": "<p>A user's public key.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "accessedAt",
          "description": "<p>The last time this authorization was used to perform an action.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "fingerprint",
          "description": "<p>The fingerprint for this PublicKey.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "isReadOnly",
          "description": "<p>Whether this PublicKey is read-only or not.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "key",
          "description": "<p>The public key string.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "PublicKeyConnection",
      "kind": "objects",
      "id": "publickeyconnection",
      "href": "/graphql/reference/objects#publickeyconnection",
      "description": "<p>The connection type for PublicKey.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PublicKeyEdge]",
          "id": "publickeyedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#publickeyedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PublicKey]",
          "id": "publickey",
          "kind": "objects",
          "href": "/graphql/reference/objects#publickey"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PublicKeyEdge",
      "kind": "objects",
      "id": "publickeyedge",
      "href": "/graphql/reference/objects#publickeyedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PublicKey",
          "id": "publickey",
          "kind": "objects",
          "href": "/graphql/reference/objects#publickey"
        }
      ]
    },
    {
      "name": "PullRequest",
      "kind": "objects",
      "id": "pullrequest",
      "href": "/graphql/reference/objects#pullrequest",
      "description": "<p>A repository pull request.</p>",
      "implements": [
        {
          "name": "Assignable",
          "id": "assignable",
          "href": "/graphql/reference/interfaces#assignable"
        },
        {
          "name": "Closable",
          "id": "closable",
          "href": "/graphql/reference/interfaces#closable"
        },
        {
          "name": "Comment",
          "id": "comment",
          "href": "/graphql/reference/interfaces#comment"
        },
        {
          "name": "Labelable",
          "id": "labelable",
          "href": "/graphql/reference/interfaces#labelable"
        },
        {
          "name": "Lockable",
          "id": "lockable",
          "href": "/graphql/reference/interfaces#lockable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Reactable",
          "id": "reactable",
          "href": "/graphql/reference/interfaces#reactable"
        },
        {
          "name": "RepositoryNode",
          "id": "repositorynode",
          "href": "/graphql/reference/interfaces#repositorynode"
        },
        {
          "name": "Subscribable",
          "id": "subscribable",
          "href": "/graphql/reference/interfaces#subscribable"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        },
        {
          "name": "Updatable",
          "id": "updatable",
          "href": "/graphql/reference/interfaces#updatable"
        },
        {
          "name": "UpdatableComment",
          "id": "updatablecomment",
          "href": "/graphql/reference/interfaces#updatablecomment"
        }
      ],
      "fields": [
        {
          "name": "activeLockReason",
          "description": "<p>Reason that the conversation was locked.</p>",
          "type": "LockReason",
          "id": "lockreason",
          "kind": "enums",
          "href": "/graphql/reference/enums#lockreason"
        },
        {
          "name": "additions",
          "description": "<p>The number of additions in this pull request.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "assignees",
          "description": "<p>A list of Users assigned to this object.</p>",
          "type": "UserConnection!",
          "id": "userconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "author",
          "description": "<p>The actor who authored the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "authorAssociation",
          "description": "<p>Author's association with the subject of the comment.</p>",
          "type": "CommentAuthorAssociation!",
          "id": "commentauthorassociation",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentauthorassociation"
        },
        {
          "name": "baseRef",
          "description": "<p>Identifies the base Ref associated with the pull request.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        },
        {
          "name": "baseRefName",
          "description": "<p>Identifies the name of the base Ref associated with the pull request, even if the ref has been deleted.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "baseRefOid",
          "description": "<p>Identifies the oid of the base ref associated with the pull request, even if the ref has been deleted.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "baseRepository",
          "description": "<p>The repository associated with this pull request's base Ref.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "body",
          "description": "<p>The body as Markdown.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>The body rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "bodyText",
          "description": "<p>The body rendered to text.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "canBeRebased",
          "description": "<p>Whether or not the pull request is rebaseable.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean",
          "isDeprecated": false,
          "preview": {
            "title": "Merge info preview",
            "description": "This preview adds support for accessing fields that provide more detailed information about a pull request's merge state.",
            "toggled_by": "merge-info-preview",
            "toggled_on": [
              "PullRequest.canBeRebased",
              "PullRequest.mergeStateStatus"
            ],
            "owning_teams": [
              "@github/pe-pull-requests"
            ],
            "accept_header": "application/vnd.github.merge-info-preview+json",
            "href": "/graphql/overview/schema-previews#merge-info-preview"
          }
        },
        {
          "name": "changedFiles",
          "description": "<p>The number of changed files in this pull request.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "closed",
          "description": "<p><code>true</code> if the pull request is closed.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "closedAt",
          "description": "<p>Identifies the date and time when the object was closed.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "comments",
          "description": "<p>A list of comments associated with the pull request.</p>",
          "type": "IssueCommentConnection!",
          "id": "issuecommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuecommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "commits",
          "description": "<p>A list of commits present in this pull request's head branch not present in the base branch.</p>",
          "type": "PullRequestCommitConnection!",
          "id": "pullrequestcommitconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestcommitconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdViaEmail",
          "description": "<p>Check if this comment was created via an email reply.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "deletions",
          "description": "<p>The number of deletions in this pull request.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "editor",
          "description": "<p>The actor who edited this pull request's body.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "files",
          "description": "<p>Lists the files changed within this pull request.</p>",
          "type": "PullRequestChangedFileConnection",
          "id": "pullrequestchangedfileconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestchangedfileconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "headRef",
          "description": "<p>Identifies the head Ref associated with the pull request.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        },
        {
          "name": "headRefName",
          "description": "<p>Identifies the name of the head Ref associated with the pull request, even if the ref has been deleted.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "headRefOid",
          "description": "<p>Identifies the oid of the head ref associated with the pull request, even if the ref has been deleted.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "headRepository",
          "description": "<p>The repository associated with this pull request's head Ref.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "headRepositoryOwner",
          "description": "<p>The owner of the repository associated with this pull request's head Ref.</p>",
          "type": "RepositoryOwner",
          "id": "repositoryowner",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#repositoryowner"
        },
        {
          "name": "hovercard",
          "description": "<p>The hovercard information for this issue.</p>",
          "type": "Hovercard!",
          "id": "hovercard",
          "kind": "objects",
          "href": "/graphql/reference/objects#hovercard",
          "arguments": [
            {
              "name": "includeNotificationContexts",
              "defaultValue": true,
              "description": "<p>Whether or not to include notification contexts.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            }
          ],
          "isDeprecated": false,
          "preview": {
            "title": "Hovercards preview",
            "description": "This preview adds support for reading hovercard contextual data",
            "toggled_by": "hagar-preview",
            "toggled_on": [
              "Issue.hovercard",
              "PullRequest.hovercard",
              "User.hovercard",
              "HovercardContext",
              "GenericHovercardContext",
              "Hovercard",
              "OrganizationTeamsHovercardContext",
              "OrganizationsHovercardContext",
              "ReviewStatusHovercardContext",
              "ViewerHovercardContext"
            ],
            "owning_teams": [
              "@github/identity"
            ],
            "accept_header": "application/vnd.github.hagar-preview+json",
            "href": "/graphql/overview/schema-previews#hovercards-preview"
          }
        },
        {
          "name": "includesCreatedEdit",
          "description": "<p>Check if this comment was edited and includes an edit with the creation data.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isCrossRepository",
          "description": "<p>The head and base repositories are different.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isDraft",
          "description": "<p>Identifies if the pull request is a draft.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean",
          "isDeprecated": false,
          "preview": {
            "title": "Draft pull requests preview",
            "description": "This preview adds support for draft pull requests.",
            "toggled_by": "shadow-cat-preview",
            "toggled_on": [
              "Mutation.markPullRequestReadyForReview",
              "CreatePullRequestInput.draft",
              "PullRequest.isDraft"
            ],
            "owning_teams": [
              "@github/pe-pull-requests"
            ],
            "accept_header": "application/vnd.github.shadow-cat-preview+json",
            "href": "/graphql/overview/schema-previews#draft-pull-requests-preview"
          }
        },
        {
          "name": "labels",
          "description": "<p>A list of labels associated with the object.</p>",
          "type": "LabelConnection",
          "id": "labelconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#labelconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "lastEditedAt",
          "description": "<p>The moment the editor made the last edit.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "locked",
          "description": "<p><code>true</code> if the pull request is locked.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "maintainerCanModify",
          "description": "<p>Indicates whether maintainers can modify the pull request.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "mergeCommit",
          "description": "<p>The commit that was created when this pull request was merged.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "mergeStateStatus",
          "description": "<p>Detailed information about the current pull request merge state status.</p>",
          "type": "MergeStateStatus!",
          "id": "mergestatestatus",
          "kind": "enums",
          "href": "/graphql/reference/enums#mergestatestatus",
          "isDeprecated": false,
          "preview": {
            "title": "Merge info preview",
            "description": "This preview adds support for accessing fields that provide more detailed information about a pull request's merge state.",
            "toggled_by": "merge-info-preview",
            "toggled_on": [
              "PullRequest.canBeRebased",
              "PullRequest.mergeStateStatus"
            ],
            "owning_teams": [
              "@github/pe-pull-requests"
            ],
            "accept_header": "application/vnd.github.merge-info-preview+json",
            "href": "/graphql/overview/schema-previews#merge-info-preview"
          }
        },
        {
          "name": "mergeable",
          "description": "<p>Whether or not the pull request can be merged based on the existence of merge conflicts.</p>",
          "type": "MergeableState!",
          "id": "mergeablestate",
          "kind": "enums",
          "href": "/graphql/reference/enums#mergeablestate"
        },
        {
          "name": "merged",
          "description": "<p>Whether or not the pull request was merged.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "mergedAt",
          "description": "<p>The date and time that the pull request was merged.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "mergedBy",
          "description": "<p>The actor who merged the pull request.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "milestone",
          "description": "<p>Identifies the milestone associated with the pull request.</p>",
          "type": "Milestone",
          "id": "milestone",
          "kind": "objects",
          "href": "/graphql/reference/objects#milestone"
        },
        {
          "name": "number",
          "description": "<p>Identifies the pull request number.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "participants",
          "description": "<p>A list of Users that are participating in the Pull Request conversation.</p>",
          "type": "UserConnection!",
          "id": "userconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "permalink",
          "description": "<p>The permalink to the pull request.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "potentialMergeCommit",
          "description": "<p>The commit that GitHub automatically generated to test if this pull request\ncould be merged. This field will not return a value if the pull request is\nmerged, or if the test merge commit is still being generated. See the\n<code>mergeable</code> field for more details on the mergeability of the pull request.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "projectCards",
          "description": "<p>List of project cards associated with this pull request.</p>",
          "type": "ProjectCardConnection!",
          "id": "projectcardconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectcardconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "archivedStates",
              "description": "<p>A list of archived states to filter the cards by.</p>",
              "type": {
                "name": "[ProjectCardArchivedState]",
                "id": "projectcardarchivedstate",
                "href": "/graphql/reference/scalar#projectcardarchivedstate"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "publishedAt",
          "description": "<p>Identifies when the comment was published at.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "reactionGroups",
          "description": "<p>A list of reactions grouped by content left on the subject.</p>",
          "type": "[ReactionGroup!]",
          "id": "reactiongroup",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactiongroup"
        },
        {
          "name": "reactions",
          "description": "<p>A list of Reactions left on the Issue.</p>",
          "type": "ReactionConnection!",
          "id": "reactionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "content",
              "description": "<p>Allows filtering Reactions by emoji.</p>",
              "type": {
                "name": "ReactionContent",
                "id": "reactioncontent",
                "href": "/graphql/reference/scalar#reactioncontent"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Allows specifying the order in which reactions are returned.</p>",
              "type": {
                "name": "ReactionOrder",
                "id": "reactionorder",
                "href": "/graphql/reference/scalar#reactionorder"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this node.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this pull request.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "revertResourcePath",
          "description": "<p>The HTTP path for reverting this pull request.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "revertUrl",
          "description": "<p>The HTTP URL for reverting this pull request.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "reviewRequests",
          "description": "<p>A list of review requests associated with the pull request.</p>",
          "type": "ReviewRequestConnection",
          "id": "reviewrequestconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reviewrequestconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "reviewThreads",
          "description": "<p>The list of all review threads for this pull request.</p>",
          "type": "PullRequestReviewThreadConnection!",
          "id": "pullrequestreviewthreadconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewthreadconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "reviews",
          "description": "<p>A list of reviews associated with the pull request.</p>",
          "type": "PullRequestReviewConnection",
          "id": "pullrequestreviewconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "author",
              "description": "<p>Filter by author of the review.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the reviews.</p>",
              "type": {
                "name": "[PullRequestReviewState!]",
                "id": "pullrequestreviewstate",
                "href": "/graphql/reference/scalar#pullrequestreviewstate"
              }
            }
          ]
        },
        {
          "name": "state",
          "description": "<p>Identifies the state of the pull request.</p>",
          "type": "PullRequestState!",
          "id": "pullrequeststate",
          "kind": "enums",
          "href": "/graphql/reference/enums#pullrequeststate"
        },
        {
          "name": "suggestedReviewers",
          "description": "<p>A list of reviewer suggestions based on commit history and past review comments.</p>",
          "type": "[SuggestedReviewer]!",
          "id": "suggestedreviewer",
          "kind": "objects",
          "href": "/graphql/reference/objects#suggestedreviewer"
        },
        {
          "name": "timeline",
          "description": "<p>A list of events, comments, commits, etc. associated with the pull request.</p>",
          "type": "PullRequestTimelineConnection!",
          "id": "pullrequesttimelineconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequesttimelineconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "since",
              "description": "<p>Allows filtering timeline events by a <code>since</code> timestamp.</p>",
              "type": {
                "name": "DateTime",
                "id": "datetime",
                "href": "/graphql/reference/scalar#datetime"
              }
            }
          ]
        },
        {
          "name": "timelineItems",
          "description": "<p>A list of events, comments, commits, etc. associated with the pull request.</p>",
          "type": "PullRequestTimelineItemsConnection!",
          "id": "pullrequesttimelineitemsconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequesttimelineitemsconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "itemTypes",
              "description": "<p>Filter timeline items by type.</p>",
              "type": {
                "name": "[PullRequestTimelineItemsItemType!]",
                "id": "pullrequesttimelineitemsitemtype",
                "href": "/graphql/reference/scalar#pullrequesttimelineitemsitemtype"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "since",
              "description": "<p>Filter timeline items by a <code>since</code> timestamp.</p>",
              "type": {
                "name": "DateTime",
                "id": "datetime",
                "href": "/graphql/reference/scalar#datetime"
              }
            },
            {
              "name": "skip",
              "description": "<p>Skips the first <em>n</em> elements in the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "title",
          "description": "<p>Identifies the pull request title.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this pull request.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userContentEdits",
          "description": "<p>A list of edits to this content.</p>",
          "type": "UserContentEditConnection",
          "id": "usercontenteditconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontenteditconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "viewerCanApplySuggestion",
          "description": "<p>Whether or not the viewer can apply suggestion.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanReact",
          "description": "<p>Can user react to this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanSubscribe",
          "description": "<p>Check if the viewer is able to change their subscription status for the repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpdate",
          "description": "<p>Check if the current viewer can update this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCannotUpdateReasons",
          "description": "<p>Reasons why the current viewer can not update this comment.</p>",
          "type": "[CommentCannotUpdateReason!]!",
          "id": "commentcannotupdatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentcannotupdatereason"
        },
        {
          "name": "viewerDidAuthor",
          "description": "<p>Did the viewer author this comment.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerSubscription",
          "description": "<p>Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.</p>",
          "type": "SubscriptionState",
          "id": "subscriptionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#subscriptionstate"
        }
      ]
    },
    {
      "name": "PullRequestChangedFile",
      "kind": "objects",
      "id": "pullrequestchangedfile",
      "href": "/graphql/reference/objects#pullrequestchangedfile",
      "description": "<p>A file changed in a pull request.</p>",
      "fields": [
        {
          "name": "additions",
          "description": "<p>The number of additions to the file.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "deletions",
          "description": "<p>The number of deletions to the file.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "path",
          "description": "<p>The path of the file.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "PullRequestChangedFileConnection",
      "kind": "objects",
      "id": "pullrequestchangedfileconnection",
      "href": "/graphql/reference/objects#pullrequestchangedfileconnection",
      "description": "<p>The connection type for PullRequestChangedFile.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PullRequestChangedFileEdge]",
          "id": "pullrequestchangedfileedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestchangedfileedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PullRequestChangedFile]",
          "id": "pullrequestchangedfile",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestchangedfile"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PullRequestChangedFileEdge",
      "kind": "objects",
      "id": "pullrequestchangedfileedge",
      "href": "/graphql/reference/objects#pullrequestchangedfileedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PullRequestChangedFile",
          "id": "pullrequestchangedfile",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestchangedfile"
        }
      ]
    },
    {
      "name": "PullRequestCommit",
      "kind": "objects",
      "id": "pullrequestcommit",
      "href": "/graphql/reference/objects#pullrequestcommit",
      "description": "<p>Represents a Git commit part of a pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "commit",
          "description": "<p>The Git commit object.</p>",
          "type": "Commit!",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "pullRequest",
          "description": "<p>The pull request this commit belongs to.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this pull request commit.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this pull request commit.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "PullRequestCommitCommentThread",
      "kind": "objects",
      "id": "pullrequestcommitcommentthread",
      "href": "/graphql/reference/objects#pullrequestcommitcommentthread",
      "description": "<p>Represents a commit comment thread part of a pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "RepositoryNode",
          "id": "repositorynode",
          "href": "/graphql/reference/interfaces#repositorynode"
        }
      ],
      "fields": [
        {
          "name": "comments",
          "description": "<p>The comments that exist in this thread.</p>",
          "type": "CommitCommentConnection!",
          "id": "commitcommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#commitcommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "commit",
          "description": "<p>The commit the comments were made on.</p>",
          "type": "Commit!",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "path",
          "description": "<p>The file the comments were made on.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "position",
          "description": "<p>The position in the diff for the commit that the comment was made on.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "pullRequest",
          "description": "<p>The pull request this commit comment thread belongs to.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this node.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "PullRequestCommitConnection",
      "kind": "objects",
      "id": "pullrequestcommitconnection",
      "href": "/graphql/reference/objects#pullrequestcommitconnection",
      "description": "<p>The connection type for PullRequestCommit.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PullRequestCommitEdge]",
          "id": "pullrequestcommitedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestcommitedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PullRequestCommit]",
          "id": "pullrequestcommit",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestcommit"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PullRequestCommitEdge",
      "kind": "objects",
      "id": "pullrequestcommitedge",
      "href": "/graphql/reference/objects#pullrequestcommitedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PullRequestCommit",
          "id": "pullrequestcommit",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestcommit"
        }
      ]
    },
    {
      "name": "PullRequestConnection",
      "kind": "objects",
      "id": "pullrequestconnection",
      "href": "/graphql/reference/objects#pullrequestconnection",
      "description": "<p>The connection type for PullRequest.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PullRequestEdge]",
          "id": "pullrequestedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PullRequest]",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PullRequestContributionsByRepository",
      "kind": "objects",
      "id": "pullrequestcontributionsbyrepository",
      "href": "/graphql/reference/objects#pullrequestcontributionsbyrepository",
      "description": "<p>This aggregates pull requests opened by a user within one repository.</p>",
      "fields": [
        {
          "name": "contributions",
          "description": "<p>The pull request contributions.</p>",
          "type": "CreatedPullRequestContributionConnection!",
          "id": "createdpullrequestcontributionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdpullrequestcontributionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for contributions returned from the connection.</p>",
              "type": {
                "name": "ContributionOrder",
                "id": "contributionorder",
                "href": "/graphql/reference/scalar#contributionorder"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository in which the pull requests were opened.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "PullRequestEdge",
      "kind": "objects",
      "id": "pullrequestedge",
      "href": "/graphql/reference/objects#pullrequestedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "PullRequestReview",
      "kind": "objects",
      "id": "pullrequestreview",
      "href": "/graphql/reference/objects#pullrequestreview",
      "description": "<p>A review object for a given pull request.</p>",
      "implements": [
        {
          "name": "Comment",
          "id": "comment",
          "href": "/graphql/reference/interfaces#comment"
        },
        {
          "name": "Deletable",
          "id": "deletable",
          "href": "/graphql/reference/interfaces#deletable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Reactable",
          "id": "reactable",
          "href": "/graphql/reference/interfaces#reactable"
        },
        {
          "name": "RepositoryNode",
          "id": "repositorynode",
          "href": "/graphql/reference/interfaces#repositorynode"
        },
        {
          "name": "Updatable",
          "id": "updatable",
          "href": "/graphql/reference/interfaces#updatable"
        },
        {
          "name": "UpdatableComment",
          "id": "updatablecomment",
          "href": "/graphql/reference/interfaces#updatablecomment"
        }
      ],
      "fields": [
        {
          "name": "author",
          "description": "<p>The actor who authored the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "authorAssociation",
          "description": "<p>Author's association with the subject of the comment.</p>",
          "type": "CommentAuthorAssociation!",
          "id": "commentauthorassociation",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentauthorassociation"
        },
        {
          "name": "body",
          "description": "<p>Identifies the pull request review body.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>The body of this review rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "bodyText",
          "description": "<p>The body of this review rendered as plain text.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "comments",
          "description": "<p>A list of review comments for the current pull request review.</p>",
          "type": "PullRequestReviewCommentConnection!",
          "id": "pullrequestreviewcommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewcommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "commit",
          "description": "<p>Identifies the commit associated with this pull request review.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdViaEmail",
          "description": "<p>Check if this comment was created via an email reply.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "editor",
          "description": "<p>The actor who edited the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "includesCreatedEdit",
          "description": "<p>Check if this comment was edited and includes an edit with the creation data.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "lastEditedAt",
          "description": "<p>The moment the editor made the last edit.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "onBehalfOf",
          "description": "<p>A list of teams that this review was made on behalf of.</p>",
          "type": "TeamConnection!",
          "id": "teamconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "publishedAt",
          "description": "<p>Identifies when the comment was published at.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "pullRequest",
          "description": "<p>Identifies the pull request associated with this pull request review.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "reactionGroups",
          "description": "<p>A list of reactions grouped by content left on the subject.</p>",
          "type": "[ReactionGroup!]",
          "id": "reactiongroup",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactiongroup"
        },
        {
          "name": "reactions",
          "description": "<p>A list of Reactions left on the Issue.</p>",
          "type": "ReactionConnection!",
          "id": "reactionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "content",
              "description": "<p>Allows filtering Reactions by emoji.</p>",
              "type": {
                "name": "ReactionContent",
                "id": "reactioncontent",
                "href": "/graphql/reference/scalar#reactioncontent"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Allows specifying the order in which reactions are returned.</p>",
              "type": {
                "name": "ReactionOrder",
                "id": "reactionorder",
                "href": "/graphql/reference/scalar#reactionorder"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this node.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path permalink for this PullRequestReview.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "state",
          "description": "<p>Identifies the current state of the pull request review.</p>",
          "type": "PullRequestReviewState!",
          "id": "pullrequestreviewstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#pullrequestreviewstate"
        },
        {
          "name": "submittedAt",
          "description": "<p>Identifies when the Pull Request Review was submitted.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL permalink for this PullRequestReview.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userContentEdits",
          "description": "<p>A list of edits to this content.</p>",
          "type": "UserContentEditConnection",
          "id": "usercontenteditconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontenteditconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "viewerCanDelete",
          "description": "<p>Check if the current viewer can delete this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanReact",
          "description": "<p>Can user react to this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpdate",
          "description": "<p>Check if the current viewer can update this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCannotUpdateReasons",
          "description": "<p>Reasons why the current viewer can not update this comment.</p>",
          "type": "[CommentCannotUpdateReason!]!",
          "id": "commentcannotupdatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentcannotupdatereason"
        },
        {
          "name": "viewerDidAuthor",
          "description": "<p>Did the viewer author this comment.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "PullRequestReviewComment",
      "kind": "objects",
      "id": "pullrequestreviewcomment",
      "href": "/graphql/reference/objects#pullrequestreviewcomment",
      "description": "<p>A review comment associated with a given repository pull request.</p>",
      "implements": [
        {
          "name": "Comment",
          "id": "comment",
          "href": "/graphql/reference/interfaces#comment"
        },
        {
          "name": "Deletable",
          "id": "deletable",
          "href": "/graphql/reference/interfaces#deletable"
        },
        {
          "name": "Minimizable",
          "id": "minimizable",
          "href": "/graphql/reference/interfaces#minimizable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Reactable",
          "id": "reactable",
          "href": "/graphql/reference/interfaces#reactable"
        },
        {
          "name": "RepositoryNode",
          "id": "repositorynode",
          "href": "/graphql/reference/interfaces#repositorynode"
        },
        {
          "name": "Updatable",
          "id": "updatable",
          "href": "/graphql/reference/interfaces#updatable"
        },
        {
          "name": "UpdatableComment",
          "id": "updatablecomment",
          "href": "/graphql/reference/interfaces#updatablecomment"
        }
      ],
      "fields": [
        {
          "name": "author",
          "description": "<p>The actor who authored the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "authorAssociation",
          "description": "<p>Author's association with the subject of the comment.</p>",
          "type": "CommentAuthorAssociation!",
          "id": "commentauthorassociation",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentauthorassociation"
        },
        {
          "name": "body",
          "description": "<p>The comment body of this review comment.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>The comment body of this review comment rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "bodyText",
          "description": "<p>The comment body of this review comment rendered as plain text.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "commit",
          "description": "<p>Identifies the commit associated with the comment.</p>",
          "type": "Commit!",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies when the comment was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdViaEmail",
          "description": "<p>Check if this comment was created via an email reply.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "diffHunk",
          "description": "<p>The diff hunk to which the comment applies.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "draftedAt",
          "description": "<p>Identifies when the comment was created in a draft state.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "editor",
          "description": "<p>The actor who edited the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "includesCreatedEdit",
          "description": "<p>Check if this comment was edited and includes an edit with the creation data.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isMinimized",
          "description": "<p>Returns whether or not a comment has been minimized.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "lastEditedAt",
          "description": "<p>The moment the editor made the last edit.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "minimizedReason",
          "description": "<p>Returns why the comment was minimized.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "originalCommit",
          "description": "<p>Identifies the original commit associated with the comment.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "originalPosition",
          "description": "<p>The original line index in the diff to which the comment applies.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "outdated",
          "description": "<p>Identifies when the comment body is outdated.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "path",
          "description": "<p>The path to which the comment applies.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "position",
          "description": "<p>The line index in the diff to which the comment applies.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "publishedAt",
          "description": "<p>Identifies when the comment was published at.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "pullRequest",
          "description": "<p>The pull request associated with this review comment.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "pullRequestReview",
          "description": "<p>The pull request review associated with this review comment.</p>",
          "type": "PullRequestReview",
          "id": "pullrequestreview",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreview"
        },
        {
          "name": "reactionGroups",
          "description": "<p>A list of reactions grouped by content left on the subject.</p>",
          "type": "[ReactionGroup!]",
          "id": "reactiongroup",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactiongroup"
        },
        {
          "name": "reactions",
          "description": "<p>A list of Reactions left on the Issue.</p>",
          "type": "ReactionConnection!",
          "id": "reactionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "content",
              "description": "<p>Allows filtering Reactions by emoji.</p>",
              "type": {
                "name": "ReactionContent",
                "id": "reactioncontent",
                "href": "/graphql/reference/scalar#reactioncontent"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Allows specifying the order in which reactions are returned.</p>",
              "type": {
                "name": "ReactionOrder",
                "id": "reactionorder",
                "href": "/graphql/reference/scalar#reactionorder"
              }
            }
          ]
        },
        {
          "name": "replyTo",
          "description": "<p>The comment this is a reply to.</p>",
          "type": "PullRequestReviewComment",
          "id": "pullrequestreviewcomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewcomment"
        },
        {
          "name": "repository",
          "description": "<p>The repository associated with this node.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path permalink for this review comment.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "state",
          "description": "<p>Identifies the state of the comment.</p>",
          "type": "PullRequestReviewCommentState!",
          "id": "pullrequestreviewcommentstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#pullrequestreviewcommentstate"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies when the comment was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL permalink for this review comment.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userContentEdits",
          "description": "<p>A list of edits to this content.</p>",
          "type": "UserContentEditConnection",
          "id": "usercontenteditconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontenteditconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "viewerCanDelete",
          "description": "<p>Check if the current viewer can delete this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanMinimize",
          "description": "<p>Check if the current viewer can minimize this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanReact",
          "description": "<p>Can user react to this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpdate",
          "description": "<p>Check if the current viewer can update this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCannotUpdateReasons",
          "description": "<p>Reasons why the current viewer can not update this comment.</p>",
          "type": "[CommentCannotUpdateReason!]!",
          "id": "commentcannotupdatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentcannotupdatereason"
        },
        {
          "name": "viewerDidAuthor",
          "description": "<p>Did the viewer author this comment.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "PullRequestReviewCommentConnection",
      "kind": "objects",
      "id": "pullrequestreviewcommentconnection",
      "href": "/graphql/reference/objects#pullrequestreviewcommentconnection",
      "description": "<p>The connection type for PullRequestReviewComment.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PullRequestReviewCommentEdge]",
          "id": "pullrequestreviewcommentedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewcommentedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PullRequestReviewComment]",
          "id": "pullrequestreviewcomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewcomment"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PullRequestReviewCommentEdge",
      "kind": "objects",
      "id": "pullrequestreviewcommentedge",
      "href": "/graphql/reference/objects#pullrequestreviewcommentedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PullRequestReviewComment",
          "id": "pullrequestreviewcomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewcomment"
        }
      ]
    },
    {
      "name": "PullRequestReviewConnection",
      "kind": "objects",
      "id": "pullrequestreviewconnection",
      "href": "/graphql/reference/objects#pullrequestreviewconnection",
      "description": "<p>The connection type for PullRequestReview.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PullRequestReviewEdge]",
          "id": "pullrequestreviewedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PullRequestReview]",
          "id": "pullrequestreview",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreview"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PullRequestReviewContributionsByRepository",
      "kind": "objects",
      "id": "pullrequestreviewcontributionsbyrepository",
      "href": "/graphql/reference/objects#pullrequestreviewcontributionsbyrepository",
      "description": "<p>This aggregates pull request reviews made by a user within one repository.</p>",
      "fields": [
        {
          "name": "contributions",
          "description": "<p>The pull request review contributions.</p>",
          "type": "CreatedPullRequestReviewContributionConnection!",
          "id": "createdpullrequestreviewcontributionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#createdpullrequestreviewcontributionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for contributions returned from the connection.</p>",
              "type": {
                "name": "ContributionOrder",
                "id": "contributionorder",
                "href": "/graphql/reference/scalar#contributionorder"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>The repository in which the pull request reviews were made.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "PullRequestReviewEdge",
      "kind": "objects",
      "id": "pullrequestreviewedge",
      "href": "/graphql/reference/objects#pullrequestreviewedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PullRequestReview",
          "id": "pullrequestreview",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreview"
        }
      ]
    },
    {
      "name": "PullRequestReviewThread",
      "kind": "objects",
      "id": "pullrequestreviewthread",
      "href": "/graphql/reference/objects#pullrequestreviewthread",
      "description": "<p>A threaded list of comments for a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "comments",
          "description": "<p>A list of pull request comments associated with the thread.</p>",
          "type": "PullRequestReviewCommentConnection!",
          "id": "pullrequestreviewcommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewcommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "isResolved",
          "description": "<p>Whether this thread has been resolved.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "pullRequest",
          "description": "<p>Identifies the pull request associated with this thread.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "repository",
          "description": "<p>Identifies the repository associated with this thread.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "resolvedBy",
          "description": "<p>The user who resolved this thread.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "viewerCanResolve",
          "description": "<p>Whether or not the viewer can resolve this thread.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUnresolve",
          "description": "<p>Whether or not the viewer can unresolve this thread.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "PullRequestReviewThreadConnection",
      "kind": "objects",
      "id": "pullrequestreviewthreadconnection",
      "href": "/graphql/reference/objects#pullrequestreviewthreadconnection",
      "description": "<p>Review comment threads for a pull request review.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PullRequestReviewThreadEdge]",
          "id": "pullrequestreviewthreadedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewthreadedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PullRequestReviewThread]",
          "id": "pullrequestreviewthread",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewthread"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PullRequestReviewThreadEdge",
      "kind": "objects",
      "id": "pullrequestreviewthreadedge",
      "href": "/graphql/reference/objects#pullrequestreviewthreadedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PullRequestReviewThread",
          "id": "pullrequestreviewthread",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreviewthread"
        }
      ]
    },
    {
      "name": "PullRequestRevisionMarker",
      "kind": "objects",
      "id": "pullrequestrevisionmarker",
      "href": "/graphql/reference/objects#pullrequestrevisionmarker",
      "description": "<p>Represents the latest point in the pull request timeline for which the viewer has seen the pull request's commits.</p>",
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "lastSeenCommit",
          "description": "<p>The last commit the viewer has seen.</p>",
          "type": "Commit!",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "pullRequest",
          "description": "<p>The pull request to which the marker belongs.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "PullRequestTimelineConnection",
      "kind": "objects",
      "id": "pullrequesttimelineconnection",
      "href": "/graphql/reference/objects#pullrequesttimelineconnection",
      "description": "<p>The connection type for PullRequestTimelineItem.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PullRequestTimelineItemEdge]",
          "id": "pullrequesttimelineitemedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequesttimelineitemedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PullRequestTimelineItem]",
          "id": "pullrequesttimelineitem",
          "kind": "unions",
          "href": "/graphql/reference/unions#pullrequesttimelineitem"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PullRequestTimelineItemEdge",
      "kind": "objects",
      "id": "pullrequesttimelineitemedge",
      "href": "/graphql/reference/objects#pullrequesttimelineitemedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PullRequestTimelineItem",
          "id": "pullrequesttimelineitem",
          "kind": "unions",
          "href": "/graphql/reference/unions#pullrequesttimelineitem"
        }
      ]
    },
    {
      "name": "PullRequestTimelineItemsConnection",
      "kind": "objects",
      "id": "pullrequesttimelineitemsconnection",
      "href": "/graphql/reference/objects#pullrequesttimelineitemsconnection",
      "description": "<p>The connection type for PullRequestTimelineItems.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PullRequestTimelineItemsEdge]",
          "id": "pullrequesttimelineitemsedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequesttimelineitemsedge"
        },
        {
          "name": "filteredCount",
          "description": "<p>Identifies the count of items after applying <code>before</code> and <code>after</code> filters.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PullRequestTimelineItems]",
          "id": "pullrequesttimelineitems",
          "kind": "unions",
          "href": "/graphql/reference/unions#pullrequesttimelineitems"
        },
        {
          "name": "pageCount",
          "description": "<p>Identifies the count of items after applying <code>before</code>/<code>after</code> filters and <code>first</code>/<code>last</code>/<code>skip</code> slicing.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the timeline was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "PullRequestTimelineItemsEdge",
      "kind": "objects",
      "id": "pullrequesttimelineitemsedge",
      "href": "/graphql/reference/objects#pullrequesttimelineitemsedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PullRequestTimelineItems",
          "id": "pullrequesttimelineitems",
          "kind": "unions",
          "href": "/graphql/reference/unions#pullrequesttimelineitems"
        }
      ]
    },
    {
      "name": "Push",
      "kind": "objects",
      "id": "push",
      "href": "/graphql/reference/objects#push",
      "description": "<p>A Git push.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "nextSha",
          "description": "<p>The SHA after the push.</p>",
          "type": "GitObjectID",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "permalink",
          "description": "<p>The permalink for this push.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "previousSha",
          "description": "<p>The SHA before the push.</p>",
          "type": "GitObjectID",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "pusher",
          "description": "<p>The user who pushed.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "repository",
          "description": "<p>The repository that was pushed to.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "PushAllowance",
      "kind": "objects",
      "id": "pushallowance",
      "href": "/graphql/reference/objects#pushallowance",
      "description": "<p>A team or user who has the ability to push to a protected branch.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>The actor that can push.</p>",
          "type": "PushAllowanceActor",
          "id": "pushallowanceactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#pushallowanceactor"
        },
        {
          "name": "branchProtectionRule",
          "description": "<p>Identifies the branch protection rule associated with the allowed user or team.</p>",
          "type": "BranchProtectionRule",
          "id": "branchprotectionrule",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionrule"
        }
      ]
    },
    {
      "name": "PushAllowanceConnection",
      "kind": "objects",
      "id": "pushallowanceconnection",
      "href": "/graphql/reference/objects#pushallowanceconnection",
      "description": "<p>The connection type for PushAllowance.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[PushAllowanceEdge]",
          "id": "pushallowanceedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#pushallowanceedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[PushAllowance]",
          "id": "pushallowance",
          "kind": "objects",
          "href": "/graphql/reference/objects#pushallowance"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "PushAllowanceEdge",
      "kind": "objects",
      "id": "pushallowanceedge",
      "href": "/graphql/reference/objects#pushallowanceedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "PushAllowance",
          "id": "pushallowance",
          "kind": "objects",
          "href": "/graphql/reference/objects#pushallowance"
        }
      ]
    },
    {
      "name": "RateLimit",
      "kind": "objects",
      "id": "ratelimit",
      "href": "/graphql/reference/objects#ratelimit",
      "description": "<p>Represents the client's rate limit.</p>",
      "fields": [
        {
          "name": "cost",
          "description": "<p>The point cost for the current query counting against the rate limit.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "limit",
          "description": "<p>The maximum number of points the client is permitted to consume in a 60 minute window.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "nodeCount",
          "description": "<p>The maximum number of nodes this query may return.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "remaining",
          "description": "<p>The number of points remaining in the current rate limit window.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "resetAt",
          "description": "<p>The time at which the current rate limit window resets in UTC epoch seconds.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "ReactingUserConnection",
      "kind": "objects",
      "id": "reactinguserconnection",
      "href": "/graphql/reference/objects#reactinguserconnection",
      "description": "<p>The connection type for User.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ReactingUserEdge]",
          "id": "reactinguseredge",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactinguseredge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[User]",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ReactingUserEdge",
      "kind": "objects",
      "id": "reactinguseredge",
      "href": "/graphql/reference/objects#reactinguseredge",
      "description": "<p>Represents a user that's made a reaction.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "reactedAt",
          "description": "<p>The moment when the user made the reaction.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "Reaction",
      "kind": "objects",
      "id": "reaction",
      "href": "/graphql/reference/objects#reaction",
      "description": "<p>An emoji reaction to a particular piece of content.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "content",
          "description": "<p>Identifies the emoji reaction.</p>",
          "type": "ReactionContent!",
          "id": "reactioncontent",
          "kind": "enums",
          "href": "/graphql/reference/enums#reactioncontent"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "reactable",
          "description": "<p>The reactable piece of content.</p>",
          "type": "Reactable!",
          "id": "reactable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#reactable"
        },
        {
          "name": "user",
          "description": "<p>Identifies the user who created this reaction.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "ReactionConnection",
      "kind": "objects",
      "id": "reactionconnection",
      "href": "/graphql/reference/objects#reactionconnection",
      "description": "<p>A list of reactions that have been left on the subject.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ReactionEdge]",
          "id": "reactionedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactionedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Reaction]",
          "id": "reaction",
          "kind": "objects",
          "href": "/graphql/reference/objects#reaction"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "viewerHasReacted",
          "description": "<p>Whether or not the authenticated user has left a reaction on the subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "ReactionEdge",
      "kind": "objects",
      "id": "reactionedge",
      "href": "/graphql/reference/objects#reactionedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Reaction",
          "id": "reaction",
          "kind": "objects",
          "href": "/graphql/reference/objects#reaction"
        }
      ]
    },
    {
      "name": "ReactionGroup",
      "kind": "objects",
      "id": "reactiongroup",
      "href": "/graphql/reference/objects#reactiongroup",
      "description": "<p>A group of emoji reactions to a particular piece of content.</p>",
      "fields": [
        {
          "name": "content",
          "description": "<p>Identifies the emoji reaction.</p>",
          "type": "ReactionContent!",
          "id": "reactioncontent",
          "kind": "enums",
          "href": "/graphql/reference/enums#reactioncontent"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies when the reaction was created.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "subject",
          "description": "<p>The subject that was reacted to.</p>",
          "type": "Reactable!",
          "id": "reactable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#reactable"
        },
        {
          "name": "users",
          "description": "<p>Users who have reacted to the reaction subject with the emotion represented by this reaction group.</p>",
          "type": "ReactingUserConnection!",
          "id": "reactinguserconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactinguserconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "viewerHasReacted",
          "description": "<p>Whether or not the authenticated user has left a reaction on the subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "Ref",
      "kind": "objects",
      "id": "ref",
      "href": "/graphql/reference/objects#ref",
      "description": "<p>Represents a Git reference.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "associatedPullRequests",
          "description": "<p>A list of pull requests with this ref as the head ref.</p>",
          "type": "PullRequestConnection!",
          "id": "pullrequestconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "baseRefName",
              "description": "<p>The base ref name to filter the pull requests by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "headRefName",
              "description": "<p>The head ref name to filter the pull requests by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "labels",
              "description": "<p>A list of label names to filter the pull requests by.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for pull requests returned from the connection.</p>",
              "type": {
                "name": "IssueOrder",
                "id": "issueorder",
                "href": "/graphql/reference/scalar#issueorder"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the pull requests by.</p>",
              "type": {
                "name": "[PullRequestState!]",
                "id": "pullrequeststate",
                "href": "/graphql/reference/scalar#pullrequeststate"
              }
            }
          ]
        },
        {
          "name": "name",
          "description": "<p>The ref name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "prefix",
          "description": "<p>The ref's prefix, such as <code>refs/heads/</code> or <code>refs/tags/</code>.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repository",
          "description": "<p>The repository the ref belongs to.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "target",
          "description": "<p>The object the ref points to.</p>",
          "type": "GitObject!",
          "id": "gitobject",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#gitobject"
        }
      ]
    },
    {
      "name": "RefConnection",
      "kind": "objects",
      "id": "refconnection",
      "href": "/graphql/reference/objects#refconnection",
      "description": "<p>The connection type for Ref.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[RefEdge]",
          "id": "refedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#refedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Ref]",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "RefEdge",
      "kind": "objects",
      "id": "refedge",
      "href": "/graphql/reference/objects#refedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        }
      ]
    },
    {
      "name": "ReferencedEvent",
      "kind": "objects",
      "id": "referencedevent",
      "href": "/graphql/reference/objects#referencedevent",
      "description": "<p>Represents a<code>referenced</code>event on a given <code>ReferencedSubject</code>.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "commit",
          "description": "<p>Identifies the commit associated with the<code>referenced</code>event.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "commitRepository",
          "description": "<p>Identifies the repository associated with the<code>referenced</code>event.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "isCrossRepository",
          "description": "<p>Reference originated in a different repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isDirectReference",
          "description": "<p>Checks if the commit message itself references the subject. Can be false in the case of a commit comment reference.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "subject",
          "description": "<p>Object referenced by event.</p>",
          "type": "ReferencedSubject!",
          "id": "referencedsubject",
          "kind": "unions",
          "href": "/graphql/reference/unions#referencedsubject"
        }
      ]
    },
    {
      "name": "Release",
      "kind": "objects",
      "id": "release",
      "href": "/graphql/reference/objects#release",
      "description": "<p>A release contains the content for a release.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "author",
          "description": "<p>The author of the release.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "description",
          "description": "<p>Identifies the description of the release.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "isDraft",
          "description": "<p>Whether or not the release is a draft.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isPrerelease",
          "description": "<p>Whether or not the release is a prerelease.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "name",
          "description": "<p>Identifies the title of the release.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "publishedAt",
          "description": "<p>Identifies the date and time when the release was created.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "releaseAssets",
          "description": "<p>List of releases assets which are dependent on this release.</p>",
          "type": "ReleaseAssetConnection!",
          "id": "releaseassetconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#releaseassetconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "name",
              "description": "<p>A list of names to filter the assets by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            }
          ]
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this issue.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "tag",
          "description": "<p>The Git tag the release points to.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        },
        {
          "name": "tagName",
          "description": "<p>The name of the release's Git tag.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this issue.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "ReleaseAsset",
      "kind": "objects",
      "id": "releaseasset",
      "href": "/graphql/reference/objects#releaseasset",
      "description": "<p>A release asset contains the content for a release asset.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "contentType",
          "description": "<p>The asset's content-type.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "downloadCount",
          "description": "<p>The number of times this asset was downloaded.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "downloadUrl",
          "description": "<p>Identifies the URL where you can download the release asset via the browser.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "name",
          "description": "<p>Identifies the title of the release asset.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "release",
          "description": "<p>Release that the asset is associated with.</p>",
          "type": "Release",
          "id": "release",
          "kind": "objects",
          "href": "/graphql/reference/objects#release"
        },
        {
          "name": "size",
          "description": "<p>The size (in bytes) of the asset.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "uploadedBy",
          "description": "<p>The user that performed the upload.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "url",
          "description": "<p>Identifies the URL of the release asset.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "ReleaseAssetConnection",
      "kind": "objects",
      "id": "releaseassetconnection",
      "href": "/graphql/reference/objects#releaseassetconnection",
      "description": "<p>The connection type for ReleaseAsset.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ReleaseAssetEdge]",
          "id": "releaseassetedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#releaseassetedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[ReleaseAsset]",
          "id": "releaseasset",
          "kind": "objects",
          "href": "/graphql/reference/objects#releaseasset"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ReleaseAssetEdge",
      "kind": "objects",
      "id": "releaseassetedge",
      "href": "/graphql/reference/objects#releaseassetedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "ReleaseAsset",
          "id": "releaseasset",
          "kind": "objects",
          "href": "/graphql/reference/objects#releaseasset"
        }
      ]
    },
    {
      "name": "ReleaseConnection",
      "kind": "objects",
      "id": "releaseconnection",
      "href": "/graphql/reference/objects#releaseconnection",
      "description": "<p>The connection type for Release.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ReleaseEdge]",
          "id": "releaseedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#releaseedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Release]",
          "id": "release",
          "kind": "objects",
          "href": "/graphql/reference/objects#release"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ReleaseEdge",
      "kind": "objects",
      "id": "releaseedge",
      "href": "/graphql/reference/objects#releaseedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Release",
          "id": "release",
          "kind": "objects",
          "href": "/graphql/reference/objects#release"
        }
      ]
    },
    {
      "name": "RemovedFromProjectEvent",
      "kind": "objects",
      "id": "removedfromprojectevent",
      "href": "/graphql/reference/objects#removedfromprojectevent",
      "description": "<p>Represents a<code>removed_from_project</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "project",
          "description": "<p>Project referenced by event.</p>",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "isDeprecated": false,
          "preview": {
            "title": "Project event details preview",
            "description": "This preview adds project, project card, and project column details to project-related issue events.",
            "toggled_by": "starfox-preview",
            "toggled_on": [
              "AddedToProjectEvent.project",
              "AddedToProjectEvent.projectCard",
              "AddedToProjectEvent.projectColumnName",
              "ConvertedNoteToIssueEvent.project",
              "ConvertedNoteToIssueEvent.projectCard",
              "ConvertedNoteToIssueEvent.projectColumnName",
              "MovedColumnsInProjectEvent.project",
              "MovedColumnsInProjectEvent.projectCard",
              "MovedColumnsInProjectEvent.projectColumnName",
              "MovedColumnsInProjectEvent.previousProjectColumnName",
              "RemovedFromProjectEvent.project",
              "RemovedFromProjectEvent.projectColumnName"
            ],
            "owning_teams": [
              "@github/github-projects"
            ],
            "accept_header": "application/vnd.github.starfox-preview+json",
            "href": "/graphql/overview/schema-previews#project-event-details-preview"
          }
        },
        {
          "name": "projectColumnName",
          "description": "<p>Column name referenced by this project event.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "isDeprecated": false,
          "preview": {
            "title": "Project event details preview",
            "description": "This preview adds project, project card, and project column details to project-related issue events.",
            "toggled_by": "starfox-preview",
            "toggled_on": [
              "AddedToProjectEvent.project",
              "AddedToProjectEvent.projectCard",
              "AddedToProjectEvent.projectColumnName",
              "ConvertedNoteToIssueEvent.project",
              "ConvertedNoteToIssueEvent.projectCard",
              "ConvertedNoteToIssueEvent.projectColumnName",
              "MovedColumnsInProjectEvent.project",
              "MovedColumnsInProjectEvent.projectCard",
              "MovedColumnsInProjectEvent.projectColumnName",
              "MovedColumnsInProjectEvent.previousProjectColumnName",
              "RemovedFromProjectEvent.project",
              "RemovedFromProjectEvent.projectColumnName"
            ],
            "owning_teams": [
              "@github/github-projects"
            ],
            "accept_header": "application/vnd.github.starfox-preview+json",
            "href": "/graphql/overview/schema-previews#project-event-details-preview"
          }
        }
      ]
    },
    {
      "name": "RenamedTitleEvent",
      "kind": "objects",
      "id": "renamedtitleevent",
      "href": "/graphql/reference/objects#renamedtitleevent",
      "description": "<p>Represents a<code>renamed</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "currentTitle",
          "description": "<p>Identifies the current title of the issue or pull request.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "previousTitle",
          "description": "<p>Identifies the previous title of the issue or pull request.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "subject",
          "description": "<p>Subject that was renamed.</p>",
          "type": "RenamedTitleSubject!",
          "id": "renamedtitlesubject",
          "kind": "unions",
          "href": "/graphql/reference/unions#renamedtitlesubject"
        }
      ]
    },
    {
      "name": "ReopenedEvent",
      "kind": "objects",
      "id": "reopenedevent",
      "href": "/graphql/reference/objects#reopenedevent",
      "description": "<p>Represents a<code>reopened</code>event on any <code>Closable</code>.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "closable",
          "description": "<p>Object that was reopened.</p>",
          "type": "Closable!",
          "id": "closable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#closable"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "Repository",
      "kind": "objects",
      "id": "repository",
      "href": "/graphql/reference/objects#repository",
      "description": "<p>A repository contains the content for a project.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "ProjectOwner",
          "id": "projectowner",
          "href": "/graphql/reference/interfaces#projectowner"
        },
        {
          "name": "RegistryPackageOwner",
          "id": "registrypackageowner",
          "href": "/graphql/reference/interfaces#registrypackageowner"
        },
        {
          "name": "RepositoryInfo",
          "id": "repositoryinfo",
          "href": "/graphql/reference/interfaces#repositoryinfo"
        },
        {
          "name": "Starrable",
          "id": "starrable",
          "href": "/graphql/reference/interfaces#starrable"
        },
        {
          "name": "Subscribable",
          "id": "subscribable",
          "href": "/graphql/reference/interfaces#subscribable"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "assignableUsers",
          "description": "<p>A list of users that can be assigned to issues in this repository.</p>",
          "type": "UserConnection!",
          "id": "userconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "branchProtectionRules",
          "description": "<p>A list of branch protection rules for this repository.</p>",
          "type": "BranchProtectionRuleConnection!",
          "id": "branchprotectionruleconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionruleconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "codeOfConduct",
          "description": "<p>Returns the code of conduct for this repository.</p>",
          "type": "CodeOfConduct",
          "id": "codeofconduct",
          "kind": "objects",
          "href": "/graphql/reference/objects#codeofconduct"
        },
        {
          "name": "collaborators",
          "description": "<p>A list of collaborators associated with the repository.</p>",
          "type": "RepositoryCollaboratorConnection",
          "id": "repositorycollaboratorconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositorycollaboratorconnection",
          "arguments": [
            {
              "name": "affiliation",
              "description": "<p>Collaborators affiliation level with a repository.</p>",
              "type": {
                "name": "CollaboratorAffiliation",
                "id": "collaboratoraffiliation",
                "href": "/graphql/reference/scalar#collaboratoraffiliation"
              }
            },
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "commitComments",
          "description": "<p>A list of commit comments associated with the repository.</p>",
          "type": "CommitCommentConnection!",
          "id": "commitcommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#commitcommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "defaultBranchRef",
          "description": "<p>The Ref associated with the repository's default branch.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref"
        },
        {
          "name": "deployKeys",
          "description": "<p>A list of deploy keys that are on this repository.</p>",
          "type": "DeployKeyConnection!",
          "id": "deploykeyconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploykeyconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "deployments",
          "description": "<p>Deployments associated with the repository.</p>",
          "type": "DeploymentConnection!",
          "id": "deploymentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#deploymentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "environments",
              "description": "<p>Environments to list deployments for.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for deployments returned from the connection.</p>",
              "type": {
                "name": "DeploymentOrder",
                "id": "deploymentorder",
                "href": "/graphql/reference/scalar#deploymentorder"
              }
            }
          ]
        },
        {
          "name": "description",
          "description": "<p>The description of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "descriptionHTML",
          "description": "<p>The description of the repository rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "diskUsage",
          "description": "<p>The number of kilobytes this repository occupies on disk.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "forkCount",
          "description": "<p>Returns how many forks there are of this repository in the whole network.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "forks",
          "description": "<p>A list of direct forked repositories.</p>",
          "type": "RepositoryConnection!",
          "id": "repositoryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryconnection",
          "arguments": [
            {
              "name": "affiliations",
              "description": "<p>Array of viewer's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\ncurrent viewer owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "href": "/graphql/reference/scalar#repositoryaffiliation"
              }
            },
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "isLocked",
              "description": "<p>If non-null, filters repositories according to whether they have been locked.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for repositories returned from the connection.</p>",
              "type": {
                "name": "RepositoryOrder",
                "id": "repositoryorder",
                "href": "/graphql/reference/scalar#repositoryorder"
              }
            },
            {
              "name": "ownerAffiliations",
              "description": "<p>Array of owner's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\norganization or user being viewed owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "href": "/graphql/reference/scalar#repositoryaffiliation"
              }
            },
            {
              "name": "privacy",
              "description": "<p>If non-null, filters repositories according to privacy.</p>",
              "type": {
                "name": "RepositoryPrivacy",
                "id": "repositoryprivacy",
                "href": "/graphql/reference/scalar#repositoryprivacy"
              }
            }
          ]
        },
        {
          "name": "hasAnonymousAccessEnabled",
          "description": "<p>Indicates if the repository has anonymous Git read access feature enabled.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hasIssuesEnabled",
          "description": "<p>Indicates if the repository has issues feature enabled.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hasWikiEnabled",
          "description": "<p>Indicates if the repository has wiki feature enabled.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "homepageUrl",
          "description": "<p>The repository's URL.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "isArchived",
          "description": "<p>Indicates if the repository is unmaintained.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isDisabled",
          "description": "<p>Returns whether or not this repository disabled.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isFork",
          "description": "<p>Identifies if the repository is a fork.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isLocked",
          "description": "<p>Indicates if the repository has been locked or not.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isMirror",
          "description": "<p>Identifies if the repository is a mirror.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isPrivate",
          "description": "<p>Identifies if the repository is private.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "issue",
          "description": "<p>Returns a single issue from the current repository by number.</p>",
          "type": "Issue",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The number for the issue to be returned.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "issueOrPullRequest",
          "description": "<p>Returns a single issue-like object from the current repository by number.</p>",
          "type": "IssueOrPullRequest",
          "id": "issueorpullrequest",
          "kind": "unions",
          "href": "/graphql/reference/unions#issueorpullrequest",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The number for the issue to be returned.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "issues",
          "description": "<p>A list of issues that have been opened in the repository.</p>",
          "type": "IssueConnection!",
          "id": "issueconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#issueconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "filterBy",
              "description": "<p>Filtering options for issues returned from the connection.</p>",
              "type": {
                "name": "IssueFilters",
                "id": "issuefilters",
                "href": "/graphql/reference/scalar#issuefilters"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "labels",
              "description": "<p>A list of label names to filter the pull requests by.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for issues returned from the connection.</p>",
              "type": {
                "name": "IssueOrder",
                "id": "issueorder",
                "href": "/graphql/reference/scalar#issueorder"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the issues by.</p>",
              "type": {
                "name": "[IssueState!]",
                "id": "issuestate",
                "href": "/graphql/reference/scalar#issuestate"
              }
            }
          ]
        },
        {
          "name": "label",
          "description": "<p>Returns a single label by name.</p>",
          "type": "Label",
          "id": "label",
          "kind": "objects",
          "href": "/graphql/reference/objects#label",
          "arguments": [
            {
              "name": "name",
              "description": "<p>Label name.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            }
          ]
        },
        {
          "name": "labels",
          "description": "<p>A list of labels associated with the repository.</p>",
          "type": "LabelConnection",
          "id": "labelconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#labelconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "query",
              "description": "<p>If provided, searches labels by name and description.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            }
          ]
        },
        {
          "name": "languages",
          "description": "<p>A list containing a breakdown of the language composition of the repository.</p>",
          "type": "LanguageConnection",
          "id": "languageconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#languageconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Order for connection.</p>",
              "type": {
                "name": "LanguageOrder",
                "id": "languageorder",
                "href": "/graphql/reference/scalar#languageorder"
              }
            }
          ]
        },
        {
          "name": "licenseInfo",
          "description": "<p>The license associated with the repository.</p>",
          "type": "License",
          "id": "license",
          "kind": "objects",
          "href": "/graphql/reference/objects#license"
        },
        {
          "name": "lockReason",
          "description": "<p>The reason the repository has been locked.</p>",
          "type": "RepositoryLockReason",
          "id": "repositorylockreason",
          "kind": "enums",
          "href": "/graphql/reference/enums#repositorylockreason"
        },
        {
          "name": "mentionableUsers",
          "description": "<p>A list of Users that can be mentioned in the context of the repository.</p>",
          "type": "UserConnection!",
          "id": "userconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "mergeCommitAllowed",
          "description": "<p>Whether or not PRs are merged with a merge commit on this repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "milestone",
          "description": "<p>Returns a single milestone from the current repository by number.</p>",
          "type": "Milestone",
          "id": "milestone",
          "kind": "objects",
          "href": "/graphql/reference/objects#milestone",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The number for the milestone to be returned.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "milestones",
          "description": "<p>A list of milestones associated with the repository.</p>",
          "type": "MilestoneConnection",
          "id": "milestoneconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#milestoneconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for milestones.</p>",
              "type": {
                "name": "MilestoneOrder",
                "id": "milestoneorder",
                "href": "/graphql/reference/scalar#milestoneorder"
              }
            },
            {
              "name": "states",
              "description": "<p>Filter by the state of the milestones.</p>",
              "type": {
                "name": "[MilestoneState!]",
                "id": "milestonestate",
                "href": "/graphql/reference/scalar#milestonestate"
              }
            }
          ]
        },
        {
          "name": "mirrorUrl",
          "description": "<p>The repository's original mirror URL.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "name",
          "description": "<p>The name of the repository.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "nameWithOwner",
          "description": "<p>The repository's name with owner.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "object",
          "description": "<p>A Git object in the repository.</p>",
          "type": "GitObject",
          "id": "gitobject",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#gitobject",
          "arguments": [
            {
              "name": "expression",
              "description": "<p>A Git revision expression suitable for rev-parse.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "oid",
              "description": "<p>The Git object ID.</p>",
              "type": {
                "name": "GitObjectID",
                "id": "gitobjectid",
                "href": "/graphql/reference/scalar#gitobjectid"
              }
            }
          ]
        },
        {
          "name": "owner",
          "description": "<p>The User owner of the repository.</p>",
          "type": "RepositoryOwner!",
          "id": "repositoryowner",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#repositoryowner"
        },
        {
          "name": "parent",
          "description": "<p>The repository parent, if this is a fork.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "pinnedIssues",
          "description": "<p>A list of pinned issues for this repository.</p>",
          "type": "PinnedIssueConnection",
          "id": "pinnedissueconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinnedissueconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ],
          "isDeprecated": false,
          "preview": {
            "title": "Pinned issues preview",
            "description": "This preview adds support for pinned issues.",
            "toggled_by": "elektra-preview",
            "toggled_on": [
              "Repository.pinnedIssues",
              "PinnedIssue",
              "PinnedIssueEdge",
              "PinnedIssueConnection",
              "Mutation.pinIssue",
              "Mutation.unpinIssue"
            ],
            "owning_teams": [
              "@github/pe-pull-requests"
            ],
            "accept_header": "application/vnd.github.elektra-preview+json",
            "href": "/graphql/overview/schema-previews#pinned-issues-preview"
          }
        },
        {
          "name": "primaryLanguage",
          "description": "<p>The primary language of the repository's code.</p>",
          "type": "Language",
          "id": "language",
          "kind": "objects",
          "href": "/graphql/reference/objects#language"
        },
        {
          "name": "project",
          "description": "<p>Find project by number.</p>",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The project number to find.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "projects",
          "description": "<p>A list of projects under the owner.</p>",
          "type": "ProjectConnection!",
          "id": "projectconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for projects returned from the connection.</p>",
              "type": {
                "name": "ProjectOrder",
                "id": "projectorder",
                "href": "/graphql/reference/scalar#projectorder"
              }
            },
            {
              "name": "search",
              "description": "<p>Query to search projects by, currently only searching by name.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the projects by.</p>",
              "type": {
                "name": "[ProjectState!]",
                "id": "projectstate",
                "href": "/graphql/reference/scalar#projectstate"
              }
            }
          ]
        },
        {
          "name": "projectsResourcePath",
          "description": "<p>The HTTP path listing the repository's projects.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "projectsUrl",
          "description": "<p>The HTTP URL listing the repository's projects.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "pullRequest",
          "description": "<p>Returns a single pull request from the current repository by number.</p>",
          "type": "PullRequest",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The number for the pull request to be returned.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "pullRequests",
          "description": "<p>A list of pull requests that have been opened in the repository.</p>",
          "type": "PullRequestConnection!",
          "id": "pullrequestconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "baseRefName",
              "description": "<p>The base ref name to filter the pull requests by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "headRefName",
              "description": "<p>The head ref name to filter the pull requests by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "labels",
              "description": "<p>A list of label names to filter the pull requests by.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for pull requests returned from the connection.</p>",
              "type": {
                "name": "IssueOrder",
                "id": "issueorder",
                "href": "/graphql/reference/scalar#issueorder"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the pull requests by.</p>",
              "type": {
                "name": "[PullRequestState!]",
                "id": "pullrequeststate",
                "href": "/graphql/reference/scalar#pullrequeststate"
              }
            }
          ]
        },
        {
          "name": "pushedAt",
          "description": "<p>Identifies when the repository was last pushed to.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "rebaseMergeAllowed",
          "description": "<p>Whether or not rebase-merging is enabled on this repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "ref",
          "description": "<p>Fetch a given ref from the repository.</p>",
          "type": "Ref",
          "id": "ref",
          "kind": "objects",
          "href": "/graphql/reference/objects#ref",
          "arguments": [
            {
              "name": "qualifiedName",
              "description": "<p>The ref to retrieve. Fully qualified matches are checked in order\n(<code>refs/heads/master</code>) before falling back onto checks for short name matches (<code>master</code>).</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            }
          ]
        },
        {
          "name": "refs",
          "description": "<p>Fetch a list of refs from the repository.</p>",
          "type": "RefConnection",
          "id": "refconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#refconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "direction",
              "description": "<p>DEPRECATED: use orderBy. The ordering direction.</p>",
              "type": {
                "name": "OrderDirection",
                "id": "orderdirection",
                "href": "/graphql/reference/scalar#orderdirection"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for refs returned from the connection.</p>",
              "type": {
                "name": "RefOrder",
                "id": "reforder",
                "href": "/graphql/reference/scalar#reforder"
              }
            },
            {
              "name": "refPrefix",
              "description": "<p>A ref name prefix like <code>refs/heads/</code>, <code>refs/tags/</code>, etc.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            }
          ]
        },
        {
          "name": "release",
          "description": "<p>Lookup a single release given various criteria.</p>",
          "type": "Release",
          "id": "release",
          "kind": "objects",
          "href": "/graphql/reference/objects#release",
          "arguments": [
            {
              "name": "tagName",
              "description": "<p>The name of the Tag the Release was created from.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            }
          ]
        },
        {
          "name": "releases",
          "description": "<p>List of releases which are dependent on this repository.</p>",
          "type": "ReleaseConnection!",
          "id": "releaseconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#releaseconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Order for connection.</p>",
              "type": {
                "name": "ReleaseOrder",
                "id": "releaseorder",
                "href": "/graphql/reference/scalar#releaseorder"
              }
            }
          ]
        },
        {
          "name": "repositoryTopics",
          "description": "<p>A list of applied repository-topic associations for this repository.</p>",
          "type": "RepositoryTopicConnection!",
          "id": "repositorytopicconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositorytopicconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this repository.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "shortDescriptionHTML",
          "description": "<p>A description of the repository, rendered to HTML without any links in it.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html",
          "arguments": [
            {
              "name": "limit",
              "defaultValue": "200",
              "description": "<p>How many characters to return.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "squashMergeAllowed",
          "description": "<p>Whether or not squash-merging is enabled on this repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "sshUrl",
          "description": "<p>The SSH URL to clone this repository.</p>",
          "type": "GitSSHRemote!",
          "id": "gitsshremote",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitsshremote"
        },
        {
          "name": "stargazers",
          "description": "<p>A list of users who have starred this starrable.</p>",
          "type": "StargazerConnection!",
          "id": "stargazerconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#stargazerconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Order for connection.</p>",
              "type": {
                "name": "StarOrder",
                "id": "starorder",
                "href": "/graphql/reference/scalar#starorder"
              }
            }
          ]
        },
        {
          "name": "tempCloneToken",
          "description": "<p>Temporary authentication token for cloning this repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "isDeprecated": false,
          "preview": {
            "title": "Temporary cloning token for private repositories preview",
            "description": "This preview adds support for accessing a temporary token field for cloning private repositories.",
            "toggled_by": "daredevil-preview",
            "toggled_on": [
              "Repository.tempCloneToken"
            ],
            "owning_teams": [
              "@github/experience-engineering-work"
            ],
            "accept_header": "application/vnd.github.daredevil-preview+json",
            "href": "/graphql/overview/schema-previews#temporary-cloning-token-for-private-repositories-preview"
          }
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this repository.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "viewerCanAdminister",
          "description": "<p>Indicates whether the viewer has admin permissions on this repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanCreateProjects",
          "description": "<p>Can the current viewer create new projects on this owner.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanSubscribe",
          "description": "<p>Check if the viewer is able to change their subscription status for the repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpdateTopics",
          "description": "<p>Indicates whether the viewer can update the topics of this repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerHasStarred",
          "description": "<p>Returns a boolean indicating whether the viewing user has starred this starrable.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerPermission",
          "description": "<p>The users permission level on the repository. Will return null if authenticated as an GitHub App.</p>",
          "type": "RepositoryPermission",
          "id": "repositorypermission",
          "kind": "enums",
          "href": "/graphql/reference/enums#repositorypermission"
        },
        {
          "name": "viewerSubscription",
          "description": "<p>Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.</p>",
          "type": "SubscriptionState",
          "id": "subscriptionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#subscriptionstate"
        },
        {
          "name": "vulnerabilityAlerts",
          "description": "<p>A list of vulnerability alerts that are on this repository.</p>",
          "type": "RepositoryVulnerabilityAlertConnection",
          "id": "repositoryvulnerabilityalertconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryvulnerabilityalertconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ],
          "isDeprecated": false,
          "preview": {
            "title": "Repository vulnerability alerts preview",
            "description": "This preview adds support for viewing vulnerability alerts for a repository.",
            "toggled_by": "vixen-preview",
            "toggled_on": [
              "RepositoryVulnerabilityAlert",
              "Repository.vulnerabilityAlerts",
              "RepositoryVulnerabilityAlertConnection",
              "RepositoryVulnerabilityAlertEdge"
            ],
            "owning_teams": [
              "@github/ee-security-workflows"
            ],
            "accept_header": "application/vnd.github.vixen-preview+json",
            "href": "/graphql/overview/schema-previews#repository-vulnerability-alerts-preview"
          }
        },
        {
          "name": "watchers",
          "description": "<p>A list of users watching the repository.</p>",
          "type": "UserConnection!",
          "id": "userconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "RepositoryCollaboratorConnection",
      "kind": "objects",
      "id": "repositorycollaboratorconnection",
      "href": "/graphql/reference/objects#repositorycollaboratorconnection",
      "description": "<p>The connection type for User.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[RepositoryCollaboratorEdge]",
          "id": "repositorycollaboratoredge",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositorycollaboratoredge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[User]",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "RepositoryCollaboratorEdge",
      "kind": "objects",
      "id": "repositorycollaboratoredge",
      "href": "/graphql/reference/objects#repositorycollaboratoredge",
      "description": "<p>Represents a user who is a collaborator of a repository.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "permission",
          "description": "<p>The permission the user has on the repository.</p>",
          "type": "RepositoryPermission!",
          "id": "repositorypermission",
          "kind": "enums",
          "href": "/graphql/reference/enums#repositorypermission"
        },
        {
          "name": "permissionSources",
          "description": "<p>A list of sources for the user's access to the repository.</p>",
          "type": "[PermissionSource!]",
          "id": "permissionsource",
          "kind": "objects",
          "href": "/graphql/reference/objects#permissionsource"
        }
      ]
    },
    {
      "name": "RepositoryConnection",
      "kind": "objects",
      "id": "repositoryconnection",
      "href": "/graphql/reference/objects#repositoryconnection",
      "description": "<p>A list of repositories owned by the subject.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[RepositoryEdge]",
          "id": "repositoryedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Repository]",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "totalDiskUsage",
          "description": "<p>The total size in kilobytes of all repositories in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "RepositoryEdge",
      "kind": "objects",
      "id": "repositoryedge",
      "href": "/graphql/reference/objects#repositoryedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "RepositoryInvitation",
      "kind": "objects",
      "id": "repositoryinvitation",
      "href": "/graphql/reference/objects#repositoryinvitation",
      "description": "<p>An invitation for a user to be added to a repository.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "invitee",
          "description": "<p>The user who received the invitation.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "inviter",
          "description": "<p>The user who created the invitation.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "permission",
          "description": "<p>The permission granted on this repository by this invitation.</p>",
          "type": "RepositoryPermission!",
          "id": "repositorypermission",
          "kind": "enums",
          "href": "/graphql/reference/enums#repositorypermission"
        },
        {
          "name": "repository",
          "description": "<p>The Repository the user is invited to.</p>",
          "type": "RepositoryInfo",
          "id": "repositoryinfo",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#repositoryinfo"
        }
      ]
    },
    {
      "name": "RepositoryTopic",
      "kind": "objects",
      "id": "repositorytopic",
      "href": "/graphql/reference/objects#repositorytopic",
      "description": "<p>A repository-topic connects a repository to a topic.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this repository-topic.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "topic",
          "description": "<p>The topic.</p>",
          "type": "Topic!",
          "id": "topic",
          "kind": "objects",
          "href": "/graphql/reference/objects#topic"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this repository-topic.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "RepositoryTopicConnection",
      "kind": "objects",
      "id": "repositorytopicconnection",
      "href": "/graphql/reference/objects#repositorytopicconnection",
      "description": "<p>The connection type for RepositoryTopic.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[RepositoryTopicEdge]",
          "id": "repositorytopicedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositorytopicedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[RepositoryTopic]",
          "id": "repositorytopic",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositorytopic"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "RepositoryTopicEdge",
      "kind": "objects",
      "id": "repositorytopicedge",
      "href": "/graphql/reference/objects#repositorytopicedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "RepositoryTopic",
          "id": "repositorytopic",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositorytopic"
        }
      ]
    },
    {
      "name": "RepositoryVulnerabilityAlert",
      "kind": "objects",
      "id": "repositoryvulnerabilityalert",
      "href": "/graphql/reference/objects#repositoryvulnerabilityalert",
      "description": "<p>A alert for a repository with an affected vulnerability.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Repository vulnerability alerts preview",
        "description": "This preview adds support for viewing vulnerability alerts for a repository.",
        "toggled_by": "vixen-preview",
        "toggled_on": [
          "RepositoryVulnerabilityAlert",
          "Repository.vulnerabilityAlerts",
          "RepositoryVulnerabilityAlertConnection",
          "RepositoryVulnerabilityAlertEdge"
        ],
        "owning_teams": [
          "@github/ee-security-workflows"
        ],
        "accept_header": "application/vnd.github.vixen-preview+json",
        "href": "/graphql/overview/schema-previews#repository-vulnerability-alerts-preview"
      },
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "RepositoryNode",
          "id": "repositorynode",
          "href": "/graphql/reference/interfaces#repositorynode"
        }
      ],
      "fields": [
        {
          "name": "dismissReason",
          "description": "<p>The reason the alert was dismissed.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "dismissedAt",
          "description": "<p>When was the alert dimissed?.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "dismisser",
          "description": "<p>The user who dismissed the alert.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "repository",
          "description": "<p>The associated repository.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "securityAdvisory",
          "description": "<p>The associated security advisory.</p>",
          "type": "SecurityAdvisory",
          "id": "securityadvisory",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityadvisory"
        },
        {
          "name": "securityVulnerability",
          "description": "<p>The associated security vulnerablity.</p>",
          "type": "SecurityVulnerability",
          "id": "securityvulnerability",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityvulnerability"
        },
        {
          "name": "vulnerableManifestFilename",
          "description": "<p>The vulnerable manifest filename.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "vulnerableManifestPath",
          "description": "<p>The vulnerable manifest path.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "vulnerableRequirements",
          "description": "<p>The vulnerable requirements.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "RepositoryVulnerabilityAlertConnection",
      "kind": "objects",
      "id": "repositoryvulnerabilityalertconnection",
      "href": "/graphql/reference/objects#repositoryvulnerabilityalertconnection",
      "description": "<p>The connection type for RepositoryVulnerabilityAlert.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Repository vulnerability alerts preview",
        "description": "This preview adds support for viewing vulnerability alerts for a repository.",
        "toggled_by": "vixen-preview",
        "toggled_on": [
          "RepositoryVulnerabilityAlert",
          "Repository.vulnerabilityAlerts",
          "RepositoryVulnerabilityAlertConnection",
          "RepositoryVulnerabilityAlertEdge"
        ],
        "owning_teams": [
          "@github/ee-security-workflows"
        ],
        "accept_header": "application/vnd.github.vixen-preview+json",
        "href": "/graphql/overview/schema-previews#repository-vulnerability-alerts-preview"
      },
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[RepositoryVulnerabilityAlertEdge]",
          "id": "repositoryvulnerabilityalertedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryvulnerabilityalertedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[RepositoryVulnerabilityAlert]",
          "id": "repositoryvulnerabilityalert",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryvulnerabilityalert"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "RepositoryVulnerabilityAlertEdge",
      "kind": "objects",
      "id": "repositoryvulnerabilityalertedge",
      "href": "/graphql/reference/objects#repositoryvulnerabilityalertedge",
      "description": "<p>An edge in a connection.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Repository vulnerability alerts preview",
        "description": "This preview adds support for viewing vulnerability alerts for a repository.",
        "toggled_by": "vixen-preview",
        "toggled_on": [
          "RepositoryVulnerabilityAlert",
          "Repository.vulnerabilityAlerts",
          "RepositoryVulnerabilityAlertConnection",
          "RepositoryVulnerabilityAlertEdge"
        ],
        "owning_teams": [
          "@github/ee-security-workflows"
        ],
        "accept_header": "application/vnd.github.vixen-preview+json",
        "href": "/graphql/overview/schema-previews#repository-vulnerability-alerts-preview"
      },
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "RepositoryVulnerabilityAlert",
          "id": "repositoryvulnerabilityalert",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryvulnerabilityalert"
        }
      ]
    },
    {
      "name": "RestrictedContribution",
      "kind": "objects",
      "id": "restrictedcontribution",
      "href": "/graphql/reference/objects#restrictedcontribution",
      "description": "<p>Represents a private contribution a user made on GitHub.</p>",
      "implements": [
        {
          "name": "Contribution",
          "id": "contribution",
          "href": "/graphql/reference/interfaces#contribution"
        }
      ],
      "fields": [
        {
          "name": "isRestricted",
          "description": "<p>Whether this contribution is associated with a record you do not have access to. For\nexample, your own 'first issue' contribution may have been made on a repository you can no\nlonger access.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "occurredAt",
          "description": "<p>When this contribution was made.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user who made this contribution.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "ReviewDismissalAllowance",
      "kind": "objects",
      "id": "reviewdismissalallowance",
      "href": "/graphql/reference/objects#reviewdismissalallowance",
      "description": "<p>A team or user who has the ability to dismiss a review on a protected branch.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>The actor that can dismiss.</p>",
          "type": "ReviewDismissalAllowanceActor",
          "id": "reviewdismissalallowanceactor",
          "kind": "unions",
          "href": "/graphql/reference/unions#reviewdismissalallowanceactor"
        },
        {
          "name": "branchProtectionRule",
          "description": "<p>Identifies the branch protection rule associated with the allowed user or team.</p>",
          "type": "BranchProtectionRule",
          "id": "branchprotectionrule",
          "kind": "objects",
          "href": "/graphql/reference/objects#branchprotectionrule"
        }
      ]
    },
    {
      "name": "ReviewDismissalAllowanceConnection",
      "kind": "objects",
      "id": "reviewdismissalallowanceconnection",
      "href": "/graphql/reference/objects#reviewdismissalallowanceconnection",
      "description": "<p>The connection type for ReviewDismissalAllowance.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ReviewDismissalAllowanceEdge]",
          "id": "reviewdismissalallowanceedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#reviewdismissalallowanceedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[ReviewDismissalAllowance]",
          "id": "reviewdismissalallowance",
          "kind": "objects",
          "href": "/graphql/reference/objects#reviewdismissalallowance"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ReviewDismissalAllowanceEdge",
      "kind": "objects",
      "id": "reviewdismissalallowanceedge",
      "href": "/graphql/reference/objects#reviewdismissalallowanceedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "ReviewDismissalAllowance",
          "id": "reviewdismissalallowance",
          "kind": "objects",
          "href": "/graphql/reference/objects#reviewdismissalallowance"
        }
      ]
    },
    {
      "name": "ReviewDismissedEvent",
      "kind": "objects",
      "id": "reviewdismissedevent",
      "href": "/graphql/reference/objects#reviewdismissedevent",
      "description": "<p>Represents a<code>review_dismissed</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "dismissalMessage",
          "description": "<p>Identifies the optional message associated with the<code>review_dismissed</code>event.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "dismissalMessageHTML",
          "description": "<p>Identifies the optional message associated with the event, rendered to HTML.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "message",
          "description": "<p>Identifies the message associated with the<code>review_dismissed</code>event.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string",
          "isDeprecated": true,
          "deprecationReason": "<p><code>message</code> is being removed because it not nullable, whereas the underlying field is optional. Use <code>dismissalMessage</code> instead. Removal on 2019-07-01 UTC.</p>"
        },
        {
          "name": "messageHtml",
          "description": "<p>The message associated with the event, rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html",
          "isDeprecated": true,
          "deprecationReason": "<p><code>messageHtml</code> is being removed because it not nullable, whereas the underlying field is optional. Use <code>dismissalMessageHTML</code> instead. Removal on 2019-07-01 UTC.</p>"
        },
        {
          "name": "previousReviewState",
          "description": "<p>Identifies the previous state of the review with the<code>review_dismissed</code>event.</p>",
          "type": "PullRequestReviewState!",
          "id": "pullrequestreviewstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#pullrequestreviewstate"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "pullRequestCommit",
          "description": "<p>Identifies the commit which caused the review to become stale.</p>",
          "type": "PullRequestCommit",
          "id": "pullrequestcommit",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestcommit"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this review dismissed event.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "review",
          "description": "<p>Identifies the review associated with the<code>review_dismissed</code>event.</p>",
          "type": "PullRequestReview",
          "id": "pullrequestreview",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestreview"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this review dismissed event.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "ReviewRequest",
      "kind": "objects",
      "id": "reviewrequest",
      "href": "/graphql/reference/objects#reviewrequest",
      "description": "<p>A request for a user to review a pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "pullRequest",
          "description": "<p>Identifies the pull request associated with this review request.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "requestedReviewer",
          "description": "<p>The reviewer that is requested.</p>",
          "type": "RequestedReviewer",
          "id": "requestedreviewer",
          "kind": "unions",
          "href": "/graphql/reference/unions#requestedreviewer"
        }
      ]
    },
    {
      "name": "ReviewRequestConnection",
      "kind": "objects",
      "id": "reviewrequestconnection",
      "href": "/graphql/reference/objects#reviewrequestconnection",
      "description": "<p>The connection type for ReviewRequest.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[ReviewRequestEdge]",
          "id": "reviewrequestedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#reviewrequestedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[ReviewRequest]",
          "id": "reviewrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#reviewrequest"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ReviewRequestEdge",
      "kind": "objects",
      "id": "reviewrequestedge",
      "href": "/graphql/reference/objects#reviewrequestedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "ReviewRequest",
          "id": "reviewrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#reviewrequest"
        }
      ]
    },
    {
      "name": "ReviewRequestRemovedEvent",
      "kind": "objects",
      "id": "reviewrequestremovedevent",
      "href": "/graphql/reference/objects#reviewrequestremovedevent",
      "description": "<p>Represents an<code>review_request_removed</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "requestedReviewer",
          "description": "<p>Identifies the reviewer whose review request was removed.</p>",
          "type": "RequestedReviewer",
          "id": "requestedreviewer",
          "kind": "unions",
          "href": "/graphql/reference/unions#requestedreviewer"
        }
      ]
    },
    {
      "name": "ReviewRequestedEvent",
      "kind": "objects",
      "id": "reviewrequestedevent",
      "href": "/graphql/reference/objects#reviewrequestedevent",
      "description": "<p>Represents an<code>review_requested</code>event on a given pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "pullRequest",
          "description": "<p>PullRequest referenced by event.</p>",
          "type": "PullRequest!",
          "id": "pullrequest",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "requestedReviewer",
          "description": "<p>Identifies the reviewer whose review was requested.</p>",
          "type": "RequestedReviewer",
          "id": "requestedreviewer",
          "kind": "unions",
          "href": "/graphql/reference/unions#requestedreviewer"
        }
      ]
    },
    {
      "name": "ReviewStatusHovercardContext",
      "kind": "objects",
      "id": "reviewstatushovercardcontext",
      "href": "/graphql/reference/objects#reviewstatushovercardcontext",
      "description": "<p>A hovercard context with a message describing the current code review state of the pull\nrequest.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Hovercards preview",
        "description": "This preview adds support for reading hovercard contextual data",
        "toggled_by": "hagar-preview",
        "toggled_on": [
          "Issue.hovercard",
          "PullRequest.hovercard",
          "User.hovercard",
          "HovercardContext",
          "GenericHovercardContext",
          "Hovercard",
          "OrganizationTeamsHovercardContext",
          "OrganizationsHovercardContext",
          "ReviewStatusHovercardContext",
          "ViewerHovercardContext"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.hagar-preview+json",
        "href": "/graphql/overview/schema-previews#hovercards-preview"
      },
      "implements": [
        {
          "name": "HovercardContext",
          "id": "hovercardcontext",
          "href": "/graphql/reference/interfaces#hovercardcontext"
        }
      ],
      "fields": [
        {
          "name": "message",
          "description": "<p>A string describing this context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "octicon",
          "description": "<p>An octicon to accompany this context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "SearchResultItemConnection",
      "kind": "objects",
      "id": "searchresultitemconnection",
      "href": "/graphql/reference/objects#searchresultitemconnection",
      "description": "<p>A list of results that matched against a search query.</p>",
      "fields": [
        {
          "name": "codeCount",
          "description": "<p>The number of pieces of code that matched the search query.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[SearchResultItemEdge]",
          "id": "searchresultitemedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#searchresultitemedge"
        },
        {
          "name": "issueCount",
          "description": "<p>The number of issues that matched the search query.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[SearchResultItem]",
          "id": "searchresultitem",
          "kind": "unions",
          "href": "/graphql/reference/unions#searchresultitem"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "repositoryCount",
          "description": "<p>The number of repositories that matched the search query.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "userCount",
          "description": "<p>The number of users that matched the search query.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "wikiCount",
          "description": "<p>The number of wiki pages that matched the search query.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "SearchResultItemEdge",
      "kind": "objects",
      "id": "searchresultitemedge",
      "href": "/graphql/reference/objects#searchresultitemedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "SearchResultItem",
          "id": "searchresultitem",
          "kind": "unions",
          "href": "/graphql/reference/unions#searchresultitem"
        },
        {
          "name": "textMatches",
          "description": "<p>Text matches on the result found.</p>",
          "type": "[TextMatch]",
          "id": "textmatch",
          "kind": "objects",
          "href": "/graphql/reference/objects#textmatch"
        }
      ]
    },
    {
      "name": "SecurityAdvisory",
      "kind": "objects",
      "id": "securityadvisory",
      "href": "/graphql/reference/objects#securityadvisory",
      "description": "<p>A GitHub Security Advisory.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "description",
          "description": "<p>This is a long plaintext description of the advisory.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "ghsaId",
          "description": "<p>The GitHub Security Advisory ID.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "identifiers",
          "description": "<p>A list of identifiers for this advisory.</p>",
          "type": "[SecurityAdvisoryIdentifier!]!",
          "id": "securityadvisoryidentifier",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityadvisoryidentifier"
        },
        {
          "name": "publishedAt",
          "description": "<p>When the advisory was published.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "references",
          "description": "<p>A list of references for this advisory.</p>",
          "type": "[SecurityAdvisoryReference!]!",
          "id": "securityadvisoryreference",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityadvisoryreference"
        },
        {
          "name": "severity",
          "description": "<p>The severity of the advisory.</p>",
          "type": "SecurityAdvisorySeverity!",
          "id": "securityadvisoryseverity",
          "kind": "enums",
          "href": "/graphql/reference/enums#securityadvisoryseverity"
        },
        {
          "name": "summary",
          "description": "<p>A short plaintext summary of the advisory.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>When the advisory was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "vulnerabilities",
          "description": "<p>Vulnerabilities associated with this Advisory.</p>",
          "type": "SecurityVulnerabilityConnection!",
          "id": "securityvulnerabilityconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityvulnerabilityconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "ecosystem",
              "description": "<p>An ecosystem to filter vulnerabilities by.</p>",
              "type": {
                "name": "SecurityAdvisoryEcosystem",
                "id": "securityadvisoryecosystem",
                "href": "/graphql/reference/scalar#securityadvisoryecosystem"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "package",
              "description": "<p>A package name to filter vulnerabilities by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "severities",
              "description": "<p>A list of severities to filter vulnerabilities by.</p>",
              "type": {
                "name": "[SecurityAdvisorySeverity!]",
                "id": "securityadvisoryseverity",
                "href": "/graphql/reference/scalar#securityadvisoryseverity"
              }
            }
          ]
        },
        {
          "name": "withdrawnAt",
          "description": "<p>When the advisory was withdrawn, if it has been withdrawn.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "SecurityAdvisoryConnection",
      "kind": "objects",
      "id": "securityadvisoryconnection",
      "href": "/graphql/reference/objects#securityadvisoryconnection",
      "description": "<p>The connection type for SecurityAdvisory.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[SecurityAdvisoryEdge]",
          "id": "securityadvisoryedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityadvisoryedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[SecurityAdvisory]",
          "id": "securityadvisory",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityadvisory"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "SecurityAdvisoryEdge",
      "kind": "objects",
      "id": "securityadvisoryedge",
      "href": "/graphql/reference/objects#securityadvisoryedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "SecurityAdvisory",
          "id": "securityadvisory",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityadvisory"
        }
      ]
    },
    {
      "name": "SecurityAdvisoryIdentifier",
      "kind": "objects",
      "id": "securityadvisoryidentifier",
      "href": "/graphql/reference/objects#securityadvisoryidentifier",
      "description": "<p>A GitHub Security Advisory Identifier.</p>",
      "fields": [
        {
          "name": "type",
          "description": "<p>The identifier type, e.g. GHSA, CVE.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "value",
          "description": "<p>The identifier.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "SecurityAdvisoryPackage",
      "kind": "objects",
      "id": "securityadvisorypackage",
      "href": "/graphql/reference/objects#securityadvisorypackage",
      "description": "<p>An individual package.</p>",
      "fields": [
        {
          "name": "ecosystem",
          "description": "<p>The ecosystem the package belongs to, e.g. RUBYGEMS, NPM.</p>",
          "type": "SecurityAdvisoryEcosystem!",
          "id": "securityadvisoryecosystem",
          "kind": "enums",
          "href": "/graphql/reference/enums#securityadvisoryecosystem"
        },
        {
          "name": "name",
          "description": "<p>The package name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "SecurityAdvisoryPackageVersion",
      "kind": "objects",
      "id": "securityadvisorypackageversion",
      "href": "/graphql/reference/objects#securityadvisorypackageversion",
      "description": "<p>An individual package version.</p>",
      "fields": [
        {
          "name": "identifier",
          "description": "<p>The package name or version.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "SecurityAdvisoryReference",
      "kind": "objects",
      "id": "securityadvisoryreference",
      "href": "/graphql/reference/objects#securityadvisoryreference",
      "description": "<p>A GitHub Security Advisory Reference.</p>",
      "fields": [
        {
          "name": "url",
          "description": "<p>A publicly accessible reference.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "SecurityVulnerability",
      "kind": "objects",
      "id": "securityvulnerability",
      "href": "/graphql/reference/objects#securityvulnerability",
      "description": "<p>An individual vulnerability within an Advisory.</p>",
      "fields": [
        {
          "name": "advisory",
          "description": "<p>The Advisory associated with this Vulnerability.</p>",
          "type": "SecurityAdvisory!",
          "id": "securityadvisory",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityadvisory"
        },
        {
          "name": "firstPatchedVersion",
          "description": "<p>The first version containing a fix for the vulnerability.</p>",
          "type": "SecurityAdvisoryPackageVersion",
          "id": "securityadvisorypackageversion",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityadvisorypackageversion"
        },
        {
          "name": "package",
          "description": "<p>A description of the vulnerable package.</p>",
          "type": "SecurityAdvisoryPackage!",
          "id": "securityadvisorypackage",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityadvisorypackage"
        },
        {
          "name": "severity",
          "description": "<p>The severity of the vulnerability within this package.</p>",
          "type": "SecurityAdvisorySeverity!",
          "id": "securityadvisoryseverity",
          "kind": "enums",
          "href": "/graphql/reference/enums#securityadvisoryseverity"
        },
        {
          "name": "updatedAt",
          "description": "<p>When the vulnerability was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "vulnerableVersionRange",
          "description": "<p>A string that describes the vulnerable package versions.\nThis string follows a basic syntax with a few forms.</p>\n<ul>\n<li><code>= 0.2.0</code> denotes a single vulnerable version.</li>\n<li><code>&#x3C;= 1.0.8</code> denotes a version range up to and including the specified version</li>\n<li><code>&#x3C; 0.1.11</code> denotes a version range up to, but excluding, the specified version</li>\n<li><code>>= 4.3.0, &#x3C; 4.3.5</code> denotes a version range with a known minimum and maximum version.</li>\n<li><code>>= 0.0.1</code> denotes a version range with a known minimum, but no known maximum.</li>\n</ul>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "SecurityVulnerabilityConnection",
      "kind": "objects",
      "id": "securityvulnerabilityconnection",
      "href": "/graphql/reference/objects#securityvulnerabilityconnection",
      "description": "<p>The connection type for SecurityVulnerability.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[SecurityVulnerabilityEdge]",
          "id": "securityvulnerabilityedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityvulnerabilityedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[SecurityVulnerability]",
          "id": "securityvulnerability",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityvulnerability"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "SecurityVulnerabilityEdge",
      "kind": "objects",
      "id": "securityvulnerabilityedge",
      "href": "/graphql/reference/objects#securityvulnerabilityedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "SecurityVulnerability",
          "id": "securityvulnerability",
          "kind": "objects",
          "href": "/graphql/reference/objects#securityvulnerability"
        }
      ]
    },
    {
      "name": "SmimeSignature",
      "kind": "objects",
      "id": "smimesignature",
      "href": "/graphql/reference/objects#smimesignature",
      "description": "<p>Represents an S/MIME signature on a Commit or Tag.</p>",
      "implements": [
        {
          "name": "GitSignature",
          "id": "gitsignature",
          "href": "/graphql/reference/interfaces#gitsignature"
        }
      ],
      "fields": [
        {
          "name": "email",
          "description": "<p>Email used to sign this object.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "isValid",
          "description": "<p>True if the signature is valid and verified by GitHub.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "payload",
          "description": "<p>Payload for GPG signing object. Raw ODB object without the signature header.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "signature",
          "description": "<p>ASCII-armored signature header from object.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "signer",
          "description": "<p>GitHub user corresponding to the email signing this commit.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "state",
          "description": "<p>The state of this signature. <code>VALID</code> if signature is valid and verified by\nGitHub, otherwise represents reason why signature is considered invalid.</p>",
          "type": "GitSignatureState!",
          "id": "gitsignaturestate",
          "kind": "enums",
          "href": "/graphql/reference/enums#gitsignaturestate"
        },
        {
          "name": "wasSignedByGitHub",
          "description": "<p>True if the signature was made with GitHub's signing key.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "StargazerConnection",
      "kind": "objects",
      "id": "stargazerconnection",
      "href": "/graphql/reference/objects#stargazerconnection",
      "description": "<p>The connection type for User.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[StargazerEdge]",
          "id": "stargazeredge",
          "kind": "objects",
          "href": "/graphql/reference/objects#stargazeredge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[User]",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "StargazerEdge",
      "kind": "objects",
      "id": "stargazeredge",
      "href": "/graphql/reference/objects#stargazeredge",
      "description": "<p>Represents a user that's starred a repository.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "starredAt",
          "description": "<p>Identifies when the item was starred.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "StarredRepositoryConnection",
      "kind": "objects",
      "id": "starredrepositoryconnection",
      "href": "/graphql/reference/objects#starredrepositoryconnection",
      "description": "<p>The connection type for Repository.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[StarredRepositoryEdge]",
          "id": "starredrepositoryedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#starredrepositoryedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Repository]",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "StarredRepositoryEdge",
      "kind": "objects",
      "id": "starredrepositoryedge",
      "href": "/graphql/reference/objects#starredrepositoryedge",
      "description": "<p>Represents a starred repository.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "starredAt",
          "description": "<p>Identifies when the item was starred.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "Status",
      "kind": "objects",
      "id": "status",
      "href": "/graphql/reference/objects#status",
      "description": "<p>Represents a commit status.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "commit",
          "description": "<p>The commit this status is attached to.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "context",
          "description": "<p>Looks up an individual status context by context name.</p>",
          "type": "StatusContext",
          "id": "statuscontext",
          "kind": "objects",
          "href": "/graphql/reference/objects#statuscontext",
          "arguments": [
            {
              "name": "name",
              "description": "<p>The context name.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            }
          ]
        },
        {
          "name": "contexts",
          "description": "<p>The individual status contexts for this commit.</p>",
          "type": "[StatusContext!]!",
          "id": "statuscontext",
          "kind": "objects",
          "href": "/graphql/reference/objects#statuscontext"
        },
        {
          "name": "state",
          "description": "<p>The combined commit status.</p>",
          "type": "StatusState!",
          "id": "statusstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#statusstate"
        }
      ]
    },
    {
      "name": "StatusContext",
      "kind": "objects",
      "id": "statuscontext",
      "href": "/graphql/reference/objects#statuscontext",
      "description": "<p>Represents an individual commit status context.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "commit",
          "description": "<p>This commit this status context is attached to.</p>",
          "type": "Commit",
          "id": "commit",
          "kind": "objects",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "context",
          "description": "<p>The name of this status context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "creator",
          "description": "<p>The actor who created this status context.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "description",
          "description": "<p>The description for this status context.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "state",
          "description": "<p>The state of this status context.</p>",
          "type": "StatusState!",
          "id": "statusstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#statusstate"
        },
        {
          "name": "targetUrl",
          "description": "<p>The URL for this status context.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "SubscribedEvent",
      "kind": "objects",
      "id": "subscribedevent",
      "href": "/graphql/reference/objects#subscribedevent",
      "description": "<p>Represents a<code>subscribed</code>event on a given <code>Subscribable</code>.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "subscribable",
          "description": "<p>Object referenced by event.</p>",
          "type": "Subscribable!",
          "id": "subscribable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#subscribable"
        }
      ]
    },
    {
      "name": "SuggestedReviewer",
      "kind": "objects",
      "id": "suggestedreviewer",
      "href": "/graphql/reference/objects#suggestedreviewer",
      "description": "<p>A suggestion to review a pull request based on a user's commit history and review comments.</p>",
      "fields": [
        {
          "name": "isAuthor",
          "description": "<p>Is this suggestion based on past commits?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isCommenter",
          "description": "<p>Is this suggestion based on past review comments?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "reviewer",
          "description": "<p>Identifies the user suggested to review the pull request.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "Tag",
      "kind": "objects",
      "id": "tag",
      "href": "/graphql/reference/objects#tag",
      "description": "<p>Represents a Git tag.</p>",
      "implements": [
        {
          "name": "GitObject",
          "id": "gitobject",
          "href": "/graphql/reference/interfaces#gitobject"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "abbreviatedOid",
          "description": "<p>An abbreviated version of the Git object ID.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "commitResourcePath",
          "description": "<p>The HTTP path for this Git object.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "commitUrl",
          "description": "<p>The HTTP URL for this Git object.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "message",
          "description": "<p>The Git tag message.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The Git tag name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "oid",
          "description": "<p>The Git object ID.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "repository",
          "description": "<p>The Repository the Git object belongs to.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "tagger",
          "description": "<p>Details about the tag author.</p>",
          "type": "GitActor",
          "id": "gitactor",
          "kind": "objects",
          "href": "/graphql/reference/objects#gitactor"
        },
        {
          "name": "target",
          "description": "<p>The Git object the tag points to.</p>",
          "type": "GitObject!",
          "id": "gitobject",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#gitobject"
        }
      ]
    },
    {
      "name": "Team",
      "kind": "objects",
      "id": "team",
      "href": "/graphql/reference/objects#team",
      "description": "<p>A team of users in an organization.</p>",
      "implements": [
        {
          "name": "MemberStatusable",
          "id": "memberstatusable",
          "href": "/graphql/reference/interfaces#memberstatusable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Subscribable",
          "id": "subscribable",
          "href": "/graphql/reference/interfaces#subscribable"
        }
      ],
      "fields": [
        {
          "name": "ancestors",
          "description": "<p>A list of teams that are ancestors of this team.</p>",
          "type": "TeamConnection!",
          "id": "teamconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "avatarUrl",
          "description": "<p>A URL pointing to the team's avatar.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri",
          "arguments": [
            {
              "name": "size",
              "defaultValue": "400",
              "description": "<p>The size in pixels of the resulting square image.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "childTeams",
          "description": "<p>List of child teams belonging to this team.</p>",
          "type": "TeamConnection!",
          "id": "teamconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "immediateOnly",
              "defaultValue": true,
              "description": "<p>Whether to list immediate child teams or all descendant child teams.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Order for connection.</p>",
              "type": {
                "name": "TeamOrder",
                "id": "teamorder",
                "href": "/graphql/reference/scalar#teamorder"
              }
            },
            {
              "name": "userLogins",
              "description": "<p>User logins to filter by.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            }
          ]
        },
        {
          "name": "combinedSlug",
          "description": "<p>The slug corresponding to the organization and team.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "description",
          "description": "<p>The description of the team.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "discussion",
          "description": "<p>Find a team discussion by its number.</p>",
          "type": "TeamDiscussion",
          "id": "teamdiscussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussion",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The sequence number of the discussion to find.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ],
          "isDeprecated": false,
          "preview": {
            "title": "Team discussions preview",
            "description": "Adds support for reading and managing discussions within teams.",
            "toggled_by": "echo-preview",
            "toggled_on": [
              "Mutation.createTeamDiscussion",
              "Mutation.createTeamDiscussionComment",
              "Mutation.deleteTeamDiscussion",
              "Mutation.deleteTeamDiscussionComment",
              "Mutation.updateTeamDiscussion",
              "Mutation.updateTeamDiscussionComment",
              "Team.discussion",
              "Team.discussions",
              "Team.discussionsResourcePath",
              "Team.discussionsUrl",
              "TeamDiscussion",
              "TeamDiscussionComment",
              "TeamDiscussionCommentConnection",
              "TeamDiscussionCommentEdge",
              "TeamDiscussionCommentOrder",
              "TeamDiscussionCommentOrderField",
              "TeamDiscussionConnection",
              "TeamDiscussionEdge",
              "TeamDiscussionOrder",
              "TeamDiscussionOrderField"
            ],
            "owning_teams": [
              "@github/identity"
            ],
            "accept_header": "application/vnd.github.echo-preview+json",
            "href": "/graphql/overview/schema-previews#team-discussions-preview"
          }
        },
        {
          "name": "discussions",
          "description": "<p>A list of team discussions.</p>",
          "type": "TeamDiscussionConnection!",
          "id": "teamdiscussionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "isPinned",
              "description": "<p>If provided, filters discussions according to whether or not they are pinned.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Order for connection.</p>",
              "type": {
                "name": "TeamDiscussionOrder",
                "id": "teamdiscussionorder",
                "href": "/graphql/reference/scalar#teamdiscussionorder"
              }
            }
          ],
          "isDeprecated": false,
          "preview": {
            "title": "Team discussions preview",
            "description": "Adds support for reading and managing discussions within teams.",
            "toggled_by": "echo-preview",
            "toggled_on": [
              "Mutation.createTeamDiscussion",
              "Mutation.createTeamDiscussionComment",
              "Mutation.deleteTeamDiscussion",
              "Mutation.deleteTeamDiscussionComment",
              "Mutation.updateTeamDiscussion",
              "Mutation.updateTeamDiscussionComment",
              "Team.discussion",
              "Team.discussions",
              "Team.discussionsResourcePath",
              "Team.discussionsUrl",
              "TeamDiscussion",
              "TeamDiscussionComment",
              "TeamDiscussionCommentConnection",
              "TeamDiscussionCommentEdge",
              "TeamDiscussionCommentOrder",
              "TeamDiscussionCommentOrderField",
              "TeamDiscussionConnection",
              "TeamDiscussionEdge",
              "TeamDiscussionOrder",
              "TeamDiscussionOrderField"
            ],
            "owning_teams": [
              "@github/identity"
            ],
            "accept_header": "application/vnd.github.echo-preview+json",
            "href": "/graphql/overview/schema-previews#team-discussions-preview"
          }
        },
        {
          "name": "discussionsResourcePath",
          "description": "<p>The HTTP path for team discussions.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri",
          "isDeprecated": false,
          "preview": {
            "title": "Team discussions preview",
            "description": "Adds support for reading and managing discussions within teams.",
            "toggled_by": "echo-preview",
            "toggled_on": [
              "Mutation.createTeamDiscussion",
              "Mutation.createTeamDiscussionComment",
              "Mutation.deleteTeamDiscussion",
              "Mutation.deleteTeamDiscussionComment",
              "Mutation.updateTeamDiscussion",
              "Mutation.updateTeamDiscussionComment",
              "Team.discussion",
              "Team.discussions",
              "Team.discussionsResourcePath",
              "Team.discussionsUrl",
              "TeamDiscussion",
              "TeamDiscussionComment",
              "TeamDiscussionCommentConnection",
              "TeamDiscussionCommentEdge",
              "TeamDiscussionCommentOrder",
              "TeamDiscussionCommentOrderField",
              "TeamDiscussionConnection",
              "TeamDiscussionEdge",
              "TeamDiscussionOrder",
              "TeamDiscussionOrderField"
            ],
            "owning_teams": [
              "@github/identity"
            ],
            "accept_header": "application/vnd.github.echo-preview+json",
            "href": "/graphql/overview/schema-previews#team-discussions-preview"
          }
        },
        {
          "name": "discussionsUrl",
          "description": "<p>The HTTP URL for team discussions.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri",
          "isDeprecated": false,
          "preview": {
            "title": "Team discussions preview",
            "description": "Adds support for reading and managing discussions within teams.",
            "toggled_by": "echo-preview",
            "toggled_on": [
              "Mutation.createTeamDiscussion",
              "Mutation.createTeamDiscussionComment",
              "Mutation.deleteTeamDiscussion",
              "Mutation.deleteTeamDiscussionComment",
              "Mutation.updateTeamDiscussion",
              "Mutation.updateTeamDiscussionComment",
              "Team.discussion",
              "Team.discussions",
              "Team.discussionsResourcePath",
              "Team.discussionsUrl",
              "TeamDiscussion",
              "TeamDiscussionComment",
              "TeamDiscussionCommentConnection",
              "TeamDiscussionCommentEdge",
              "TeamDiscussionCommentOrder",
              "TeamDiscussionCommentOrderField",
              "TeamDiscussionConnection",
              "TeamDiscussionEdge",
              "TeamDiscussionOrder",
              "TeamDiscussionOrderField"
            ],
            "owning_teams": [
              "@github/identity"
            ],
            "accept_header": "application/vnd.github.echo-preview+json",
            "href": "/graphql/overview/schema-previews#team-discussions-preview"
          }
        },
        {
          "name": "editTeamResourcePath",
          "description": "<p>The HTTP path for editing this team.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "editTeamUrl",
          "description": "<p>The HTTP URL for editing this team.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "invitations",
          "description": "<p>A list of pending invitations for users to this team.</p>",
          "type": "OrganizationInvitationConnection",
          "id": "organizationinvitationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationinvitationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "memberStatuses",
          "description": "<p>Get the status messages members of this entity have set that are either public or visible only to the organization.</p>",
          "type": "UserStatusConnection!",
          "id": "userstatusconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userstatusconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for user statuses returned from the connection.</p>",
              "type": {
                "name": "UserStatusOrder",
                "id": "userstatusorder",
                "href": "/graphql/reference/scalar#userstatusorder"
              }
            }
          ]
        },
        {
          "name": "members",
          "description": "<p>A list of users who are members of this team.</p>",
          "type": "TeamMemberConnection!",
          "id": "teammemberconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#teammemberconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "membership",
              "defaultValue": "ALL",
              "description": "<p>Filter by membership type.</p>",
              "type": {
                "name": "TeamMembershipType",
                "id": "teammembershiptype",
                "href": "/graphql/reference/scalar#teammembershiptype"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Order for the connection.</p>",
              "type": {
                "name": "TeamMemberOrder",
                "id": "teammemberorder",
                "href": "/graphql/reference/scalar#teammemberorder"
              }
            },
            {
              "name": "query",
              "description": "<p>The search string to look for.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "role",
              "description": "<p>Filter by team member role.</p>",
              "type": {
                "name": "TeamMemberRole",
                "id": "teammemberrole",
                "href": "/graphql/reference/scalar#teammemberrole"
              }
            }
          ]
        },
        {
          "name": "membersResourcePath",
          "description": "<p>The HTTP path for the team' members.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "membersUrl",
          "description": "<p>The HTTP URL for the team' members.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "name",
          "description": "<p>The name of the team.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "newTeamResourcePath",
          "description": "<p>The HTTP path creating a new team.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "newTeamUrl",
          "description": "<p>The HTTP URL creating a new team.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "organization",
          "description": "<p>The organization that owns this team.</p>",
          "type": "Organization!",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "parentTeam",
          "description": "<p>The parent team of the team.</p>",
          "type": "Team",
          "id": "team",
          "kind": "objects",
          "href": "/graphql/reference/objects#team"
        },
        {
          "name": "privacy",
          "description": "<p>The level of privacy the team has.</p>",
          "type": "TeamPrivacy!",
          "id": "teamprivacy",
          "kind": "enums",
          "href": "/graphql/reference/enums#teamprivacy"
        },
        {
          "name": "repositories",
          "description": "<p>A list of repositories this team has access to.</p>",
          "type": "TeamRepositoryConnection!",
          "id": "teamrepositoryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamrepositoryconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Order for the connection.</p>",
              "type": {
                "name": "TeamRepositoryOrder",
                "id": "teamrepositoryorder",
                "href": "/graphql/reference/scalar#teamrepositoryorder"
              }
            },
            {
              "name": "query",
              "description": "<p>The search string to look for.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            }
          ]
        },
        {
          "name": "repositoriesResourcePath",
          "description": "<p>The HTTP path for this team's repositories.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "repositoriesUrl",
          "description": "<p>The HTTP URL for this team's repositories.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this team.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "slug",
          "description": "<p>The slug corresponding to the team.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "teamsResourcePath",
          "description": "<p>The HTTP path for this team's teams.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "teamsUrl",
          "description": "<p>The HTTP URL for this team's teams.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this team.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "viewerCanAdminister",
          "description": "<p>Team is adminable by the viewer.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanSubscribe",
          "description": "<p>Check if the viewer is able to change their subscription status for the repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerSubscription",
          "description": "<p>Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.</p>",
          "type": "SubscriptionState",
          "id": "subscriptionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#subscriptionstate"
        }
      ]
    },
    {
      "name": "TeamConnection",
      "kind": "objects",
      "id": "teamconnection",
      "href": "/graphql/reference/objects#teamconnection",
      "description": "<p>The connection type for Team.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[TeamEdge]",
          "id": "teamedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Team]",
          "id": "team",
          "kind": "objects",
          "href": "/graphql/reference/objects#team"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "TeamDiscussion",
      "kind": "objects",
      "id": "teamdiscussion",
      "href": "/graphql/reference/objects#teamdiscussion",
      "description": "<p>A team discussion.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Team discussions preview",
        "description": "Adds support for reading and managing discussions within teams.",
        "toggled_by": "echo-preview",
        "toggled_on": [
          "Mutation.createTeamDiscussion",
          "Mutation.createTeamDiscussionComment",
          "Mutation.deleteTeamDiscussion",
          "Mutation.deleteTeamDiscussionComment",
          "Mutation.updateTeamDiscussion",
          "Mutation.updateTeamDiscussionComment",
          "Team.discussion",
          "Team.discussions",
          "Team.discussionsResourcePath",
          "Team.discussionsUrl",
          "TeamDiscussion",
          "TeamDiscussionComment",
          "TeamDiscussionCommentConnection",
          "TeamDiscussionCommentEdge",
          "TeamDiscussionCommentOrder",
          "TeamDiscussionCommentOrderField",
          "TeamDiscussionConnection",
          "TeamDiscussionEdge",
          "TeamDiscussionOrder",
          "TeamDiscussionOrderField"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.echo-preview+json",
        "href": "/graphql/overview/schema-previews#team-discussions-preview"
      },
      "implements": [
        {
          "name": "Comment",
          "id": "comment",
          "href": "/graphql/reference/interfaces#comment"
        },
        {
          "name": "Deletable",
          "id": "deletable",
          "href": "/graphql/reference/interfaces#deletable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Reactable",
          "id": "reactable",
          "href": "/graphql/reference/interfaces#reactable"
        },
        {
          "name": "Subscribable",
          "id": "subscribable",
          "href": "/graphql/reference/interfaces#subscribable"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        },
        {
          "name": "Updatable",
          "id": "updatable",
          "href": "/graphql/reference/interfaces#updatable"
        },
        {
          "name": "UpdatableComment",
          "id": "updatablecomment",
          "href": "/graphql/reference/interfaces#updatablecomment"
        }
      ],
      "fields": [
        {
          "name": "author",
          "description": "<p>The actor who authored the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "authorAssociation",
          "description": "<p>Author's association with the discussion's team.</p>",
          "type": "CommentAuthorAssociation!",
          "id": "commentauthorassociation",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentauthorassociation"
        },
        {
          "name": "body",
          "description": "<p>The body as Markdown.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>The discussion body rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "bodyText",
          "description": "<p>The body rendered to text.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyVersion",
          "description": "<p>Identifies the discussion body hash.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "comments",
          "description": "<p>A list of comments on this discussion.</p>",
          "type": "TeamDiscussionCommentConnection!",
          "id": "teamdiscussioncommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussioncommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "fromComment",
              "description": "<p>When provided, filters the connection such that results begin with the comment with this number.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Order for connection.</p>",
              "type": {
                "name": "TeamDiscussionCommentOrder",
                "id": "teamdiscussioncommentorder",
                "href": "/graphql/reference/scalar#teamdiscussioncommentorder"
              }
            }
          ]
        },
        {
          "name": "commentsResourcePath",
          "description": "<p>The HTTP path for discussion comments.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "commentsUrl",
          "description": "<p>The HTTP URL for discussion comments.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdViaEmail",
          "description": "<p>Check if this comment was created via an email reply.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "editor",
          "description": "<p>The actor who edited the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "includesCreatedEdit",
          "description": "<p>Check if this comment was edited and includes an edit with the creation data.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isPinned",
          "description": "<p>Whether or not the discussion is pinned.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isPrivate",
          "description": "<p>Whether or not the discussion is only visible to team members and org admins.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "lastEditedAt",
          "description": "<p>The moment the editor made the last edit.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "number",
          "description": "<p>Identifies the discussion within its team.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "publishedAt",
          "description": "<p>Identifies when the comment was published at.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "reactionGroups",
          "description": "<p>A list of reactions grouped by content left on the subject.</p>",
          "type": "[ReactionGroup!]",
          "id": "reactiongroup",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactiongroup"
        },
        {
          "name": "reactions",
          "description": "<p>A list of Reactions left on the Issue.</p>",
          "type": "ReactionConnection!",
          "id": "reactionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "content",
              "description": "<p>Allows filtering Reactions by emoji.</p>",
              "type": {
                "name": "ReactionContent",
                "id": "reactioncontent",
                "href": "/graphql/reference/scalar#reactioncontent"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Allows specifying the order in which reactions are returned.</p>",
              "type": {
                "name": "ReactionOrder",
                "id": "reactionorder",
                "href": "/graphql/reference/scalar#reactionorder"
              }
            }
          ]
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this discussion.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "team",
          "description": "<p>The team that defines the context of this discussion.</p>",
          "type": "Team!",
          "id": "team",
          "kind": "objects",
          "href": "/graphql/reference/objects#team"
        },
        {
          "name": "title",
          "description": "<p>The title of the discussion.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this discussion.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userContentEdits",
          "description": "<p>A list of edits to this content.</p>",
          "type": "UserContentEditConnection",
          "id": "usercontenteditconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontenteditconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "viewerCanDelete",
          "description": "<p>Check if the current viewer can delete this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanPin",
          "description": "<p>Whether or not the current viewer can pin this discussion.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanReact",
          "description": "<p>Can user react to this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanSubscribe",
          "description": "<p>Check if the viewer is able to change their subscription status for the repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpdate",
          "description": "<p>Check if the current viewer can update this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCannotUpdateReasons",
          "description": "<p>Reasons why the current viewer can not update this comment.</p>",
          "type": "[CommentCannotUpdateReason!]!",
          "id": "commentcannotupdatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentcannotupdatereason"
        },
        {
          "name": "viewerDidAuthor",
          "description": "<p>Did the viewer author this comment.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerSubscription",
          "description": "<p>Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.</p>",
          "type": "SubscriptionState",
          "id": "subscriptionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#subscriptionstate"
        }
      ]
    },
    {
      "name": "TeamDiscussionComment",
      "kind": "objects",
      "id": "teamdiscussioncomment",
      "href": "/graphql/reference/objects#teamdiscussioncomment",
      "description": "<p>A comment on a team discussion.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Team discussions preview",
        "description": "Adds support for reading and managing discussions within teams.",
        "toggled_by": "echo-preview",
        "toggled_on": [
          "Mutation.createTeamDiscussion",
          "Mutation.createTeamDiscussionComment",
          "Mutation.deleteTeamDiscussion",
          "Mutation.deleteTeamDiscussionComment",
          "Mutation.updateTeamDiscussion",
          "Mutation.updateTeamDiscussionComment",
          "Team.discussion",
          "Team.discussions",
          "Team.discussionsResourcePath",
          "Team.discussionsUrl",
          "TeamDiscussion",
          "TeamDiscussionComment",
          "TeamDiscussionCommentConnection",
          "TeamDiscussionCommentEdge",
          "TeamDiscussionCommentOrder",
          "TeamDiscussionCommentOrderField",
          "TeamDiscussionConnection",
          "TeamDiscussionEdge",
          "TeamDiscussionOrder",
          "TeamDiscussionOrderField"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.echo-preview+json",
        "href": "/graphql/overview/schema-previews#team-discussions-preview"
      },
      "implements": [
        {
          "name": "Comment",
          "id": "comment",
          "href": "/graphql/reference/interfaces#comment"
        },
        {
          "name": "Deletable",
          "id": "deletable",
          "href": "/graphql/reference/interfaces#deletable"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Reactable",
          "id": "reactable",
          "href": "/graphql/reference/interfaces#reactable"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        },
        {
          "name": "Updatable",
          "id": "updatable",
          "href": "/graphql/reference/interfaces#updatable"
        },
        {
          "name": "UpdatableComment",
          "id": "updatablecomment",
          "href": "/graphql/reference/interfaces#updatablecomment"
        }
      ],
      "fields": [
        {
          "name": "author",
          "description": "<p>The actor who authored the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "authorAssociation",
          "description": "<p>Author's association with the comment's team.</p>",
          "type": "CommentAuthorAssociation!",
          "id": "commentauthorassociation",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentauthorassociation"
        },
        {
          "name": "body",
          "description": "<p>The body as Markdown.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>The comment body rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "bodyText",
          "description": "<p>The body rendered to text.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyVersion",
          "description": "<p>The current version of the body content.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdViaEmail",
          "description": "<p>Check if this comment was created via an email reply.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "discussion",
          "description": "<p>The discussion this comment is about.</p>",
          "type": "TeamDiscussion!",
          "id": "teamdiscussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussion"
        },
        {
          "name": "editor",
          "description": "<p>The actor who edited the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "includesCreatedEdit",
          "description": "<p>Check if this comment was edited and includes an edit with the creation data.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "lastEditedAt",
          "description": "<p>The moment the editor made the last edit.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "number",
          "description": "<p>Identifies the comment number.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "publishedAt",
          "description": "<p>Identifies when the comment was published at.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "reactionGroups",
          "description": "<p>A list of reactions grouped by content left on the subject.</p>",
          "type": "[ReactionGroup!]",
          "id": "reactiongroup",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactiongroup"
        },
        {
          "name": "reactions",
          "description": "<p>A list of Reactions left on the Issue.</p>",
          "type": "ReactionConnection!",
          "id": "reactionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "content",
              "description": "<p>Allows filtering Reactions by emoji.</p>",
              "type": {
                "name": "ReactionContent",
                "id": "reactioncontent",
                "href": "/graphql/reference/scalar#reactioncontent"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Allows specifying the order in which reactions are returned.</p>",
              "type": {
                "name": "ReactionOrder",
                "id": "reactionorder",
                "href": "/graphql/reference/scalar#reactionorder"
              }
            }
          ]
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this comment.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this comment.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "userContentEdits",
          "description": "<p>A list of edits to this content.</p>",
          "type": "UserContentEditConnection",
          "id": "usercontenteditconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontenteditconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "viewerCanDelete",
          "description": "<p>Check if the current viewer can delete this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanReact",
          "description": "<p>Can user react to this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanUpdate",
          "description": "<p>Check if the current viewer can update this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCannotUpdateReasons",
          "description": "<p>Reasons why the current viewer can not update this comment.</p>",
          "type": "[CommentCannotUpdateReason!]!",
          "id": "commentcannotupdatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentcannotupdatereason"
        },
        {
          "name": "viewerDidAuthor",
          "description": "<p>Did the viewer author this comment.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "TeamDiscussionCommentConnection",
      "kind": "objects",
      "id": "teamdiscussioncommentconnection",
      "href": "/graphql/reference/objects#teamdiscussioncommentconnection",
      "description": "<p>The connection type for TeamDiscussionComment.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Team discussions preview",
        "description": "Adds support for reading and managing discussions within teams.",
        "toggled_by": "echo-preview",
        "toggled_on": [
          "Mutation.createTeamDiscussion",
          "Mutation.createTeamDiscussionComment",
          "Mutation.deleteTeamDiscussion",
          "Mutation.deleteTeamDiscussionComment",
          "Mutation.updateTeamDiscussion",
          "Mutation.updateTeamDiscussionComment",
          "Team.discussion",
          "Team.discussions",
          "Team.discussionsResourcePath",
          "Team.discussionsUrl",
          "TeamDiscussion",
          "TeamDiscussionComment",
          "TeamDiscussionCommentConnection",
          "TeamDiscussionCommentEdge",
          "TeamDiscussionCommentOrder",
          "TeamDiscussionCommentOrderField",
          "TeamDiscussionConnection",
          "TeamDiscussionEdge",
          "TeamDiscussionOrder",
          "TeamDiscussionOrderField"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.echo-preview+json",
        "href": "/graphql/overview/schema-previews#team-discussions-preview"
      },
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[TeamDiscussionCommentEdge]",
          "id": "teamdiscussioncommentedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussioncommentedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[TeamDiscussionComment]",
          "id": "teamdiscussioncomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussioncomment"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "TeamDiscussionCommentEdge",
      "kind": "objects",
      "id": "teamdiscussioncommentedge",
      "href": "/graphql/reference/objects#teamdiscussioncommentedge",
      "description": "<p>An edge in a connection.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Team discussions preview",
        "description": "Adds support for reading and managing discussions within teams.",
        "toggled_by": "echo-preview",
        "toggled_on": [
          "Mutation.createTeamDiscussion",
          "Mutation.createTeamDiscussionComment",
          "Mutation.deleteTeamDiscussion",
          "Mutation.deleteTeamDiscussionComment",
          "Mutation.updateTeamDiscussion",
          "Mutation.updateTeamDiscussionComment",
          "Team.discussion",
          "Team.discussions",
          "Team.discussionsResourcePath",
          "Team.discussionsUrl",
          "TeamDiscussion",
          "TeamDiscussionComment",
          "TeamDiscussionCommentConnection",
          "TeamDiscussionCommentEdge",
          "TeamDiscussionCommentOrder",
          "TeamDiscussionCommentOrderField",
          "TeamDiscussionConnection",
          "TeamDiscussionEdge",
          "TeamDiscussionOrder",
          "TeamDiscussionOrderField"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.echo-preview+json",
        "href": "/graphql/overview/schema-previews#team-discussions-preview"
      },
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "TeamDiscussionComment",
          "id": "teamdiscussioncomment",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussioncomment"
        }
      ]
    },
    {
      "name": "TeamDiscussionConnection",
      "kind": "objects",
      "id": "teamdiscussionconnection",
      "href": "/graphql/reference/objects#teamdiscussionconnection",
      "description": "<p>The connection type for TeamDiscussion.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Team discussions preview",
        "description": "Adds support for reading and managing discussions within teams.",
        "toggled_by": "echo-preview",
        "toggled_on": [
          "Mutation.createTeamDiscussion",
          "Mutation.createTeamDiscussionComment",
          "Mutation.deleteTeamDiscussion",
          "Mutation.deleteTeamDiscussionComment",
          "Mutation.updateTeamDiscussion",
          "Mutation.updateTeamDiscussionComment",
          "Team.discussion",
          "Team.discussions",
          "Team.discussionsResourcePath",
          "Team.discussionsUrl",
          "TeamDiscussion",
          "TeamDiscussionComment",
          "TeamDiscussionCommentConnection",
          "TeamDiscussionCommentEdge",
          "TeamDiscussionCommentOrder",
          "TeamDiscussionCommentOrderField",
          "TeamDiscussionConnection",
          "TeamDiscussionEdge",
          "TeamDiscussionOrder",
          "TeamDiscussionOrderField"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.echo-preview+json",
        "href": "/graphql/overview/schema-previews#team-discussions-preview"
      },
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[TeamDiscussionEdge]",
          "id": "teamdiscussionedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussionedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[TeamDiscussion]",
          "id": "teamdiscussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussion"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "TeamDiscussionEdge",
      "kind": "objects",
      "id": "teamdiscussionedge",
      "href": "/graphql/reference/objects#teamdiscussionedge",
      "description": "<p>An edge in a connection.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Team discussions preview",
        "description": "Adds support for reading and managing discussions within teams.",
        "toggled_by": "echo-preview",
        "toggled_on": [
          "Mutation.createTeamDiscussion",
          "Mutation.createTeamDiscussionComment",
          "Mutation.deleteTeamDiscussion",
          "Mutation.deleteTeamDiscussionComment",
          "Mutation.updateTeamDiscussion",
          "Mutation.updateTeamDiscussionComment",
          "Team.discussion",
          "Team.discussions",
          "Team.discussionsResourcePath",
          "Team.discussionsUrl",
          "TeamDiscussion",
          "TeamDiscussionComment",
          "TeamDiscussionCommentConnection",
          "TeamDiscussionCommentEdge",
          "TeamDiscussionCommentOrder",
          "TeamDiscussionCommentOrderField",
          "TeamDiscussionConnection",
          "TeamDiscussionEdge",
          "TeamDiscussionOrder",
          "TeamDiscussionOrderField"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.echo-preview+json",
        "href": "/graphql/overview/schema-previews#team-discussions-preview"
      },
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "TeamDiscussion",
          "id": "teamdiscussion",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamdiscussion"
        }
      ]
    },
    {
      "name": "TeamEdge",
      "kind": "objects",
      "id": "teamedge",
      "href": "/graphql/reference/objects#teamedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "Team",
          "id": "team",
          "kind": "objects",
          "href": "/graphql/reference/objects#team"
        }
      ]
    },
    {
      "name": "TeamMemberConnection",
      "kind": "objects",
      "id": "teammemberconnection",
      "href": "/graphql/reference/objects#teammemberconnection",
      "description": "<p>The connection type for User.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[TeamMemberEdge]",
          "id": "teammemberedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#teammemberedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[User]",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "TeamMemberEdge",
      "kind": "objects",
      "id": "teammemberedge",
      "href": "/graphql/reference/objects#teammemberedge",
      "description": "<p>Represents a user who is a member of a team.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "memberAccessResourcePath",
          "description": "<p>The HTTP path to the organization's member access page.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "memberAccessUrl",
          "description": "<p>The HTTP URL to the organization's member access page.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "role",
          "description": "<p>The role the member has on the team.</p>",
          "type": "TeamMemberRole!",
          "id": "teammemberrole",
          "kind": "enums",
          "href": "/graphql/reference/enums#teammemberrole"
        }
      ]
    },
    {
      "name": "TeamRepositoryConnection",
      "kind": "objects",
      "id": "teamrepositoryconnection",
      "href": "/graphql/reference/objects#teamrepositoryconnection",
      "description": "<p>The connection type for Repository.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[TeamRepositoryEdge]",
          "id": "teamrepositoryedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#teamrepositoryedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[Repository]",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "TeamRepositoryEdge",
      "kind": "objects",
      "id": "teamrepositoryedge",
      "href": "/graphql/reference/objects#teamrepositoryedge",
      "description": "<p>Represents a team repository.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "permission",
          "description": "<p>The permission level the team has on the repository.</p>",
          "type": "RepositoryPermission!",
          "id": "repositorypermission",
          "kind": "enums",
          "href": "/graphql/reference/enums#repositorypermission"
        }
      ]
    },
    {
      "name": "TextMatch",
      "kind": "objects",
      "id": "textmatch",
      "href": "/graphql/reference/objects#textmatch",
      "description": "<p>A text match within a search result.</p>",
      "fields": [
        {
          "name": "fragment",
          "description": "<p>The specific text fragment within the property matched on.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "highlights",
          "description": "<p>Highlights within the matched fragment.</p>",
          "type": "[TextMatchHighlight!]!",
          "id": "textmatchhighlight",
          "kind": "objects",
          "href": "/graphql/reference/objects#textmatchhighlight"
        },
        {
          "name": "property",
          "description": "<p>The property matched on.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "TextMatchHighlight",
      "kind": "objects",
      "id": "textmatchhighlight",
      "href": "/graphql/reference/objects#textmatchhighlight",
      "description": "<p>Represents a single highlight in a search result match.</p>",
      "fields": [
        {
          "name": "beginIndice",
          "description": "<p>The indice in the fragment where the matched text begins.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "endIndice",
          "description": "<p>The indice in the fragment where the matched text ends.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "text",
          "description": "<p>The text matched.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "Topic",
      "kind": "objects",
      "id": "topic",
      "href": "/graphql/reference/objects#topic",
      "description": "<p>A topic aggregates entities that are related to a subject.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "Starrable",
          "id": "starrable",
          "href": "/graphql/reference/interfaces#starrable"
        }
      ],
      "fields": [
        {
          "name": "name",
          "description": "<p>The topic's name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "relatedTopics",
          "description": "<p>A list of related topics, including aliases of this topic, sorted with the most relevant\nfirst. Returns up to 10 Topics.</p>",
          "type": "[Topic!]!",
          "id": "topic",
          "kind": "objects",
          "href": "/graphql/reference/objects#topic",
          "arguments": [
            {
              "name": "first",
              "defaultValue": "3",
              "description": "<p>How many topics to return.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "stargazers",
          "description": "<p>A list of users who have starred this starrable.</p>",
          "type": "StargazerConnection!",
          "id": "stargazerconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#stargazerconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Order for connection.</p>",
              "type": {
                "name": "StarOrder",
                "id": "starorder",
                "href": "/graphql/reference/scalar#starorder"
              }
            }
          ]
        },
        {
          "name": "viewerHasStarred",
          "description": "<p>Returns a boolean indicating whether the viewing user has starred this starrable.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "TransferredEvent",
      "kind": "objects",
      "id": "transferredevent",
      "href": "/graphql/reference/objects#transferredevent",
      "description": "<p>Represents a<code>transferred</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "fromRepository",
          "description": "<p>The repository this came from.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "issue",
          "description": "<p>Identifies the issue associated with the event.</p>",
          "type": "Issue!",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue"
        }
      ]
    },
    {
      "name": "Tree",
      "kind": "objects",
      "id": "tree",
      "href": "/graphql/reference/objects#tree",
      "description": "<p>Represents a Git tree.</p>",
      "implements": [
        {
          "name": "GitObject",
          "id": "gitobject",
          "href": "/graphql/reference/interfaces#gitobject"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "abbreviatedOid",
          "description": "<p>An abbreviated version of the Git object ID.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "commitResourcePath",
          "description": "<p>The HTTP path for this Git object.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "commitUrl",
          "description": "<p>The HTTP URL for this Git object.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "entries",
          "description": "<p>A list of tree entries.</p>",
          "type": "[TreeEntry!]",
          "id": "treeentry",
          "kind": "objects",
          "href": "/graphql/reference/objects#treeentry"
        },
        {
          "name": "oid",
          "description": "<p>The Git object ID.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "repository",
          "description": "<p>The Repository the Git object belongs to.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "TreeEntry",
      "kind": "objects",
      "id": "treeentry",
      "href": "/graphql/reference/objects#treeentry",
      "description": "<p>Represents a Git tree entry.</p>",
      "fields": [
        {
          "name": "mode",
          "description": "<p>Entry file mode.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "name",
          "description": "<p>Entry file name.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "object",
          "description": "<p>Entry file object.</p>",
          "type": "GitObject",
          "id": "gitobject",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#gitobject"
        },
        {
          "name": "oid",
          "description": "<p>Entry file Git object ID.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "repository",
          "description": "<p>The Repository the tree entry belongs to.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "type",
          "description": "<p>Entry file type.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "UnassignedEvent",
      "kind": "objects",
      "id": "unassignedevent",
      "href": "/graphql/reference/objects#unassignedevent",
      "description": "<p>Represents an<code>unassigned</code>event on any assignable object.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "assignable",
          "description": "<p>Identifies the assignable associated with the event.</p>",
          "type": "Assignable!",
          "id": "assignable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#assignable"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "user",
          "description": "<p>Identifies the subject (user) who was unassigned.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "UnknownSignature",
      "kind": "objects",
      "id": "unknownsignature",
      "href": "/graphql/reference/objects#unknownsignature",
      "description": "<p>Represents an unknown signature on a Commit or Tag.</p>",
      "implements": [
        {
          "name": "GitSignature",
          "id": "gitsignature",
          "href": "/graphql/reference/interfaces#gitsignature"
        }
      ],
      "fields": [
        {
          "name": "email",
          "description": "<p>Email used to sign this object.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "isValid",
          "description": "<p>True if the signature is valid and verified by GitHub.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "payload",
          "description": "<p>Payload for GPG signing object. Raw ODB object without the signature header.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "signature",
          "description": "<p>ASCII-armored signature header from object.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "signer",
          "description": "<p>GitHub user corresponding to the email signing this commit.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "state",
          "description": "<p>The state of this signature. <code>VALID</code> if signature is valid and verified by\nGitHub, otherwise represents reason why signature is considered invalid.</p>",
          "type": "GitSignatureState!",
          "id": "gitsignaturestate",
          "kind": "enums",
          "href": "/graphql/reference/enums#gitsignaturestate"
        },
        {
          "name": "wasSignedByGitHub",
          "description": "<p>True if the signature was made with GitHub's signing key.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "UnlabeledEvent",
      "kind": "objects",
      "id": "unlabeledevent",
      "href": "/graphql/reference/objects#unlabeledevent",
      "description": "<p>Represents an<code>unlabeled</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "label",
          "description": "<p>Identifies the label associated with the<code>unlabeled</code>event.</p>",
          "type": "Label!",
          "id": "label",
          "kind": "objects",
          "href": "/graphql/reference/objects#label"
        },
        {
          "name": "labelable",
          "description": "<p>Identifies the <code>Labelable</code> associated with the event.</p>",
          "type": "Labelable!",
          "id": "labelable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#labelable"
        }
      ]
    },
    {
      "name": "UnlockedEvent",
      "kind": "objects",
      "id": "unlockedevent",
      "href": "/graphql/reference/objects#unlockedevent",
      "description": "<p>Represents an<code>unlocked</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "lockable",
          "description": "<p>Object that was unlocked.</p>",
          "type": "Lockable!",
          "id": "lockable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#lockable"
        }
      ]
    },
    {
      "name": "UnpinnedEvent",
      "kind": "objects",
      "id": "unpinnedevent",
      "href": "/graphql/reference/objects#unpinnedevent",
      "description": "<p>Represents an<code>unpinned</code>event on a given issue or pull request.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "issue",
          "description": "<p>Identifies the issue associated with the event.</p>",
          "type": "Issue!",
          "id": "issue",
          "kind": "objects",
          "href": "/graphql/reference/objects#issue"
        }
      ]
    },
    {
      "name": "UnsubscribedEvent",
      "kind": "objects",
      "id": "unsubscribedevent",
      "href": "/graphql/reference/objects#unsubscribedevent",
      "description": "<p>Represents an<code>unsubscribed</code>event on a given <code>Subscribable</code>.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "subscribable",
          "description": "<p>Object referenced by event.</p>",
          "type": "Subscribable!",
          "id": "subscribable",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#subscribable"
        }
      ]
    },
    {
      "name": "User",
      "kind": "objects",
      "id": "user",
      "href": "/graphql/reference/objects#user",
      "description": "<p>A user is an individual's account on GitHub that owns repositories and can make new content.</p>",
      "implements": [
        {
          "name": "Actor",
          "id": "actor",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        },
        {
          "name": "ProfileOwner",
          "id": "profileowner",
          "href": "/graphql/reference/interfaces#profileowner"
        },
        {
          "name": "ProjectOwner",
          "id": "projectowner",
          "href": "/graphql/reference/interfaces#projectowner"
        },
        {
          "name": "RegistryPackageOwner",
          "id": "registrypackageowner",
          "href": "/graphql/reference/interfaces#registrypackageowner"
        },
        {
          "name": "RegistryPackageSearch",
          "id": "registrypackagesearch",
          "href": "/graphql/reference/interfaces#registrypackagesearch"
        },
        {
          "name": "RepositoryOwner",
          "id": "repositoryowner",
          "href": "/graphql/reference/interfaces#repositoryowner"
        },
        {
          "name": "UniformResourceLocatable",
          "id": "uniformresourcelocatable",
          "href": "/graphql/reference/interfaces#uniformresourcelocatable"
        }
      ],
      "fields": [
        {
          "name": "anyPinnableItems",
          "description": "<p>Determine if this repository owner has any items that can be pinned to their profile.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean",
          "arguments": [
            {
              "name": "type",
              "description": "<p>Filter to only a particular kind of pinnable item.</p>",
              "type": {
                "name": "PinnableItemType",
                "id": "pinnableitemtype",
                "href": "/graphql/reference/scalar#pinnableitemtype"
              }
            }
          ]
        },
        {
          "name": "avatarUrl",
          "description": "<p>A URL pointing to the user's public avatar.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri",
          "arguments": [
            {
              "name": "size",
              "description": "<p>The size of the resulting square image.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "bio",
          "description": "<p>The user's public profile bio.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bioHTML",
          "description": "<p>The user's public profile bio as HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "commitComments",
          "description": "<p>A list of commit comments made by this user.</p>",
          "type": "CommitCommentConnection!",
          "id": "commitcommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#commitcommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "company",
          "description": "<p>The user's public profile company.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "companyHTML",
          "description": "<p>The user's public profile company as HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "contributionsCollection",
          "description": "<p>The collection of contributions this user has made to different repositories.</p>",
          "type": "ContributionsCollection!",
          "id": "contributionscollection",
          "kind": "objects",
          "href": "/graphql/reference/objects#contributionscollection",
          "arguments": [
            {
              "name": "from",
              "description": "<p>Only contributions made at this time or later will be counted. If omitted, defaults to a year ago.</p>",
              "type": {
                "name": "DateTime",
                "id": "datetime",
                "href": "/graphql/reference/scalar#datetime"
              }
            },
            {
              "name": "organizationID",
              "description": "<p>The ID of the organization used to filter contributions.</p>",
              "type": {
                "name": "ID",
                "id": "id",
                "href": "/graphql/reference/scalar#id"
              }
            },
            {
              "name": "to",
              "description": "<p>Only contributions made before and up to and including this time will be\ncounted. If omitted, defaults to the current time.</p>",
              "type": {
                "name": "DateTime",
                "id": "datetime",
                "href": "/graphql/reference/scalar#datetime"
              }
            }
          ]
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "email",
          "description": "<p>The user's publicly visible profile email.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "followers",
          "description": "<p>A list of users the given user is followed by.</p>",
          "type": "FollowerConnection!",
          "id": "followerconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#followerconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "following",
          "description": "<p>A list of users the given user is following.</p>",
          "type": "FollowingConnection!",
          "id": "followingconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#followingconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "gist",
          "description": "<p>Find gist by repo name.</p>",
          "type": "Gist",
          "id": "gist",
          "kind": "objects",
          "href": "/graphql/reference/objects#gist",
          "arguments": [
            {
              "name": "name",
              "description": "<p>The gist name to find.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            }
          ]
        },
        {
          "name": "gistComments",
          "description": "<p>A list of gist comments made by this user.</p>",
          "type": "GistCommentConnection!",
          "id": "gistcommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#gistcommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "gists",
          "description": "<p>A list of the Gists the user has created.</p>",
          "type": "GistConnection!",
          "id": "gistconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#gistconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for gists returned from the connection.</p>",
              "type": {
                "name": "GistOrder",
                "id": "gistorder",
                "href": "/graphql/reference/scalar#gistorder"
              }
            },
            {
              "name": "privacy",
              "description": "<p>Filters Gists according to privacy.</p>",
              "type": {
                "name": "GistPrivacy",
                "id": "gistprivacy",
                "href": "/graphql/reference/scalar#gistprivacy"
              }
            }
          ]
        },
        {
          "name": "hovercard",
          "description": "<p>The hovercard information for this user in a given context.</p>",
          "type": "Hovercard!",
          "id": "hovercard",
          "kind": "objects",
          "href": "/graphql/reference/objects#hovercard",
          "arguments": [
            {
              "name": "primarySubjectId",
              "description": "<p>The ID of the subject to get the hovercard in the context of.</p>",
              "type": {
                "name": "ID",
                "id": "id",
                "href": "/graphql/reference/scalar#id"
              }
            }
          ],
          "isDeprecated": false,
          "preview": {
            "title": "Hovercards preview",
            "description": "This preview adds support for reading hovercard contextual data",
            "toggled_by": "hagar-preview",
            "toggled_on": [
              "Issue.hovercard",
              "PullRequest.hovercard",
              "User.hovercard",
              "HovercardContext",
              "GenericHovercardContext",
              "Hovercard",
              "OrganizationTeamsHovercardContext",
              "OrganizationsHovercardContext",
              "ReviewStatusHovercardContext",
              "ViewerHovercardContext"
            ],
            "owning_teams": [
              "@github/identity"
            ],
            "accept_header": "application/vnd.github.hagar-preview+json",
            "href": "/graphql/overview/schema-previews#hovercards-preview"
          }
        },
        {
          "name": "isBountyHunter",
          "description": "<p>Whether or not this user is a participant in the GitHub Security Bug Bounty.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isCampusExpert",
          "description": "<p>Whether or not this user is a participant in the GitHub Campus Experts Program.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isDeveloperProgramMember",
          "description": "<p>Whether or not this user is a GitHub Developer Program member.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isEmployee",
          "description": "<p>Whether or not this user is a GitHub employee.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isHireable",
          "description": "<p>Whether or not the user has marked themselves as for hire.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isSiteAdmin",
          "description": "<p>Whether or not this user is a site administrator.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isViewer",
          "description": "<p>Whether or not this user is the viewing user.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "issueComments",
          "description": "<p>A list of issue comments made by this user.</p>",
          "type": "IssueCommentConnection!",
          "id": "issuecommentconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#issuecommentconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "issues",
          "description": "<p>A list of issues associated with this user.</p>",
          "type": "IssueConnection!",
          "id": "issueconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#issueconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "filterBy",
              "description": "<p>Filtering options for issues returned from the connection.</p>",
              "type": {
                "name": "IssueFilters",
                "id": "issuefilters",
                "href": "/graphql/reference/scalar#issuefilters"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "labels",
              "description": "<p>A list of label names to filter the pull requests by.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for issues returned from the connection.</p>",
              "type": {
                "name": "IssueOrder",
                "id": "issueorder",
                "href": "/graphql/reference/scalar#issueorder"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the issues by.</p>",
              "type": {
                "name": "[IssueState!]",
                "id": "issuestate",
                "href": "/graphql/reference/scalar#issuestate"
              }
            }
          ]
        },
        {
          "name": "itemShowcase",
          "description": "<p>Showcases a selection of repositories and gists that the profile owner has\neither curated or that have been selected automatically based on popularity.</p>",
          "type": "ProfileItemShowcase!",
          "id": "profileitemshowcase",
          "kind": "objects",
          "href": "/graphql/reference/objects#profileitemshowcase"
        },
        {
          "name": "location",
          "description": "<p>The user's public profile location.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "login",
          "description": "<p>The username used to login.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The user's public profile name.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organization",
          "description": "<p>Find an organization by its login that the user belongs to.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization",
          "arguments": [
            {
              "name": "login",
              "description": "<p>The login of the organization to find.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            }
          ]
        },
        {
          "name": "organizations",
          "description": "<p>A list of organizations the user belongs to.</p>",
          "type": "OrganizationConnection!",
          "id": "organizationconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#organizationconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "pinnableItems",
          "description": "<p>A list of repositories and gists this profile owner can pin to their profile.</p>",
          "type": "PinnableItemConnection!",
          "id": "pinnableitemconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinnableitemconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "types",
              "description": "<p>Filter the types of pinnable items that are returned.</p>",
              "type": {
                "name": "[PinnableItemType!]",
                "id": "pinnableitemtype",
                "href": "/graphql/reference/scalar#pinnableitemtype"
              }
            }
          ]
        },
        {
          "name": "pinnedItems",
          "description": "<p>A list of repositories and gists this profile owner has pinned to their profile.</p>",
          "type": "PinnableItemConnection!",
          "id": "pinnableitemconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinnableitemconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "types",
              "description": "<p>Filter the types of pinned items that are returned.</p>",
              "type": {
                "name": "[PinnableItemType!]",
                "id": "pinnableitemtype",
                "href": "/graphql/reference/scalar#pinnableitemtype"
              }
            }
          ]
        },
        {
          "name": "pinnedItemsRemaining",
          "description": "<p>Returns how many more items this profile owner can pin to their profile.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "pinnedRepositories",
          "description": "<p>A list of repositories this user has pinned to their profile.</p>",
          "type": "RepositoryConnection!",
          "id": "repositoryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryconnection",
          "arguments": [
            {
              "name": "affiliations",
              "description": "<p>Array of viewer's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\ncurrent viewer owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "href": "/graphql/reference/scalar#repositoryaffiliation"
              }
            },
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "isLocked",
              "description": "<p>If non-null, filters repositories according to whether they have been locked.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for repositories returned from the connection.</p>",
              "type": {
                "name": "RepositoryOrder",
                "id": "repositoryorder",
                "href": "/graphql/reference/scalar#repositoryorder"
              }
            },
            {
              "name": "ownerAffiliations",
              "description": "<p>Array of owner's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\norganization or user being viewed owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "href": "/graphql/reference/scalar#repositoryaffiliation"
              }
            },
            {
              "name": "privacy",
              "description": "<p>If non-null, filters repositories according to privacy.</p>",
              "type": {
                "name": "RepositoryPrivacy",
                "id": "repositoryprivacy",
                "href": "/graphql/reference/scalar#repositoryprivacy"
              }
            }
          ],
          "isDeprecated": true,
          "deprecationReason": "<p>pinnedRepositories will be removed Use ProfileOwner.pinnedItems instead. Removal on 2019-07-01 UTC.</p>"
        },
        {
          "name": "project",
          "description": "<p>Find project by number.</p>",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The project number to find.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "projects",
          "description": "<p>A list of projects under the owner.</p>",
          "type": "ProjectConnection!",
          "id": "projectconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for projects returned from the connection.</p>",
              "type": {
                "name": "ProjectOrder",
                "id": "projectorder",
                "href": "/graphql/reference/scalar#projectorder"
              }
            },
            {
              "name": "search",
              "description": "<p>Query to search projects by, currently only searching by name.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the projects by.</p>",
              "type": {
                "name": "[ProjectState!]",
                "id": "projectstate",
                "href": "/graphql/reference/scalar#projectstate"
              }
            }
          ]
        },
        {
          "name": "projectsResourcePath",
          "description": "<p>The HTTP path listing user's projects.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "projectsUrl",
          "description": "<p>The HTTP URL listing user's projects.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "publicKeys",
          "description": "<p>A list of public keys associated with this user.</p>",
          "type": "PublicKeyConnection!",
          "id": "publickeyconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#publickeyconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "pullRequests",
          "description": "<p>A list of pull requests associated with this user.</p>",
          "type": "PullRequestConnection!",
          "id": "pullrequestconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pullrequestconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "baseRefName",
              "description": "<p>The base ref name to filter the pull requests by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "headRefName",
              "description": "<p>The head ref name to filter the pull requests by.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "labels",
              "description": "<p>A list of label names to filter the pull requests by.</p>",
              "type": {
                "name": "[String!]",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for pull requests returned from the connection.</p>",
              "type": {
                "name": "IssueOrder",
                "id": "issueorder",
                "href": "/graphql/reference/scalar#issueorder"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the pull requests by.</p>",
              "type": {
                "name": "[PullRequestState!]",
                "id": "pullrequeststate",
                "href": "/graphql/reference/scalar#pullrequeststate"
              }
            }
          ]
        },
        {
          "name": "repositories",
          "description": "<p>A list of repositories that the user owns.</p>",
          "type": "RepositoryConnection!",
          "id": "repositoryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryconnection",
          "arguments": [
            {
              "name": "affiliations",
              "description": "<p>Array of viewer's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\ncurrent viewer owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "href": "/graphql/reference/scalar#repositoryaffiliation"
              }
            },
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "isFork",
              "description": "<p>If non-null, filters repositories according to whether they are forks of another repository.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "isLocked",
              "description": "<p>If non-null, filters repositories according to whether they have been locked.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for repositories returned from the connection.</p>",
              "type": {
                "name": "RepositoryOrder",
                "id": "repositoryorder",
                "href": "/graphql/reference/scalar#repositoryorder"
              }
            },
            {
              "name": "ownerAffiliations",
              "description": "<p>Array of owner's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\norganization or user being viewed owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "href": "/graphql/reference/scalar#repositoryaffiliation"
              }
            },
            {
              "name": "privacy",
              "description": "<p>If non-null, filters repositories according to privacy.</p>",
              "type": {
                "name": "RepositoryPrivacy",
                "id": "repositoryprivacy",
                "href": "/graphql/reference/scalar#repositoryprivacy"
              }
            }
          ]
        },
        {
          "name": "repositoriesContributedTo",
          "description": "<p>A list of repositories that the user recently contributed to.</p>",
          "type": "RepositoryConnection!",
          "id": "repositoryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "contributionTypes",
              "description": "<p>If non-null, include only the specified types of contributions. The\nGitHub.com UI uses [COMMIT, ISSUE, PULL_REQUEST, REPOSITORY].</p>",
              "type": {
                "name": "[RepositoryContributionType]",
                "id": "repositorycontributiontype",
                "href": "/graphql/reference/scalar#repositorycontributiontype"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "includeUserRepositories",
              "description": "<p>If true, include user repositories.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "isLocked",
              "description": "<p>If non-null, filters repositories according to whether they have been locked.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for repositories returned from the connection.</p>",
              "type": {
                "name": "RepositoryOrder",
                "id": "repositoryorder",
                "href": "/graphql/reference/scalar#repositoryorder"
              }
            },
            {
              "name": "privacy",
              "description": "<p>If non-null, filters repositories according to privacy.</p>",
              "type": {
                "name": "RepositoryPrivacy",
                "id": "repositoryprivacy",
                "href": "/graphql/reference/scalar#repositoryprivacy"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>Find Repository.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository",
          "arguments": [
            {
              "name": "name",
              "description": "<p>Name of Repository to find.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            }
          ]
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this user.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "starredRepositories",
          "description": "<p>Repositories the user has starred.</p>",
          "type": "StarredRepositoryConnection!",
          "id": "starredrepositoryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#starredrepositoryconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Order for connection.</p>",
              "type": {
                "name": "StarOrder",
                "id": "starorder",
                "href": "/graphql/reference/scalar#starorder"
              }
            },
            {
              "name": "ownedByViewer",
              "description": "<p>Filters starred repositories to only return repositories owned by the viewer.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            }
          ]
        },
        {
          "name": "status",
          "description": "<p>The user's description of what they're currently doing.</p>",
          "type": "UserStatus",
          "id": "userstatus",
          "kind": "objects",
          "href": "/graphql/reference/objects#userstatus"
        },
        {
          "name": "suspendedAt",
          "description": "<p>Identifies the date and time when the user was suspended.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this user.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "viewerCanChangePinnedItems",
          "description": "<p>Can the viewer pin repositories and gists to the profile?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanCreateProjects",
          "description": "<p>Can the current viewer create new projects on this owner.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerCanFollow",
          "description": "<p>Whether or not the viewer is able to follow the user.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerIsFollowing",
          "description": "<p>Whether or not this user is followed by the viewer.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "watching",
          "description": "<p>A list of repositories the given user is watching.</p>",
          "type": "RepositoryConnection!",
          "id": "repositoryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryconnection",
          "arguments": [
            {
              "name": "affiliations",
              "description": "<p>Affiliation options for repositories returned from the connection.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "href": "/graphql/reference/scalar#repositoryaffiliation"
              }
            },
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "isLocked",
              "description": "<p>If non-null, filters repositories according to whether they have been locked.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for repositories returned from the connection.</p>",
              "type": {
                "name": "RepositoryOrder",
                "id": "repositoryorder",
                "href": "/graphql/reference/scalar#repositoryorder"
              }
            },
            {
              "name": "ownerAffiliations",
              "description": "<p>Array of owner's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\norganization or user being viewed owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "href": "/graphql/reference/scalar#repositoryaffiliation"
              }
            },
            {
              "name": "privacy",
              "description": "<p>If non-null, filters repositories according to privacy.</p>",
              "type": {
                "name": "RepositoryPrivacy",
                "id": "repositoryprivacy",
                "href": "/graphql/reference/scalar#repositoryprivacy"
              }
            }
          ]
        },
        {
          "name": "websiteUrl",
          "description": "<p>A URL pointing to the user's public website/blog.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "UserBlockedEvent",
      "kind": "objects",
      "id": "userblockedevent",
      "href": "/graphql/reference/objects#userblockedevent",
      "description": "<p>Represents a<code>user_blocked</code>event on a given user.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "actor",
          "description": "<p>Identifies the actor who performed the event.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "blockDuration",
          "description": "<p>Number of days that the user was blocked for.</p>",
          "type": "UserBlockDuration!",
          "id": "userblockduration",
          "kind": "enums",
          "href": "/graphql/reference/enums#userblockduration"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "subject",
          "description": "<p>The user who was blocked.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "UserConnection",
      "kind": "objects",
      "id": "userconnection",
      "href": "/graphql/reference/objects#userconnection",
      "description": "<p>The connection type for User.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[UserEdge]",
          "id": "useredge",
          "kind": "objects",
          "href": "/graphql/reference/objects#useredge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[User]",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "UserContentEdit",
      "kind": "objects",
      "id": "usercontentedit",
      "href": "/graphql/reference/objects#usercontentedit",
      "description": "<p>An edit on user content.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "deletedAt",
          "description": "<p>Identifies the date and time when the object was deleted.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "deletedBy",
          "description": "<p>The actor who deleted this content.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "diff",
          "description": "<p>A summary of the changes for this edit.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "editedAt",
          "description": "<p>When this content was edited.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "editor",
          "description": "<p>The actor who edited this content.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "UserContentEditConnection",
      "kind": "objects",
      "id": "usercontenteditconnection",
      "href": "/graphql/reference/objects#usercontenteditconnection",
      "description": "<p>A list of edits to content.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[UserContentEditEdge]",
          "id": "usercontenteditedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontenteditedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[UserContentEdit]",
          "id": "usercontentedit",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontentedit"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "UserContentEditEdge",
      "kind": "objects",
      "id": "usercontenteditedge",
      "href": "/graphql/reference/objects#usercontenteditedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "UserContentEdit",
          "id": "usercontentedit",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontentedit"
        }
      ]
    },
    {
      "name": "UserEdge",
      "kind": "objects",
      "id": "useredge",
      "href": "/graphql/reference/objects#useredge",
      "description": "<p>Represents a user.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "UserStatus",
      "kind": "objects",
      "id": "userstatus",
      "href": "/graphql/reference/objects#userstatus",
      "description": "<p>The user's description of what they're currently doing.</p>",
      "implements": [
        {
          "name": "Node",
          "id": "node",
          "href": "/graphql/reference/interfaces#node"
        }
      ],
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "emoji",
          "description": "<p>An emoji summarizing the user's status.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>ID of the object.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "indicatesLimitedAvailability",
          "description": "<p>Whether this status indicates the user is not fully available on GitHub.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "message",
          "description": "<p>A brief message describing what the user is doing.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organization",
          "description": "<p>The organization whose members can see this status. If null, this status is publicly visible.</p>",
          "type": "Organization",
          "id": "organization",
          "kind": "objects",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "user",
          "description": "<p>The user who has this status.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "UserStatusConnection",
      "kind": "objects",
      "id": "userstatusconnection",
      "href": "/graphql/reference/objects#userstatusconnection",
      "description": "<p>The connection type for UserStatus.</p>",
      "fields": [
        {
          "name": "edges",
          "description": "<p>A list of edges.</p>",
          "type": "[UserStatusEdge]",
          "id": "userstatusedge",
          "kind": "objects",
          "href": "/graphql/reference/objects#userstatusedge"
        },
        {
          "name": "nodes",
          "description": "<p>A list of nodes.</p>",
          "type": "[UserStatus]",
          "id": "userstatus",
          "kind": "objects",
          "href": "/graphql/reference/objects#userstatus"
        },
        {
          "name": "pageInfo",
          "description": "<p>Information to aid in pagination.</p>",
          "type": "PageInfo!",
          "id": "pageinfo",
          "kind": "objects",
          "href": "/graphql/reference/objects#pageinfo"
        },
        {
          "name": "totalCount",
          "description": "<p>Identifies the total count of items in the connection.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "UserStatusEdge",
      "kind": "objects",
      "id": "userstatusedge",
      "href": "/graphql/reference/objects#userstatusedge",
      "description": "<p>An edge in a connection.</p>",
      "fields": [
        {
          "name": "cursor",
          "description": "<p>A cursor for use in pagination.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "node",
          "description": "<p>The item at the end of the edge.</p>",
          "type": "UserStatus",
          "id": "userstatus",
          "kind": "objects",
          "href": "/graphql/reference/objects#userstatus"
        }
      ]
    },
    {
      "name": "ViewerHovercardContext",
      "kind": "objects",
      "id": "viewerhovercardcontext",
      "href": "/graphql/reference/objects#viewerhovercardcontext",
      "description": "<p>A hovercard context with a message describing how the viewer is related.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Hovercards preview",
        "description": "This preview adds support for reading hovercard contextual data",
        "toggled_by": "hagar-preview",
        "toggled_on": [
          "Issue.hovercard",
          "PullRequest.hovercard",
          "User.hovercard",
          "HovercardContext",
          "GenericHovercardContext",
          "Hovercard",
          "OrganizationTeamsHovercardContext",
          "OrganizationsHovercardContext",
          "ReviewStatusHovercardContext",
          "ViewerHovercardContext"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.hagar-preview+json",
        "href": "/graphql/overview/schema-previews#hovercards-preview"
      },
      "implements": [
        {
          "name": "HovercardContext",
          "id": "hovercardcontext",
          "href": "/graphql/reference/interfaces#hovercardcontext"
        }
      ],
      "fields": [
        {
          "name": "message",
          "description": "<p>A string describing this context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "octicon",
          "description": "<p>An octicon to accompany this context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "viewer",
          "description": "<p>Identifies the user who is related to this context.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    }
  ],
  "interfaces": [
    {
      "name": "Actor",
      "kind": "interfaces",
      "id": "actor",
      "href": "/graphql/reference/interfaces#actor",
      "description": "<p>Represents an object which can take actions on GitHub. Typically a User or Bot.</p>",
      "fields": [
        {
          "name": "avatarUrl",
          "description": "<p>A URL pointing to the actor's public avatar.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri",
          "arguments": [
            {
              "name": "size",
              "description": "<p>The size of the resulting square image.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "login",
          "description": "<p>The username of the actor.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this actor.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this actor.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "Assignable",
      "kind": "interfaces",
      "id": "assignable",
      "href": "/graphql/reference/interfaces#assignable",
      "description": "<p>An object that can have users assigned to it.</p>",
      "fields": [
        {
          "name": "assignees",
          "description": "<p>A list of Users assigned to this object.</p>",
          "type": "UserConnection!",
          "id": "userconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Closable",
      "kind": "interfaces",
      "id": "closable",
      "href": "/graphql/reference/interfaces#closable",
      "description": "<p>An object that can be closed.</p>",
      "fields": [
        {
          "name": "closed",
          "description": "<p><code>true</code> if the object is closed (definition of closed may depend on type).</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "closedAt",
          "description": "<p>Identifies the date and time when the object was closed.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        }
      ]
    },
    {
      "name": "Comment",
      "kind": "interfaces",
      "id": "comment",
      "href": "/graphql/reference/interfaces#comment",
      "description": "<p>Represents a comment.</p>",
      "fields": [
        {
          "name": "author",
          "description": "<p>The actor who authored the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "authorAssociation",
          "description": "<p>Author's association with the subject of the comment.</p>",
          "type": "CommentAuthorAssociation!",
          "id": "commentauthorassociation",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentauthorassociation"
        },
        {
          "name": "body",
          "description": "<p>The body as Markdown.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyHTML",
          "description": "<p>The body rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "bodyText",
          "description": "<p>The body rendered to text.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "createdViaEmail",
          "description": "<p>Check if this comment was created via an email reply.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "editor",
          "description": "<p>The actor who edited the comment.</p>",
          "type": "Actor",
          "id": "actor",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#actor"
        },
        {
          "name": "includesCreatedEdit",
          "description": "<p>Check if this comment was edited and includes an edit with the creation data.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "lastEditedAt",
          "description": "<p>The moment the editor made the last edit.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "publishedAt",
          "description": "<p>Identifies when the comment was published at.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "userContentEdits",
          "description": "<p>A list of edits to this content.</p>",
          "type": "UserContentEditConnection",
          "id": "usercontenteditconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#usercontenteditconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "viewerDidAuthor",
          "description": "<p>Did the viewer author this comment.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "Contribution",
      "kind": "interfaces",
      "id": "contribution",
      "href": "/graphql/reference/interfaces#contribution",
      "description": "<p>Represents a contribution a user made on GitHub, such as opening an issue.</p>",
      "fields": [
        {
          "name": "isRestricted",
          "description": "<p>Whether this contribution is associated with a record you do not have access to. For\nexample, your own 'first issue' contribution may have been made on a repository you can no\nlonger access.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "occurredAt",
          "description": "<p>When this contribution was made.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this contribution.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "user",
          "description": "<p>The user who made this contribution.</p>",
          "type": "User!",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "Deletable",
      "kind": "interfaces",
      "id": "deletable",
      "href": "/graphql/reference/interfaces#deletable",
      "description": "<p>Entities that can be deleted.</p>",
      "fields": [
        {
          "name": "viewerCanDelete",
          "description": "<p>Check if the current viewer can delete this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "GitObject",
      "kind": "interfaces",
      "id": "gitobject",
      "href": "/graphql/reference/interfaces#gitobject",
      "description": "<p>Represents a Git object.</p>",
      "fields": [
        {
          "name": "abbreviatedOid",
          "description": "<p>An abbreviated version of the Git object ID.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "commitResourcePath",
          "description": "<p>The HTTP path for this Git object.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "commitUrl",
          "description": "<p>The HTTP URL for this Git object.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "oid",
          "description": "<p>The Git object ID.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "repository",
          "description": "<p>The Repository the Git object belongs to.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "GitSignature",
      "kind": "interfaces",
      "id": "gitsignature",
      "href": "/graphql/reference/interfaces#gitsignature",
      "description": "<p>Information about a signature (GPG or S/MIME) on a Commit or Tag.</p>",
      "fields": [
        {
          "name": "email",
          "description": "<p>Email used to sign this object.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "isValid",
          "description": "<p>True if the signature is valid and verified by GitHub.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "payload",
          "description": "<p>Payload for GPG signing object. Raw ODB object without the signature header.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "signature",
          "description": "<p>ASCII-armored signature header from object.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "signer",
          "description": "<p>GitHub user corresponding to the email signing this commit.</p>",
          "type": "User",
          "id": "user",
          "kind": "objects",
          "href": "/graphql/reference/objects#user"
        },
        {
          "name": "state",
          "description": "<p>The state of this signature. <code>VALID</code> if signature is valid and verified by\nGitHub, otherwise represents reason why signature is considered invalid.</p>",
          "type": "GitSignatureState!",
          "id": "gitsignaturestate",
          "kind": "enums",
          "href": "/graphql/reference/enums#gitsignaturestate"
        },
        {
          "name": "wasSignedByGitHub",
          "description": "<p>True if the signature was made with GitHub's signing key.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "HovercardContext",
      "kind": "interfaces",
      "id": "hovercardcontext",
      "href": "/graphql/reference/interfaces#hovercardcontext",
      "description": "<p>An individual line of a hovercard.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Hovercards preview",
        "description": "This preview adds support for reading hovercard contextual data",
        "toggled_by": "hagar-preview",
        "toggled_on": [
          "Issue.hovercard",
          "PullRequest.hovercard",
          "User.hovercard",
          "HovercardContext",
          "GenericHovercardContext",
          "Hovercard",
          "OrganizationTeamsHovercardContext",
          "OrganizationsHovercardContext",
          "ReviewStatusHovercardContext",
          "ViewerHovercardContext"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.hagar-preview+json",
        "href": "/graphql/overview/schema-previews#hovercards-preview"
      },
      "fields": [
        {
          "name": "message",
          "description": "<p>A string describing this context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "octicon",
          "description": "<p>An octicon to accompany this context.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "Labelable",
      "kind": "interfaces",
      "id": "labelable",
      "href": "/graphql/reference/interfaces#labelable",
      "description": "<p>An object that can have labels assigned to it.</p>",
      "fields": [
        {
          "name": "labels",
          "description": "<p>A list of labels associated with the object.</p>",
          "type": "LabelConnection",
          "id": "labelconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#labelconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Lockable",
      "kind": "interfaces",
      "id": "lockable",
      "href": "/graphql/reference/interfaces#lockable",
      "description": "<p>An object that can be locked.</p>",
      "fields": [
        {
          "name": "activeLockReason",
          "description": "<p>Reason that the conversation was locked.</p>",
          "type": "LockReason",
          "id": "lockreason",
          "kind": "enums",
          "href": "/graphql/reference/enums#lockreason"
        },
        {
          "name": "locked",
          "description": "<p><code>true</code> if the object is locked.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "MemberStatusable",
      "kind": "interfaces",
      "id": "memberstatusable",
      "href": "/graphql/reference/interfaces#memberstatusable",
      "description": "<p>Entities that have members who can set status messages.</p>",
      "fields": [
        {
          "name": "memberStatuses",
          "description": "<p>Get the status messages members of this entity have set that are either public or visible only to the organization.</p>",
          "type": "UserStatusConnection!",
          "id": "userstatusconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#userstatusconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for user statuses returned from the connection.</p>",
              "type": {
                "name": "UserStatusOrder",
                "id": "userstatusorder",
                "href": "/graphql/reference/scalar#userstatusorder"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Minimizable",
      "kind": "interfaces",
      "id": "minimizable",
      "href": "/graphql/reference/interfaces#minimizable",
      "description": "<p>Entities that can be minimized.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Minimize comments preview",
        "description": "This preview adds support for minimizing comments on issues, pull requests, commits, and gists.",
        "toggled_by": "queen-beryl-preview",
        "toggled_on": [
          "Mutation.minimizeComment",
          "Mutation.unminimizeComment",
          "Minimizable"
        ],
        "owning_teams": [
          "@github/pe-community-and-safety"
        ],
        "accept_header": "application/vnd.github.queen-beryl-preview+json",
        "href": "/graphql/overview/schema-previews#minimize-comments-preview"
      },
      "fields": [
        {
          "name": "isMinimized",
          "description": "<p>Returns whether or not a comment has been minimized.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "minimizedReason",
          "description": "<p>Returns why the comment was minimized.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "viewerCanMinimize",
          "description": "<p>Check if the current viewer can minimize this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "Node",
      "kind": "interfaces",
      "id": "node",
      "href": "/graphql/reference/interfaces#node",
      "description": "<p>An object with an ID.</p>",
      "fields": [
        {
          "name": "id",
          "description": "<p>ID of the object.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        }
      ]
    },
    {
      "name": "ProfileOwner",
      "kind": "interfaces",
      "id": "profileowner",
      "href": "/graphql/reference/interfaces#profileowner",
      "description": "<p>Represents any entity on GitHub that has a profile page.</p>",
      "fields": [
        {
          "name": "anyPinnableItems",
          "description": "<p>Determine if this repository owner has any items that can be pinned to their profile.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean",
          "arguments": [
            {
              "name": "type",
              "description": "<p>Filter to only a particular kind of pinnable item.</p>",
              "type": {
                "name": "PinnableItemType",
                "id": "pinnableitemtype",
                "href": "/graphql/reference/scalar#pinnableitemtype"
              }
            }
          ]
        },
        {
          "name": "email",
          "description": "<p>The public profile email.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "itemShowcase",
          "description": "<p>Showcases a selection of repositories and gists that the profile owner has\neither curated or that have been selected automatically based on popularity.</p>",
          "type": "ProfileItemShowcase!",
          "id": "profileitemshowcase",
          "kind": "objects",
          "href": "/graphql/reference/objects#profileitemshowcase"
        },
        {
          "name": "location",
          "description": "<p>The public profile location.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "login",
          "description": "<p>The username used to login.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The public profile name.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pinnableItems",
          "description": "<p>A list of repositories and gists this profile owner can pin to their profile.</p>",
          "type": "PinnableItemConnection!",
          "id": "pinnableitemconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinnableitemconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "types",
              "description": "<p>Filter the types of pinnable items that are returned.</p>",
              "type": {
                "name": "[PinnableItemType!]",
                "id": "pinnableitemtype",
                "href": "/graphql/reference/scalar#pinnableitemtype"
              }
            }
          ]
        },
        {
          "name": "pinnedItems",
          "description": "<p>A list of repositories and gists this profile owner has pinned to their profile.</p>",
          "type": "PinnableItemConnection!",
          "id": "pinnableitemconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#pinnableitemconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "types",
              "description": "<p>Filter the types of pinned items that are returned.</p>",
              "type": {
                "name": "[PinnableItemType!]",
                "id": "pinnableitemtype",
                "href": "/graphql/reference/scalar#pinnableitemtype"
              }
            }
          ]
        },
        {
          "name": "pinnedItemsRemaining",
          "description": "<p>Returns how many more items this profile owner can pin to their profile.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "viewerCanChangePinnedItems",
          "description": "<p>Can the viewer pin repositories and gists to the profile?.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "websiteUrl",
          "description": "<p>The public profile website URL.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "ProjectOwner",
      "kind": "interfaces",
      "id": "projectowner",
      "href": "/graphql/reference/interfaces#projectowner",
      "description": "<p>Represents an owner of a Project.</p>",
      "fields": [
        {
          "name": "project",
          "description": "<p>Find project by number.</p>",
          "type": "Project",
          "id": "project",
          "kind": "objects",
          "href": "/graphql/reference/objects#project",
          "arguments": [
            {
              "name": "number",
              "description": "<p>The project number to find.</p>",
              "type": {
                "name": "Int!",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "projects",
          "description": "<p>A list of projects under the owner.</p>",
          "type": "ProjectConnection!",
          "id": "projectconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#projectconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for projects returned from the connection.</p>",
              "type": {
                "name": "ProjectOrder",
                "id": "projectorder",
                "href": "/graphql/reference/scalar#projectorder"
              }
            },
            {
              "name": "search",
              "description": "<p>Query to search projects by, currently only searching by name.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "states",
              "description": "<p>A list of states to filter the projects by.</p>",
              "type": {
                "name": "[ProjectState!]",
                "id": "projectstate",
                "href": "/graphql/reference/scalar#projectstate"
              }
            }
          ]
        },
        {
          "name": "projectsResourcePath",
          "description": "<p>The HTTP path listing owners projects.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "projectsUrl",
          "description": "<p>The HTTP URL listing owners projects.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "viewerCanCreateProjects",
          "description": "<p>Can the current viewer create new projects on this owner.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "Reactable",
      "kind": "interfaces",
      "id": "reactable",
      "href": "/graphql/reference/interfaces#reactable",
      "description": "<p>Represents a subject that can be reacted on.</p>",
      "fields": [
        {
          "name": "databaseId",
          "description": "<p>Identifies the primary key from the database.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "reactionGroups",
          "description": "<p>A list of reactions grouped by content left on the subject.</p>",
          "type": "[ReactionGroup!]",
          "id": "reactiongroup",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactiongroup"
        },
        {
          "name": "reactions",
          "description": "<p>A list of Reactions left on the Issue.</p>",
          "type": "ReactionConnection!",
          "id": "reactionconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#reactionconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "content",
              "description": "<p>Allows filtering Reactions by emoji.</p>",
              "type": {
                "name": "ReactionContent",
                "id": "reactioncontent",
                "href": "/graphql/reference/scalar#reactioncontent"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Allows specifying the order in which reactions are returned.</p>",
              "type": {
                "name": "ReactionOrder",
                "id": "reactionorder",
                "href": "/graphql/reference/scalar#reactionorder"
              }
            }
          ]
        },
        {
          "name": "viewerCanReact",
          "description": "<p>Can user react to this subject.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "RegistryPackageOwner",
      "kind": "interfaces",
      "id": "registrypackageowner",
      "href": "/graphql/reference/interfaces#registrypackageowner",
      "description": "<p>Represents an owner of a registry package.</p>",
      "fields": []
    },
    {
      "name": "RegistryPackageSearch",
      "kind": "interfaces",
      "id": "registrypackagesearch",
      "href": "/graphql/reference/interfaces#registrypackagesearch",
      "description": "<p>Represents an interface to search packages on an object.</p>",
      "fields": []
    },
    {
      "name": "RepositoryInfo",
      "kind": "interfaces",
      "id": "repositoryinfo",
      "href": "/graphql/reference/interfaces#repositoryinfo",
      "description": "<p>A subset of repository info.</p>",
      "fields": [
        {
          "name": "createdAt",
          "description": "<p>Identifies the date and time when the object was created.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "description",
          "description": "<p>The description of the repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "descriptionHTML",
          "description": "<p>The description of the repository rendered to HTML.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html"
        },
        {
          "name": "forkCount",
          "description": "<p>Returns how many forks there are of this repository in the whole network.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "hasAnonymousAccessEnabled",
          "description": "<p>Indicates if the repository has anonymous Git read access feature enabled.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hasIssuesEnabled",
          "description": "<p>Indicates if the repository has issues feature enabled.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "hasWikiEnabled",
          "description": "<p>Indicates if the repository has wiki feature enabled.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "homepageUrl",
          "description": "<p>The repository's URL.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "isArchived",
          "description": "<p>Indicates if the repository is unmaintained.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isFork",
          "description": "<p>Identifies if the repository is a fork.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isLocked",
          "description": "<p>Indicates if the repository has been locked or not.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isMirror",
          "description": "<p>Identifies if the repository is a mirror.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isPrivate",
          "description": "<p>Identifies if the repository is private.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "licenseInfo",
          "description": "<p>The license associated with the repository.</p>",
          "type": "License",
          "id": "license",
          "kind": "objects",
          "href": "/graphql/reference/objects#license"
        },
        {
          "name": "lockReason",
          "description": "<p>The reason the repository has been locked.</p>",
          "type": "RepositoryLockReason",
          "id": "repositorylockreason",
          "kind": "enums",
          "href": "/graphql/reference/enums#repositorylockreason"
        },
        {
          "name": "mirrorUrl",
          "description": "<p>The repository's original mirror URL.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "name",
          "description": "<p>The name of the repository.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "nameWithOwner",
          "description": "<p>The repository's name with owner.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "owner",
          "description": "<p>The User owner of the repository.</p>",
          "type": "RepositoryOwner!",
          "id": "repositoryowner",
          "kind": "interfaces",
          "href": "/graphql/reference/interfaces#repositoryowner"
        },
        {
          "name": "pushedAt",
          "description": "<p>Identifies when the repository was last pushed to.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP path for this repository.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "shortDescriptionHTML",
          "description": "<p>A description of the repository, rendered to HTML without any links in it.</p>",
          "type": "HTML!",
          "id": "html",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#html",
          "arguments": [
            {
              "name": "limit",
              "defaultValue": "200",
              "description": "<p>How many characters to return.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "updatedAt",
          "description": "<p>Identifies the date and time when the object was last updated.</p>",
          "type": "DateTime!",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for this repository.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "RepositoryNode",
      "kind": "interfaces",
      "id": "repositorynode",
      "href": "/graphql/reference/interfaces#repositorynode",
      "description": "<p>Represents a object that belongs to a repository.</p>",
      "fields": [
        {
          "name": "repository",
          "description": "<p>The repository associated with this node.</p>",
          "type": "Repository!",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "RepositoryOwner",
      "kind": "interfaces",
      "id": "repositoryowner",
      "href": "/graphql/reference/interfaces#repositoryowner",
      "description": "<p>Represents an owner of a Repository.</p>",
      "fields": [
        {
          "name": "avatarUrl",
          "description": "<p>A URL pointing to the owner's public avatar.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri",
          "arguments": [
            {
              "name": "size",
              "description": "<p>The size of the resulting square image.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            }
          ]
        },
        {
          "name": "login",
          "description": "<p>The username used to login.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pinnedRepositories",
          "description": "<p>A list of repositories this user has pinned to their profile.</p>",
          "type": "RepositoryConnection!",
          "id": "repositoryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryconnection",
          "arguments": [
            {
              "name": "affiliations",
              "description": "<p>Array of viewer's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\ncurrent viewer owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "href": "/graphql/reference/scalar#repositoryaffiliation"
              }
            },
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "isLocked",
              "description": "<p>If non-null, filters repositories according to whether they have been locked.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for repositories returned from the connection.</p>",
              "type": {
                "name": "RepositoryOrder",
                "id": "repositoryorder",
                "href": "/graphql/reference/scalar#repositoryorder"
              }
            },
            {
              "name": "ownerAffiliations",
              "description": "<p>Array of owner's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\norganization or user being viewed owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "href": "/graphql/reference/scalar#repositoryaffiliation"
              }
            },
            {
              "name": "privacy",
              "description": "<p>If non-null, filters repositories according to privacy.</p>",
              "type": {
                "name": "RepositoryPrivacy",
                "id": "repositoryprivacy",
                "href": "/graphql/reference/scalar#repositoryprivacy"
              }
            }
          ],
          "isDeprecated": true,
          "deprecationReason": "<p>pinnedRepositories will be removed Use ProfileOwner.pinnedItems instead. Removal on 2019-07-01 UTC.</p>"
        },
        {
          "name": "repositories",
          "description": "<p>A list of repositories that the user owns.</p>",
          "type": "RepositoryConnection!",
          "id": "repositoryconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#repositoryconnection",
          "arguments": [
            {
              "name": "affiliations",
              "description": "<p>Array of viewer's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\ncurrent viewer owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "href": "/graphql/reference/scalar#repositoryaffiliation"
              }
            },
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "isFork",
              "description": "<p>If non-null, filters repositories according to whether they are forks of another repository.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "isLocked",
              "description": "<p>If non-null, filters repositories according to whether they have been locked.</p>",
              "type": {
                "name": "Boolean",
                "id": "boolean",
                "href": "/graphql/reference/scalar#boolean"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Ordering options for repositories returned from the connection.</p>",
              "type": {
                "name": "RepositoryOrder",
                "id": "repositoryorder",
                "href": "/graphql/reference/scalar#repositoryorder"
              }
            },
            {
              "name": "ownerAffiliations",
              "description": "<p>Array of owner's affiliation options for repositories returned from the\nconnection. For example, OWNER will include only repositories that the\norganization or user being viewed owns.</p>",
              "type": {
                "name": "[RepositoryAffiliation]",
                "id": "repositoryaffiliation",
                "href": "/graphql/reference/scalar#repositoryaffiliation"
              }
            },
            {
              "name": "privacy",
              "description": "<p>If non-null, filters repositories according to privacy.</p>",
              "type": {
                "name": "RepositoryPrivacy",
                "id": "repositoryprivacy",
                "href": "/graphql/reference/scalar#repositoryprivacy"
              }
            }
          ]
        },
        {
          "name": "repository",
          "description": "<p>Find Repository.</p>",
          "type": "Repository",
          "id": "repository",
          "kind": "objects",
          "href": "/graphql/reference/objects#repository",
          "arguments": [
            {
              "name": "name",
              "description": "<p>Name of Repository to find.</p>",
              "type": {
                "name": "String!",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            }
          ]
        },
        {
          "name": "resourcePath",
          "description": "<p>The HTTP URL for the owner.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The HTTP URL for the owner.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "Starrable",
      "kind": "interfaces",
      "id": "starrable",
      "href": "/graphql/reference/interfaces#starrable",
      "description": "<p>Things that can be starred.</p>",
      "fields": [
        {
          "name": "stargazers",
          "description": "<p>A list of users who have starred this starrable.</p>",
          "type": "StargazerConnection!",
          "id": "stargazerconnection",
          "kind": "objects",
          "href": "/graphql/reference/objects#stargazerconnection",
          "arguments": [
            {
              "name": "after",
              "description": "<p>Returns the elements in the list that come after the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "before",
              "description": "<p>Returns the elements in the list that come before the specified cursor.</p>",
              "type": {
                "name": "String",
                "id": "string",
                "href": "/graphql/reference/scalar#string"
              }
            },
            {
              "name": "first",
              "description": "<p>Returns the first <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "last",
              "description": "<p>Returns the last <em>n</em> elements from the list.</p>",
              "type": {
                "name": "Int",
                "id": "int",
                "href": "/graphql/reference/scalar#int"
              }
            },
            {
              "name": "orderBy",
              "description": "<p>Order for connection.</p>",
              "type": {
                "name": "StarOrder",
                "id": "starorder",
                "href": "/graphql/reference/scalar#starorder"
              }
            }
          ]
        },
        {
          "name": "viewerHasStarred",
          "description": "<p>Returns a boolean indicating whether the viewing user has starred this starrable.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "Subscribable",
      "kind": "interfaces",
      "id": "subscribable",
      "href": "/graphql/reference/interfaces#subscribable",
      "description": "<p>Entities that can be subscribed to for web and email notifications.</p>",
      "fields": [
        {
          "name": "viewerCanSubscribe",
          "description": "<p>Check if the viewer is able to change their subscription status for the repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "viewerSubscription",
          "description": "<p>Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.</p>",
          "type": "SubscriptionState",
          "id": "subscriptionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#subscriptionstate"
        }
      ]
    },
    {
      "name": "UniformResourceLocatable",
      "kind": "interfaces",
      "id": "uniformresourcelocatable",
      "href": "/graphql/reference/interfaces#uniformresourcelocatable",
      "description": "<p>Represents a type that can be retrieved by a URL.</p>",
      "fields": [
        {
          "name": "resourcePath",
          "description": "<p>The HTML path to this resource.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "url",
          "description": "<p>The URL to this resource.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "Updatable",
      "kind": "interfaces",
      "id": "updatable",
      "href": "/graphql/reference/interfaces#updatable",
      "description": "<p>Entities that can be updated.</p>",
      "fields": [
        {
          "name": "viewerCanUpdate",
          "description": "<p>Check if the current viewer can update this object.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "UpdatableComment",
      "kind": "interfaces",
      "id": "updatablecomment",
      "href": "/graphql/reference/interfaces#updatablecomment",
      "description": "<p>Comments that can be updated.</p>",
      "fields": [
        {
          "name": "viewerCannotUpdateReasons",
          "description": "<p>Reasons why the current viewer can not update this comment.</p>",
          "type": "[CommentCannotUpdateReason!]!",
          "id": "commentcannotupdatereason",
          "kind": "enums",
          "href": "/graphql/reference/enums#commentcannotupdatereason"
        }
      ]
    }
  ],
  "enums": [
    {
      "name": "CheckAnnotationLevel",
      "kind": "enums",
      "id": "checkannotationlevel",
      "href": "/graphql/reference/enums#checkannotationlevel",
      "description": "<p>Represents an annotation's information level.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "values": [
        {
          "name": "FAILURE",
          "description": "<p>An annotation indicating an inescapable error.</p>"
        },
        {
          "name": "NOTICE",
          "description": "<p>An annotation indicating some information.</p>"
        },
        {
          "name": "WARNING",
          "description": "<p>An annotation indicating an ignorable error.</p>"
        }
      ]
    },
    {
      "name": "CheckConclusionState",
      "kind": "enums",
      "id": "checkconclusionstate",
      "href": "/graphql/reference/enums#checkconclusionstate",
      "description": "<p>The possible states for a check suite or run conclusion.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "values": [
        {
          "name": "ACTION_REQUIRED",
          "description": "<p>The check suite or run requires action.</p>"
        },
        {
          "name": "CANCELLED",
          "description": "<p>The check suite or run has been cancelled.</p>"
        },
        {
          "name": "FAILURE",
          "description": "<p>The check suite or run has failed.</p>"
        },
        {
          "name": "NEUTRAL",
          "description": "<p>The check suite or run was neutral.</p>"
        },
        {
          "name": "SUCCESS",
          "description": "<p>The check suite or run has succeeded.</p>"
        },
        {
          "name": "TIMED_OUT",
          "description": "<p>The check suite or run has timed out.</p>"
        }
      ]
    },
    {
      "name": "CheckRunType",
      "kind": "enums",
      "id": "checkruntype",
      "href": "/graphql/reference/enums#checkruntype",
      "description": "<p>The possible types of check runs.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "values": [
        {
          "name": "ALL",
          "description": "<p>Every check run available.</p>"
        },
        {
          "name": "LATEST",
          "description": "<p>The latest check run.</p>"
        }
      ]
    },
    {
      "name": "CheckStatusState",
      "kind": "enums",
      "id": "checkstatusstate",
      "href": "/graphql/reference/enums#checkstatusstate",
      "description": "<p>The possible states for a check suite or run status.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "values": [
        {
          "name": "COMPLETED",
          "description": "<p>The check suite or run has been completed.</p>"
        },
        {
          "name": "IN_PROGRESS",
          "description": "<p>The check suite or run is in progress.</p>"
        },
        {
          "name": "QUEUED",
          "description": "<p>The check suite or run has been queued.</p>"
        },
        {
          "name": "REQUESTED",
          "description": "<p>The check suite or run has been requested.</p>"
        }
      ]
    },
    {
      "name": "CollaboratorAffiliation",
      "kind": "enums",
      "id": "collaboratoraffiliation",
      "href": "/graphql/reference/enums#collaboratoraffiliation",
      "description": "<p>Collaborators affiliation level with a subject.</p>",
      "values": [
        {
          "name": "ALL",
          "description": "<p>All collaborators the authenticated user can see.</p>"
        },
        {
          "name": "DIRECT",
          "description": "<p>All collaborators with permissions to an organization-owned subject, regardless of organization membership status.</p>"
        },
        {
          "name": "OUTSIDE",
          "description": "<p>All outside collaborators of an organization-owned subject.</p>"
        }
      ]
    },
    {
      "name": "CommentAuthorAssociation",
      "kind": "enums",
      "id": "commentauthorassociation",
      "href": "/graphql/reference/enums#commentauthorassociation",
      "description": "<p>A comment author association with repository.</p>",
      "values": [
        {
          "name": "COLLABORATOR",
          "description": "<p>Author has been invited to collaborate on the repository.</p>"
        },
        {
          "name": "CONTRIBUTOR",
          "description": "<p>Author has previously committed to the repository.</p>"
        },
        {
          "name": "FIRST_TIMER",
          "description": "<p>Author has not previously committed to GitHub.</p>"
        },
        {
          "name": "FIRST_TIME_CONTRIBUTOR",
          "description": "<p>Author has not previously committed to the repository.</p>"
        },
        {
          "name": "MEMBER",
          "description": "<p>Author is a member of the organization that owns the repository.</p>"
        },
        {
          "name": "NONE",
          "description": "<p>Author has no association with the repository.</p>"
        },
        {
          "name": "OWNER",
          "description": "<p>Author is the owner of the repository.</p>"
        }
      ]
    },
    {
      "name": "CommentCannotUpdateReason",
      "kind": "enums",
      "id": "commentcannotupdatereason",
      "href": "/graphql/reference/enums#commentcannotupdatereason",
      "description": "<p>The possible errors that will prevent a user from updating a comment.</p>",
      "values": [
        {
          "name": "DENIED",
          "description": "<p>You cannot update this comment.</p>"
        },
        {
          "name": "INSUFFICIENT_ACCESS",
          "description": "<p>You must be the author or have write access to this repository to update this comment.</p>"
        },
        {
          "name": "LOCKED",
          "description": "<p>Unable to create comment because issue is locked.</p>"
        },
        {
          "name": "LOGIN_REQUIRED",
          "description": "<p>You must be logged in to update this comment.</p>"
        },
        {
          "name": "MAINTENANCE",
          "description": "<p>Repository is under maintenance.</p>"
        },
        {
          "name": "VERIFIED_EMAIL_REQUIRED",
          "description": "<p>At least one email address must be verified to update this comment.</p>"
        }
      ]
    },
    {
      "name": "CommitContributionOrderField",
      "kind": "enums",
      "id": "commitcontributionorderfield",
      "href": "/graphql/reference/enums#commitcontributionorderfield",
      "description": "<p>Properties by which commit contribution connections can be ordered.</p>",
      "values": [
        {
          "name": "COMMIT_COUNT",
          "description": "<p>Order commit contributions by how many commits they represent.</p>"
        },
        {
          "name": "OCCURRED_AT",
          "description": "<p>Order commit contributions by when they were made.</p>"
        }
      ]
    },
    {
      "name": "ContributionOrderField",
      "kind": "enums",
      "id": "contributionorderfield",
      "href": "/graphql/reference/enums#contributionorderfield",
      "description": "<p>Properties by which contribution connections can be ordered.</p>",
      "values": [
        {
          "name": "OCCURRED_AT",
          "description": "<p>Order contributions by when they were made.</p>"
        }
      ]
    },
    {
      "name": "DefaultRepositoryPermissionField",
      "kind": "enums",
      "id": "defaultrepositorypermissionfield",
      "href": "/graphql/reference/enums#defaultrepositorypermissionfield",
      "description": "<p>The possible default permissions for repositories.</p>",
      "values": [
        {
          "name": "ADMIN",
          "description": "<p>Can read, write, and administrate repos by default.</p>"
        },
        {
          "name": "NONE",
          "description": "<p>No access.</p>"
        },
        {
          "name": "READ",
          "description": "<p>Can read repos by default.</p>"
        },
        {
          "name": "WRITE",
          "description": "<p>Can read and write repos by default.</p>"
        }
      ]
    },
    {
      "name": "DeploymentOrderField",
      "kind": "enums",
      "id": "deploymentorderfield",
      "href": "/graphql/reference/enums#deploymentorderfield",
      "description": "<p>Properties by which deployment connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order collection by creation time.</p>"
        }
      ]
    },
    {
      "name": "DeploymentState",
      "kind": "enums",
      "id": "deploymentstate",
      "href": "/graphql/reference/enums#deploymentstate",
      "description": "<p>The possible states in which a deployment can be.</p>",
      "values": [
        {
          "name": "ABANDONED",
          "description": "<p>The pending deployment was not updated after 30 minutes.</p>"
        },
        {
          "name": "ACTIVE",
          "description": "<p>The deployment is currently active.</p>"
        },
        {
          "name": "DESTROYED",
          "description": "<p>An inactive transient deployment.</p>"
        },
        {
          "name": "ERROR",
          "description": "<p>The deployment experienced an error.</p>"
        },
        {
          "name": "FAILURE",
          "description": "<p>The deployment has failed.</p>"
        },
        {
          "name": "INACTIVE",
          "description": "<p>The deployment is inactive.</p>"
        },
        {
          "name": "IN_PROGRESS",
          "description": "<p>The deployment is in progress.</p>"
        },
        {
          "name": "PENDING",
          "description": "<p>The deployment is pending.</p>"
        },
        {
          "name": "QUEUED",
          "description": "<p>The deployment has queued.</p>"
        }
      ]
    },
    {
      "name": "DeploymentStatusState",
      "kind": "enums",
      "id": "deploymentstatusstate",
      "href": "/graphql/reference/enums#deploymentstatusstate",
      "description": "<p>The possible states for a deployment status.</p>",
      "values": [
        {
          "name": "ERROR",
          "description": "<p>The deployment experienced an error.</p>"
        },
        {
          "name": "FAILURE",
          "description": "<p>The deployment has failed.</p>"
        },
        {
          "name": "INACTIVE",
          "description": "<p>The deployment is inactive.</p>"
        },
        {
          "name": "IN_PROGRESS",
          "description": "<p>The deployment is in progress.</p>"
        },
        {
          "name": "PENDING",
          "description": "<p>The deployment is pending.</p>"
        },
        {
          "name": "QUEUED",
          "description": "<p>The deployment is queued.</p>"
        },
        {
          "name": "SUCCESS",
          "description": "<p>The deployment was successful.</p>"
        }
      ]
    },
    {
      "name": "GistOrderField",
      "kind": "enums",
      "id": "gistorderfield",
      "href": "/graphql/reference/enums#gistorderfield",
      "description": "<p>Properties by which gist connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order gists by creation time.</p>"
        },
        {
          "name": "PUSHED_AT",
          "description": "<p>Order gists by push time.</p>"
        },
        {
          "name": "UPDATED_AT",
          "description": "<p>Order gists by update time.</p>"
        }
      ]
    },
    {
      "name": "GistPrivacy",
      "kind": "enums",
      "id": "gistprivacy",
      "href": "/graphql/reference/enums#gistprivacy",
      "description": "<p>The privacy of a Gist.</p>",
      "values": [
        {
          "name": "ALL",
          "description": "<p>Gists that are public and secret.</p>"
        },
        {
          "name": "PUBLIC",
          "description": "<p>Public.</p>"
        },
        {
          "name": "SECRET",
          "description": "<p>Secret.</p>"
        }
      ]
    },
    {
      "name": "GitSignatureState",
      "kind": "enums",
      "id": "gitsignaturestate",
      "href": "/graphql/reference/enums#gitsignaturestate",
      "description": "<p>The state of a Git signature.</p>",
      "values": [
        {
          "name": "BAD_CERT",
          "description": "<p>The signing certificate or its chain could not be verified.</p>"
        },
        {
          "name": "BAD_EMAIL",
          "description": "<p>Invalid email used for signing.</p>"
        },
        {
          "name": "EXPIRED_KEY",
          "description": "<p>Signing key expired.</p>"
        },
        {
          "name": "GPGVERIFY_ERROR",
          "description": "<p>Internal error - the GPG verification service misbehaved.</p>"
        },
        {
          "name": "GPGVERIFY_UNAVAILABLE",
          "description": "<p>Internal error - the GPG verification service is unavailable at the moment.</p>"
        },
        {
          "name": "INVALID",
          "description": "<p>Invalid signature.</p>"
        },
        {
          "name": "MALFORMED_SIG",
          "description": "<p>Malformed signature.</p>"
        },
        {
          "name": "NOT_SIGNING_KEY",
          "description": "<p>The usage flags for the key that signed this don't allow signing.</p>"
        },
        {
          "name": "NO_USER",
          "description": "<p>Email used for signing not known to GitHub.</p>"
        },
        {
          "name": "OCSP_ERROR",
          "description": "<p>Valid siganture, though certificate revocation check failed.</p>"
        },
        {
          "name": "OCSP_PENDING",
          "description": "<p>Valid signature, pending certificate revocation checking.</p>"
        },
        {
          "name": "OCSP_REVOKED",
          "description": "<p>One or more certificates in chain has been revoked.</p>"
        },
        {
          "name": "UNKNOWN_KEY",
          "description": "<p>Key used for signing not known to GitHub.</p>"
        },
        {
          "name": "UNKNOWN_SIG_TYPE",
          "description": "<p>Unknown signature type.</p>"
        },
        {
          "name": "UNSIGNED",
          "description": "<p>Unsigned.</p>"
        },
        {
          "name": "UNVERIFIED_EMAIL",
          "description": "<p>Email used for signing unverified on GitHub.</p>"
        },
        {
          "name": "VALID",
          "description": "<p>Valid signature and verified by GitHub.</p>"
        }
      ]
    },
    {
      "name": "IssueOrderField",
      "kind": "enums",
      "id": "issueorderfield",
      "href": "/graphql/reference/enums#issueorderfield",
      "description": "<p>Properties by which issue connections can be ordered.</p>",
      "values": [
        {
          "name": "COMMENTS",
          "description": "<p>Order issues by comment count.</p>"
        },
        {
          "name": "CREATED_AT",
          "description": "<p>Order issues by creation time.</p>"
        },
        {
          "name": "UPDATED_AT",
          "description": "<p>Order issues by update time.</p>"
        }
      ]
    },
    {
      "name": "IssueState",
      "kind": "enums",
      "id": "issuestate",
      "href": "/graphql/reference/enums#issuestate",
      "description": "<p>The possible states of an issue.</p>",
      "values": [
        {
          "name": "CLOSED",
          "description": "<p>An issue that has been closed.</p>"
        },
        {
          "name": "OPEN",
          "description": "<p>An issue that is still open.</p>"
        }
      ]
    },
    {
      "name": "IssueTimelineItemsItemType",
      "kind": "enums",
      "id": "issuetimelineitemsitemtype",
      "href": "/graphql/reference/enums#issuetimelineitemsitemtype",
      "description": "<p>The possible item types found in a timeline.</p>",
      "values": [
        {
          "name": "ADDED_TO_PROJECT_EVENT",
          "description": "<p>Represents a<code>added_to_project</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "ASSIGNED_EVENT",
          "description": "<p>Represents an<code>assigned</code>event on any assignable object.</p>"
        },
        {
          "name": "CLOSED_EVENT",
          "description": "<p>Represents a<code>closed</code>event on any <code>Closable</code>.</p>"
        },
        {
          "name": "COMMENT_DELETED_EVENT",
          "description": "<p>Represents a<code>comment_deleted</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "CONVERTED_NOTE_TO_ISSUE_EVENT",
          "description": "<p>Represents a<code>converted_note_to_issue</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "CROSS_REFERENCED_EVENT",
          "description": "<p>Represents a mention made by one issue or pull request to another.</p>"
        },
        {
          "name": "DEMILESTONED_EVENT",
          "description": "<p>Represents a<code>demilestoned</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "ISSUE_COMMENT",
          "description": "<p>Represents a comment on an Issue.</p>"
        },
        {
          "name": "LABELED_EVENT",
          "description": "<p>Represents a<code>labeled</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "LOCKED_EVENT",
          "description": "<p>Represents a<code>locked</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "MENTIONED_EVENT",
          "description": "<p>Represents a<code>mentioned</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "MILESTONED_EVENT",
          "description": "<p>Represents a<code>milestoned</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "MOVED_COLUMNS_IN_PROJECT_EVENT",
          "description": "<p>Represents a<code>moved_columns_in_project</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "PINNED_EVENT",
          "description": "<p>Represents a<code>pinned</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "REFERENCED_EVENT",
          "description": "<p>Represents a<code>referenced</code>event on a given <code>ReferencedSubject</code>.</p>"
        },
        {
          "name": "REMOVED_FROM_PROJECT_EVENT",
          "description": "<p>Represents a<code>removed_from_project</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "RENAMED_TITLE_EVENT",
          "description": "<p>Represents a<code>renamed</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "REOPENED_EVENT",
          "description": "<p>Represents a<code>reopened</code>event on any <code>Closable</code>.</p>"
        },
        {
          "name": "SUBSCRIBED_EVENT",
          "description": "<p>Represents a<code>subscribed</code>event on a given <code>Subscribable</code>.</p>"
        },
        {
          "name": "TRANSFERRED_EVENT",
          "description": "<p>Represents a<code>transferred</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "UNASSIGNED_EVENT",
          "description": "<p>Represents an<code>unassigned</code>event on any assignable object.</p>"
        },
        {
          "name": "UNLABELED_EVENT",
          "description": "<p>Represents an<code>unlabeled</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "UNLOCKED_EVENT",
          "description": "<p>Represents an<code>unlocked</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "UNPINNED_EVENT",
          "description": "<p>Represents an<code>unpinned</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "UNSUBSCRIBED_EVENT",
          "description": "<p>Represents an<code>unsubscribed</code>event on a given <code>Subscribable</code>.</p>"
        },
        {
          "name": "USER_BLOCKED_EVENT",
          "description": "<p>Represents a<code>user_blocked</code>event on a given user.</p>"
        }
      ]
    },
    {
      "name": "LanguageOrderField",
      "kind": "enums",
      "id": "languageorderfield",
      "href": "/graphql/reference/enums#languageorderfield",
      "description": "<p>Properties by which language connections can be ordered.</p>",
      "values": [
        {
          "name": "SIZE",
          "description": "<p>Order languages by the size of all files containing the language.</p>"
        }
      ]
    },
    {
      "name": "LockReason",
      "kind": "enums",
      "id": "lockreason",
      "href": "/graphql/reference/enums#lockreason",
      "description": "<p>The possible reasons that an issue or pull request was locked.</p>",
      "values": [
        {
          "name": "OFF_TOPIC",
          "description": "<p>The issue or pull request was locked because the conversation was off-topic.</p>"
        },
        {
          "name": "RESOLVED",
          "description": "<p>The issue or pull request was locked because the conversation was resolved.</p>"
        },
        {
          "name": "SPAM",
          "description": "<p>The issue or pull request was locked because the conversation was spam.</p>"
        },
        {
          "name": "TOO_HEATED",
          "description": "<p>The issue or pull request was locked because the conversation was too heated.</p>"
        }
      ]
    },
    {
      "name": "MergeStateStatus",
      "kind": "enums",
      "id": "mergestatestatus",
      "href": "/graphql/reference/enums#mergestatestatus",
      "description": "<p>Detailed status information about a pull request merge.</p>",
      "values": [
        {
          "name": "BEHIND",
          "description": "<p>The head ref is out of date.</p>"
        },
        {
          "name": "BLOCKED",
          "description": "<p>The merge is blocked.</p>"
        },
        {
          "name": "CLEAN",
          "description": "<p>Mergeable and passing commit status.</p>"
        },
        {
          "name": "DIRTY",
          "description": "<p>The merge commit cannot be cleanly created.</p>"
        },
        {
          "name": "DRAFT",
          "description": "<p>The merge is blocked due to the pull request being a draft.</p>"
        },
        {
          "name": "HAS_HOOKS",
          "description": "<p>Mergeable with passing commit status and pre-recieve hooks.</p>"
        },
        {
          "name": "UNKNOWN",
          "description": "<p>The state cannot currently be determined.</p>"
        },
        {
          "name": "UNSTABLE",
          "description": "<p>Mergeable with non-passing commit status.</p>"
        }
      ]
    },
    {
      "name": "MergeableState",
      "kind": "enums",
      "id": "mergeablestate",
      "href": "/graphql/reference/enums#mergeablestate",
      "description": "<p>Whether or not a PullRequest can be merged.</p>",
      "values": [
        {
          "name": "CONFLICTING",
          "description": "<p>The pull request cannot be merged due to merge conflicts.</p>"
        },
        {
          "name": "MERGEABLE",
          "description": "<p>The pull request can be merged.</p>"
        },
        {
          "name": "UNKNOWN",
          "description": "<p>The mergeability of the pull request is still being calculated.</p>"
        }
      ]
    },
    {
      "name": "MilestoneOrderField",
      "kind": "enums",
      "id": "milestoneorderfield",
      "href": "/graphql/reference/enums#milestoneorderfield",
      "description": "<p>Properties by which milestone connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order milestones by when they were created.</p>"
        },
        {
          "name": "DUE_DATE",
          "description": "<p>Order milestones by when they are due.</p>"
        },
        {
          "name": "NUMBER",
          "description": "<p>Order milestones by their number.</p>"
        },
        {
          "name": "UPDATED_AT",
          "description": "<p>Order milestones by when they were last updated.</p>"
        }
      ]
    },
    {
      "name": "MilestoneState",
      "kind": "enums",
      "id": "milestonestate",
      "href": "/graphql/reference/enums#milestonestate",
      "description": "<p>The possible states of a milestone.</p>",
      "values": [
        {
          "name": "CLOSED",
          "description": "<p>A milestone that has been closed.</p>"
        },
        {
          "name": "OPEN",
          "description": "<p>A milestone that is still open.</p>"
        }
      ]
    },
    {
      "name": "OrderDirection",
      "kind": "enums",
      "id": "orderdirection",
      "href": "/graphql/reference/enums#orderdirection",
      "description": "<p>Possible directions in which to order a list of items when provided an <code>orderBy</code> argument.</p>",
      "values": [
        {
          "name": "ASC",
          "description": "<p>Specifies an ascending order for a given <code>orderBy</code> argument.</p>"
        },
        {
          "name": "DESC",
          "description": "<p>Specifies a descending order for a given <code>orderBy</code> argument.</p>"
        }
      ]
    },
    {
      "name": "OrganizationInvitationRole",
      "kind": "enums",
      "id": "organizationinvitationrole",
      "href": "/graphql/reference/enums#organizationinvitationrole",
      "description": "<p>The possible organization invitation roles.</p>",
      "values": [
        {
          "name": "ADMIN",
          "description": "<p>The user is invited to be an admin of the organization.</p>"
        },
        {
          "name": "BILLING_MANAGER",
          "description": "<p>The user is invited to be a billing manager of the organization.</p>"
        },
        {
          "name": "DIRECT_MEMBER",
          "description": "<p>The user is invited to be a direct member of the organization.</p>"
        },
        {
          "name": "REINSTATE",
          "description": "<p>The user's previous role will be reinstated.</p>"
        }
      ]
    },
    {
      "name": "OrganizationInvitationType",
      "kind": "enums",
      "id": "organizationinvitationtype",
      "href": "/graphql/reference/enums#organizationinvitationtype",
      "description": "<p>The possible organization invitation types.</p>",
      "values": [
        {
          "name": "EMAIL",
          "description": "<p>The invitation was to an email address.</p>"
        },
        {
          "name": "USER",
          "description": "<p>The invitation was to an existing user.</p>"
        }
      ]
    },
    {
      "name": "OrganizationMemberRole",
      "kind": "enums",
      "id": "organizationmemberrole",
      "href": "/graphql/reference/enums#organizationmemberrole",
      "description": "<p>The possible roles within an organization for its members.</p>",
      "values": [
        {
          "name": "ADMIN",
          "description": "<p>The user is an administrator of the organization.</p>"
        },
        {
          "name": "MEMBER",
          "description": "<p>The user is a member of the organization.</p>"
        }
      ]
    },
    {
      "name": "PinnableItemType",
      "kind": "enums",
      "id": "pinnableitemtype",
      "href": "/graphql/reference/enums#pinnableitemtype",
      "description": "<p>Represents items that can be pinned to a profile page.</p>",
      "values": [
        {
          "name": "GIST",
          "description": "<p>A gist.</p>"
        },
        {
          "name": "REPOSITORY",
          "description": "<p>A repository.</p>"
        }
      ]
    },
    {
      "name": "ProjectCardArchivedState",
      "kind": "enums",
      "id": "projectcardarchivedstate",
      "href": "/graphql/reference/enums#projectcardarchivedstate",
      "description": "<p>The possible archived states of a project card.</p>",
      "values": [
        {
          "name": "ARCHIVED",
          "description": "<p>A project card that is archived.</p>"
        },
        {
          "name": "NOT_ARCHIVED",
          "description": "<p>A project card that is not archived.</p>"
        }
      ]
    },
    {
      "name": "ProjectCardState",
      "kind": "enums",
      "id": "projectcardstate",
      "href": "/graphql/reference/enums#projectcardstate",
      "description": "<p>Various content states of a ProjectCard.</p>",
      "values": [
        {
          "name": "CONTENT_ONLY",
          "description": "<p>The card has content only.</p>"
        },
        {
          "name": "NOTE_ONLY",
          "description": "<p>The card has a note only.</p>"
        },
        {
          "name": "REDACTED",
          "description": "<p>The card is redacted.</p>"
        }
      ]
    },
    {
      "name": "ProjectColumnPurpose",
      "kind": "enums",
      "id": "projectcolumnpurpose",
      "href": "/graphql/reference/enums#projectcolumnpurpose",
      "description": "<p>The semantic purpose of the column - todo, in progress, or done.</p>",
      "values": [
        {
          "name": "DONE",
          "description": "<p>The column contains cards which are complete.</p>"
        },
        {
          "name": "IN_PROGRESS",
          "description": "<p>The column contains cards which are currently being worked on.</p>"
        },
        {
          "name": "TODO",
          "description": "<p>The column contains cards still to be worked on.</p>"
        }
      ]
    },
    {
      "name": "ProjectOrderField",
      "kind": "enums",
      "id": "projectorderfield",
      "href": "/graphql/reference/enums#projectorderfield",
      "description": "<p>Properties by which project connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order projects by creation time.</p>"
        },
        {
          "name": "NAME",
          "description": "<p>Order projects by name.</p>"
        },
        {
          "name": "UPDATED_AT",
          "description": "<p>Order projects by update time.</p>"
        }
      ]
    },
    {
      "name": "ProjectState",
      "kind": "enums",
      "id": "projectstate",
      "href": "/graphql/reference/enums#projectstate",
      "description": "<p>State of the project; either<code>open</code>or 'closed'.</p>",
      "values": [
        {
          "name": "CLOSED",
          "description": "<p>The project is closed.</p>"
        },
        {
          "name": "OPEN",
          "description": "<p>The project is open.</p>"
        }
      ]
    },
    {
      "name": "PullRequestOrderField",
      "kind": "enums",
      "id": "pullrequestorderfield",
      "href": "/graphql/reference/enums#pullrequestorderfield",
      "description": "<p>Properties by which pull_requests connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order pull_requests by creation time.</p>"
        },
        {
          "name": "UPDATED_AT",
          "description": "<p>Order pull_requests by update time.</p>"
        }
      ]
    },
    {
      "name": "PullRequestReviewCommentState",
      "kind": "enums",
      "id": "pullrequestreviewcommentstate",
      "href": "/graphql/reference/enums#pullrequestreviewcommentstate",
      "description": "<p>The possible states of a pull request review comment.</p>",
      "values": [
        {
          "name": "PENDING",
          "description": "<p>A comment that is part of a pending review.</p>"
        },
        {
          "name": "SUBMITTED",
          "description": "<p>A comment that is part of a submitted review.</p>"
        }
      ]
    },
    {
      "name": "PullRequestReviewEvent",
      "kind": "enums",
      "id": "pullrequestreviewevent",
      "href": "/graphql/reference/enums#pullrequestreviewevent",
      "description": "<p>The possible events to perform on a pull request review.</p>",
      "values": [
        {
          "name": "APPROVE",
          "description": "<p>Submit feedback and approve merging these changes.</p>"
        },
        {
          "name": "COMMENT",
          "description": "<p>Submit general feedback without explicit approval.</p>"
        },
        {
          "name": "DISMISS",
          "description": "<p>Dismiss review so it now longer effects merging.</p>"
        },
        {
          "name": "REQUEST_CHANGES",
          "description": "<p>Submit feedback that must be addressed before merging.</p>"
        }
      ]
    },
    {
      "name": "PullRequestReviewState",
      "kind": "enums",
      "id": "pullrequestreviewstate",
      "href": "/graphql/reference/enums#pullrequestreviewstate",
      "description": "<p>The possible states of a pull request review.</p>",
      "values": [
        {
          "name": "APPROVED",
          "description": "<p>A review allowing the pull request to merge.</p>"
        },
        {
          "name": "CHANGES_REQUESTED",
          "description": "<p>A review blocking the pull request from merging.</p>"
        },
        {
          "name": "COMMENTED",
          "description": "<p>An informational review.</p>"
        },
        {
          "name": "DISMISSED",
          "description": "<p>A review that has been dismissed.</p>"
        },
        {
          "name": "PENDING",
          "description": "<p>A review that has not yet been submitted.</p>"
        }
      ]
    },
    {
      "name": "PullRequestState",
      "kind": "enums",
      "id": "pullrequeststate",
      "href": "/graphql/reference/enums#pullrequeststate",
      "description": "<p>The possible states of a pull request.</p>",
      "values": [
        {
          "name": "CLOSED",
          "description": "<p>A pull request that has been closed without being merged.</p>"
        },
        {
          "name": "MERGED",
          "description": "<p>A pull request that has been closed by being merged.</p>"
        },
        {
          "name": "OPEN",
          "description": "<p>A pull request that is still open.</p>"
        }
      ]
    },
    {
      "name": "PullRequestTimelineItemsItemType",
      "kind": "enums",
      "id": "pullrequesttimelineitemsitemtype",
      "href": "/graphql/reference/enums#pullrequesttimelineitemsitemtype",
      "description": "<p>The possible item types found in a timeline.</p>",
      "values": [
        {
          "name": "ADDED_TO_PROJECT_EVENT",
          "description": "<p>Represents a<code>added_to_project</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "ASSIGNED_EVENT",
          "description": "<p>Represents an<code>assigned</code>event on any assignable object.</p>"
        },
        {
          "name": "BASE_REF_CHANGED_EVENT",
          "description": "<p>Represents a<code>base_ref_changed</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "BASE_REF_FORCE_PUSHED_EVENT",
          "description": "<p>Represents a<code>base_ref_force_pushed</code>event on a given pull request.</p>"
        },
        {
          "name": "CLOSED_EVENT",
          "description": "<p>Represents a<code>closed</code>event on any <code>Closable</code>.</p>"
        },
        {
          "name": "COMMENT_DELETED_EVENT",
          "description": "<p>Represents a<code>comment_deleted</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "CONVERTED_NOTE_TO_ISSUE_EVENT",
          "description": "<p>Represents a<code>converted_note_to_issue</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "CROSS_REFERENCED_EVENT",
          "description": "<p>Represents a mention made by one issue or pull request to another.</p>"
        },
        {
          "name": "DEMILESTONED_EVENT",
          "description": "<p>Represents a<code>demilestoned</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "DEPLOYED_EVENT",
          "description": "<p>Represents a<code>deployed</code>event on a given pull request.</p>"
        },
        {
          "name": "DEPLOYMENT_ENVIRONMENT_CHANGED_EVENT",
          "description": "<p>Represents a<code>deployment_environment_changed</code>event on a given pull request.</p>"
        },
        {
          "name": "HEAD_REF_DELETED_EVENT",
          "description": "<p>Represents a<code>head_ref_deleted</code>event on a given pull request.</p>"
        },
        {
          "name": "HEAD_REF_FORCE_PUSHED_EVENT",
          "description": "<p>Represents a<code>head_ref_force_pushed</code>event on a given pull request.</p>"
        },
        {
          "name": "HEAD_REF_RESTORED_EVENT",
          "description": "<p>Represents a<code>head_ref_restored</code>event on a given pull request.</p>"
        },
        {
          "name": "ISSUE_COMMENT",
          "description": "<p>Represents a comment on an Issue.</p>"
        },
        {
          "name": "LABELED_EVENT",
          "description": "<p>Represents a<code>labeled</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "LOCKED_EVENT",
          "description": "<p>Represents a<code>locked</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "MENTIONED_EVENT",
          "description": "<p>Represents a<code>mentioned</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "MERGED_EVENT",
          "description": "<p>Represents a<code>merged</code>event on a given pull request.</p>"
        },
        {
          "name": "MILESTONED_EVENT",
          "description": "<p>Represents a<code>milestoned</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "MOVED_COLUMNS_IN_PROJECT_EVENT",
          "description": "<p>Represents a<code>moved_columns_in_project</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "PINNED_EVENT",
          "description": "<p>Represents a<code>pinned</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "PULL_REQUEST_COMMIT",
          "description": "<p>Represents a Git commit part of a pull request.</p>"
        },
        {
          "name": "PULL_REQUEST_COMMIT_COMMENT_THREAD",
          "description": "<p>Represents a commit comment thread part of a pull request.</p>"
        },
        {
          "name": "PULL_REQUEST_REVIEW",
          "description": "<p>A review object for a given pull request.</p>"
        },
        {
          "name": "PULL_REQUEST_REVIEW_THREAD",
          "description": "<p>A threaded list of comments for a given pull request.</p>"
        },
        {
          "name": "PULL_REQUEST_REVISION_MARKER",
          "description": "<p>Represents the latest point in the pull request timeline for which the viewer has seen the pull request's commits.</p>"
        },
        {
          "name": "REFERENCED_EVENT",
          "description": "<p>Represents a<code>referenced</code>event on a given <code>ReferencedSubject</code>.</p>"
        },
        {
          "name": "REMOVED_FROM_PROJECT_EVENT",
          "description": "<p>Represents a<code>removed_from_project</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "RENAMED_TITLE_EVENT",
          "description": "<p>Represents a<code>renamed</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "REOPENED_EVENT",
          "description": "<p>Represents a<code>reopened</code>event on any <code>Closable</code>.</p>"
        },
        {
          "name": "REVIEW_DISMISSED_EVENT",
          "description": "<p>Represents a<code>review_dismissed</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "REVIEW_REQUESTED_EVENT",
          "description": "<p>Represents an<code>review_requested</code>event on a given pull request.</p>"
        },
        {
          "name": "REVIEW_REQUEST_REMOVED_EVENT",
          "description": "<p>Represents an<code>review_request_removed</code>event on a given pull request.</p>"
        },
        {
          "name": "SUBSCRIBED_EVENT",
          "description": "<p>Represents a<code>subscribed</code>event on a given <code>Subscribable</code>.</p>"
        },
        {
          "name": "TRANSFERRED_EVENT",
          "description": "<p>Represents a<code>transferred</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "UNASSIGNED_EVENT",
          "description": "<p>Represents an<code>unassigned</code>event on any assignable object.</p>"
        },
        {
          "name": "UNLABELED_EVENT",
          "description": "<p>Represents an<code>unlabeled</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "UNLOCKED_EVENT",
          "description": "<p>Represents an<code>unlocked</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "UNPINNED_EVENT",
          "description": "<p>Represents an<code>unpinned</code>event on a given issue or pull request.</p>"
        },
        {
          "name": "UNSUBSCRIBED_EVENT",
          "description": "<p>Represents an<code>unsubscribed</code>event on a given <code>Subscribable</code>.</p>"
        },
        {
          "name": "USER_BLOCKED_EVENT",
          "description": "<p>Represents a<code>user_blocked</code>event on a given user.</p>"
        }
      ]
    },
    {
      "name": "ReactionContent",
      "kind": "enums",
      "id": "reactioncontent",
      "href": "/graphql/reference/enums#reactioncontent",
      "description": "<p>Emojis that can be attached to Issues, Pull Requests and Comments.</p>",
      "values": [
        {
          "name": "CONFUSED",
          "description": "<p>Represents the 😕 emoji.</p>"
        },
        {
          "name": "EYES",
          "description": "<p>Represents the 👀 emoji.</p>"
        },
        {
          "name": "HEART",
          "description": "<p>Represents the ❤️ emoji.</p>"
        },
        {
          "name": "HOORAY",
          "description": "<p>Represents the 🎉 emoji.</p>"
        },
        {
          "name": "LAUGH",
          "description": "<p>Represents the 😄 emoji.</p>"
        },
        {
          "name": "ROCKET",
          "description": "<p>Represents the 🚀 emoji.</p>"
        },
        {
          "name": "THUMBS_DOWN",
          "description": "<p>Represents the 👎 emoji.</p>"
        },
        {
          "name": "THUMBS_UP",
          "description": "<p>Represents the 👍 emoji.</p>"
        }
      ]
    },
    {
      "name": "ReactionOrderField",
      "kind": "enums",
      "id": "reactionorderfield",
      "href": "/graphql/reference/enums#reactionorderfield",
      "description": "<p>A list of fields that reactions can be ordered by.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Allows ordering a list of reactions by when they were created.</p>"
        }
      ]
    },
    {
      "name": "RefOrderField",
      "kind": "enums",
      "id": "reforderfield",
      "href": "/graphql/reference/enums#reforderfield",
      "description": "<p>Properties by which ref connections can be ordered.</p>",
      "values": [
        {
          "name": "ALPHABETICAL",
          "description": "<p>Order refs by their alphanumeric name.</p>"
        },
        {
          "name": "TAG_COMMIT_DATE",
          "description": "<p>Order refs by underlying commit date if the ref prefix is refs/tags/.</p>"
        }
      ]
    },
    {
      "name": "ReleaseOrderField",
      "kind": "enums",
      "id": "releaseorderfield",
      "href": "/graphql/reference/enums#releaseorderfield",
      "description": "<p>Properties by which release connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order releases by creation time.</p>"
        },
        {
          "name": "NAME",
          "description": "<p>Order releases alphabetically by name.</p>"
        }
      ]
    },
    {
      "name": "ReportedContentClassifiers",
      "kind": "enums",
      "id": "reportedcontentclassifiers",
      "href": "/graphql/reference/enums#reportedcontentclassifiers",
      "description": "<p>The reasons a piece of content can be reported or minimized.</p>",
      "values": [
        {
          "name": "OFF_TOPIC",
          "description": "<p>An irrelevant piece of content.</p>"
        },
        {
          "name": "OUTDATED",
          "description": "<p>An outdated piece of content.</p>"
        },
        {
          "name": "RESOLVED",
          "description": "<p>The content has been resolved.</p>"
        }
      ]
    },
    {
      "name": "RepositoryAffiliation",
      "kind": "enums",
      "id": "repositoryaffiliation",
      "href": "/graphql/reference/enums#repositoryaffiliation",
      "description": "<p>The affiliation of a user to a repository.</p>",
      "values": [
        {
          "name": "COLLABORATOR",
          "description": "<p>Repositories that the user has been added to as a collaborator.</p>"
        },
        {
          "name": "ORGANIZATION_MEMBER",
          "description": "<p>Repositories that the user has access to through being a member of an\norganization. This includes every repository on every team that the user is on.</p>"
        },
        {
          "name": "OWNER",
          "description": "<p>Repositories that are owned by the authenticated user.</p>"
        }
      ]
    },
    {
      "name": "RepositoryContributionType",
      "kind": "enums",
      "id": "repositorycontributiontype",
      "href": "/graphql/reference/enums#repositorycontributiontype",
      "description": "<p>The reason a repository is listed as 'contributed'.</p>",
      "values": [
        {
          "name": "COMMIT",
          "description": "<p>Created a commit.</p>"
        },
        {
          "name": "ISSUE",
          "description": "<p>Created an issue.</p>"
        },
        {
          "name": "PULL_REQUEST",
          "description": "<p>Created a pull request.</p>"
        },
        {
          "name": "PULL_REQUEST_REVIEW",
          "description": "<p>Reviewed a pull request.</p>"
        },
        {
          "name": "REPOSITORY",
          "description": "<p>Created the repository.</p>"
        }
      ]
    },
    {
      "name": "RepositoryLockReason",
      "kind": "enums",
      "id": "repositorylockreason",
      "href": "/graphql/reference/enums#repositorylockreason",
      "description": "<p>The possible reasons a given repository could be in a locked state.</p>",
      "values": [
        {
          "name": "BILLING",
          "description": "<p>The repository is locked due to a billing related reason.</p>"
        },
        {
          "name": "MIGRATING",
          "description": "<p>The repository is locked due to a migration.</p>"
        },
        {
          "name": "MOVING",
          "description": "<p>The repository is locked due to a move.</p>"
        },
        {
          "name": "RENAME",
          "description": "<p>The repository is locked due to a rename.</p>"
        }
      ]
    },
    {
      "name": "RepositoryOrderField",
      "kind": "enums",
      "id": "repositoryorderfield",
      "href": "/graphql/reference/enums#repositoryorderfield",
      "description": "<p>Properties by which repository connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order repositories by creation time.</p>"
        },
        {
          "name": "NAME",
          "description": "<p>Order repositories by name.</p>"
        },
        {
          "name": "PUSHED_AT",
          "description": "<p>Order repositories by push time.</p>"
        },
        {
          "name": "STARGAZERS",
          "description": "<p>Order repositories by number of stargazers.</p>"
        },
        {
          "name": "UPDATED_AT",
          "description": "<p>Order repositories by update time.</p>"
        }
      ]
    },
    {
      "name": "RepositoryPermission",
      "kind": "enums",
      "id": "repositorypermission",
      "href": "/graphql/reference/enums#repositorypermission",
      "description": "<p>The access level to a repository.</p>",
      "values": [
        {
          "name": "ADMIN",
          "description": "<p>Can read, clone, push, and add collaborators.</p>"
        },
        {
          "name": "READ",
          "description": "<p>Can read and clone.</p>"
        },
        {
          "name": "WRITE",
          "description": "<p>Can read, clone and push.</p>"
        }
      ]
    },
    {
      "name": "RepositoryPrivacy",
      "kind": "enums",
      "id": "repositoryprivacy",
      "href": "/graphql/reference/enums#repositoryprivacy",
      "description": "<p>The privacy of a repository.</p>",
      "values": [
        {
          "name": "PRIVATE",
          "description": "<p>Private.</p>"
        },
        {
          "name": "PUBLIC",
          "description": "<p>Public.</p>"
        }
      ]
    },
    {
      "name": "RequestableCheckStatusState",
      "kind": "enums",
      "id": "requestablecheckstatusstate",
      "href": "/graphql/reference/enums#requestablecheckstatusstate",
      "description": "<p>The possible states that can be requested when creating a check run.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "values": [
        {
          "name": "COMPLETED",
          "description": "<p>The check suite or run has been completed.</p>"
        },
        {
          "name": "IN_PROGRESS",
          "description": "<p>The check suite or run is in progress.</p>"
        },
        {
          "name": "QUEUED",
          "description": "<p>The check suite or run has been queued.</p>"
        }
      ]
    },
    {
      "name": "SearchType",
      "kind": "enums",
      "id": "searchtype",
      "href": "/graphql/reference/enums#searchtype",
      "description": "<p>Represents the individual results of a search.</p>",
      "values": [
        {
          "name": "ISSUE",
          "description": "<p>Returns results matching issues in repositories.</p>"
        },
        {
          "name": "REPOSITORY",
          "description": "<p>Returns results matching repositories.</p>"
        },
        {
          "name": "USER",
          "description": "<p>Returns results matching users and organizations on GitHub.</p>"
        }
      ]
    },
    {
      "name": "SecurityAdvisoryEcosystem",
      "kind": "enums",
      "id": "securityadvisoryecosystem",
      "href": "/graphql/reference/enums#securityadvisoryecosystem",
      "description": "<p>The possible ecosystems of a security vulnerability's package.</p>",
      "values": [
        {
          "name": "MAVEN",
          "description": "<p>Java artifacts hosted at the Maven central repository.</p>"
        },
        {
          "name": "NPM",
          "description": "<p>JavaScript packages hosted at npmjs.com.</p>"
        },
        {
          "name": "NUGET",
          "description": "<p>.NET packages hosted at the NuGet Gallery.</p>"
        },
        {
          "name": "PIP",
          "description": "<p>Python packages hosted at PyPI.org.</p>"
        },
        {
          "name": "RUBYGEMS",
          "description": "<p>Ruby gems hosted at RubyGems.org.</p>"
        }
      ]
    },
    {
      "name": "SecurityAdvisorySeverity",
      "kind": "enums",
      "id": "securityadvisoryseverity",
      "href": "/graphql/reference/enums#securityadvisoryseverity",
      "description": "<p>Severity of the vulnerability.</p>",
      "values": [
        {
          "name": "CRITICAL",
          "description": "<p>Critical.</p>"
        },
        {
          "name": "HIGH",
          "description": "<p>High.</p>"
        },
        {
          "name": "LOW",
          "description": "<p>Low.</p>"
        },
        {
          "name": "MODERATE",
          "description": "<p>Moderate.</p>"
        }
      ]
    },
    {
      "name": "StarOrderField",
      "kind": "enums",
      "id": "starorderfield",
      "href": "/graphql/reference/enums#starorderfield",
      "description": "<p>Properties by which star connections can be ordered.</p>",
      "values": [
        {
          "name": "STARRED_AT",
          "description": "<p>Allows ordering a list of stars by when they were created.</p>"
        }
      ]
    },
    {
      "name": "StatusState",
      "kind": "enums",
      "id": "statusstate",
      "href": "/graphql/reference/enums#statusstate",
      "description": "<p>The possible commit status states.</p>",
      "values": [
        {
          "name": "ERROR",
          "description": "<p>Status is errored.</p>"
        },
        {
          "name": "EXPECTED",
          "description": "<p>Status is expected.</p>"
        },
        {
          "name": "FAILURE",
          "description": "<p>Status is failing.</p>"
        },
        {
          "name": "PENDING",
          "description": "<p>Status is pending.</p>"
        },
        {
          "name": "SUCCESS",
          "description": "<p>Status is successful.</p>"
        }
      ]
    },
    {
      "name": "SubscriptionState",
      "kind": "enums",
      "id": "subscriptionstate",
      "href": "/graphql/reference/enums#subscriptionstate",
      "description": "<p>The possible states of a subscription.</p>",
      "values": [
        {
          "name": "IGNORED",
          "description": "<p>The User is never notified.</p>"
        },
        {
          "name": "SUBSCRIBED",
          "description": "<p>The User is notified of all conversations.</p>"
        },
        {
          "name": "UNSUBSCRIBED",
          "description": "<p>The User is only notified when participating or @mentioned.</p>"
        }
      ]
    },
    {
      "name": "TeamDiscussionCommentOrderField",
      "kind": "enums",
      "id": "teamdiscussioncommentorderfield",
      "href": "/graphql/reference/enums#teamdiscussioncommentorderfield",
      "description": "<p>Properties by which team discussion comment connections can be ordered.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Team discussions preview",
        "description": "Adds support for reading and managing discussions within teams.",
        "toggled_by": "echo-preview",
        "toggled_on": [
          "Mutation.createTeamDiscussion",
          "Mutation.createTeamDiscussionComment",
          "Mutation.deleteTeamDiscussion",
          "Mutation.deleteTeamDiscussionComment",
          "Mutation.updateTeamDiscussion",
          "Mutation.updateTeamDiscussionComment",
          "Team.discussion",
          "Team.discussions",
          "Team.discussionsResourcePath",
          "Team.discussionsUrl",
          "TeamDiscussion",
          "TeamDiscussionComment",
          "TeamDiscussionCommentConnection",
          "TeamDiscussionCommentEdge",
          "TeamDiscussionCommentOrder",
          "TeamDiscussionCommentOrderField",
          "TeamDiscussionConnection",
          "TeamDiscussionEdge",
          "TeamDiscussionOrder",
          "TeamDiscussionOrderField"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.echo-preview+json",
        "href": "/graphql/overview/schema-previews#team-discussions-preview"
      },
      "values": [
        {
          "name": "NUMBER",
          "description": "<p>Allows sequential ordering of team discussion comments (which is equivalent to chronological ordering).</p>"
        }
      ]
    },
    {
      "name": "TeamDiscussionOrderField",
      "kind": "enums",
      "id": "teamdiscussionorderfield",
      "href": "/graphql/reference/enums#teamdiscussionorderfield",
      "description": "<p>Properties by which team discussion connections can be ordered.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Team discussions preview",
        "description": "Adds support for reading and managing discussions within teams.",
        "toggled_by": "echo-preview",
        "toggled_on": [
          "Mutation.createTeamDiscussion",
          "Mutation.createTeamDiscussionComment",
          "Mutation.deleteTeamDiscussion",
          "Mutation.deleteTeamDiscussionComment",
          "Mutation.updateTeamDiscussion",
          "Mutation.updateTeamDiscussionComment",
          "Team.discussion",
          "Team.discussions",
          "Team.discussionsResourcePath",
          "Team.discussionsUrl",
          "TeamDiscussion",
          "TeamDiscussionComment",
          "TeamDiscussionCommentConnection",
          "TeamDiscussionCommentEdge",
          "TeamDiscussionCommentOrder",
          "TeamDiscussionCommentOrderField",
          "TeamDiscussionConnection",
          "TeamDiscussionEdge",
          "TeamDiscussionOrder",
          "TeamDiscussionOrderField"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.echo-preview+json",
        "href": "/graphql/overview/schema-previews#team-discussions-preview"
      },
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Allows chronological ordering of team discussions.</p>"
        }
      ]
    },
    {
      "name": "TeamMemberOrderField",
      "kind": "enums",
      "id": "teammemberorderfield",
      "href": "/graphql/reference/enums#teammemberorderfield",
      "description": "<p>Properties by which team member connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order team members by creation time.</p>"
        },
        {
          "name": "LOGIN",
          "description": "<p>Order team members by login.</p>"
        }
      ]
    },
    {
      "name": "TeamMemberRole",
      "kind": "enums",
      "id": "teammemberrole",
      "href": "/graphql/reference/enums#teammemberrole",
      "description": "<p>The possible team member roles; either<code>maintainer</code>or 'member'.</p>",
      "values": [
        {
          "name": "MAINTAINER",
          "description": "<p>A team maintainer has permission to add and remove team members.</p>"
        },
        {
          "name": "MEMBER",
          "description": "<p>A team member has no administrative permissions on the team.</p>"
        }
      ]
    },
    {
      "name": "TeamMembershipType",
      "kind": "enums",
      "id": "teammembershiptype",
      "href": "/graphql/reference/enums#teammembershiptype",
      "description": "<p>Defines which types of team members are included in the returned list. Can be one of IMMEDIATE, CHILD_TEAM or ALL.</p>",
      "values": [
        {
          "name": "ALL",
          "description": "<p>Includes immediate and child team members for the team.</p>"
        },
        {
          "name": "CHILD_TEAM",
          "description": "<p>Includes only child team members for the team.</p>"
        },
        {
          "name": "IMMEDIATE",
          "description": "<p>Includes only immediate members of the team.</p>"
        }
      ]
    },
    {
      "name": "TeamOrderField",
      "kind": "enums",
      "id": "teamorderfield",
      "href": "/graphql/reference/enums#teamorderfield",
      "description": "<p>Properties by which team connections can be ordered.</p>",
      "values": [
        {
          "name": "NAME",
          "description": "<p>Allows ordering a list of teams by name.</p>"
        }
      ]
    },
    {
      "name": "TeamPrivacy",
      "kind": "enums",
      "id": "teamprivacy",
      "href": "/graphql/reference/enums#teamprivacy",
      "description": "<p>The possible team privacy values.</p>",
      "values": [
        {
          "name": "SECRET",
          "description": "<p>A secret team can only be seen by its members.</p>"
        },
        {
          "name": "VISIBLE",
          "description": "<p>A visible team can be seen and @mentioned by every member of the organization.</p>"
        }
      ]
    },
    {
      "name": "TeamRepositoryOrderField",
      "kind": "enums",
      "id": "teamrepositoryorderfield",
      "href": "/graphql/reference/enums#teamrepositoryorderfield",
      "description": "<p>Properties by which team repository connections can be ordered.</p>",
      "values": [
        {
          "name": "CREATED_AT",
          "description": "<p>Order repositories by creation time.</p>"
        },
        {
          "name": "NAME",
          "description": "<p>Order repositories by name.</p>"
        },
        {
          "name": "PERMISSION",
          "description": "<p>Order repositories by permission.</p>"
        },
        {
          "name": "PUSHED_AT",
          "description": "<p>Order repositories by push time.</p>"
        },
        {
          "name": "STARGAZERS",
          "description": "<p>Order repositories by number of stargazers.</p>"
        },
        {
          "name": "UPDATED_AT",
          "description": "<p>Order repositories by update time.</p>"
        }
      ]
    },
    {
      "name": "TeamRole",
      "kind": "enums",
      "id": "teamrole",
      "href": "/graphql/reference/enums#teamrole",
      "description": "<p>The role of a user on a team.</p>",
      "values": [
        {
          "name": "ADMIN",
          "description": "<p>User has admin rights on the team.</p>"
        },
        {
          "name": "MEMBER",
          "description": "<p>User is a member of the team.</p>"
        }
      ]
    },
    {
      "name": "UserBlockDuration",
      "kind": "enums",
      "id": "userblockduration",
      "href": "/graphql/reference/enums#userblockduration",
      "description": "<p>The possible durations that a user can be blocked for.</p>",
      "values": [
        {
          "name": "ONE_DAY",
          "description": "<p>The user was blocked for 1 day.</p>"
        },
        {
          "name": "ONE_MONTH",
          "description": "<p>The user was blocked for 30 days.</p>"
        },
        {
          "name": "ONE_WEEK",
          "description": "<p>The user was blocked for 7 days.</p>"
        },
        {
          "name": "PERMANENT",
          "description": "<p>The user was blocked permanently.</p>"
        },
        {
          "name": "THREE_DAYS",
          "description": "<p>The user was blocked for 3 days.</p>"
        }
      ]
    },
    {
      "name": "UserStatusOrderField",
      "kind": "enums",
      "id": "userstatusorderfield",
      "href": "/graphql/reference/enums#userstatusorderfield",
      "description": "<p>Properties by which user status connections can be ordered.</p>",
      "values": [
        {
          "name": "UPDATED_AT",
          "description": "<p>Order user statuses by when they were updated.</p>"
        }
      ]
    }
  ],
  "unions": [
    {
      "name": "Closer",
      "kind": "unions",
      "id": "closer",
      "href": "/graphql/reference/unions#closer",
      "description": "<p>The object which triggered a <code>ClosedEvent</code>.</p>",
      "possibleTypes": [
        {
          "name": "Commit",
          "id": "commit",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "PullRequest",
          "id": "pullrequest",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "CreatedIssueOrRestrictedContribution",
      "kind": "unions",
      "id": "createdissueorrestrictedcontribution",
      "href": "/graphql/reference/unions#createdissueorrestrictedcontribution",
      "description": "<p>Represents either a issue the viewer can access or a restricted contribution.</p>",
      "possibleTypes": [
        {
          "name": "CreatedIssueContribution",
          "id": "createdissuecontribution",
          "href": "/graphql/reference/objects#createdissuecontribution"
        },
        {
          "name": "RestrictedContribution",
          "id": "restrictedcontribution",
          "href": "/graphql/reference/objects#restrictedcontribution"
        }
      ]
    },
    {
      "name": "CreatedPullRequestOrRestrictedContribution",
      "kind": "unions",
      "id": "createdpullrequestorrestrictedcontribution",
      "href": "/graphql/reference/unions#createdpullrequestorrestrictedcontribution",
      "description": "<p>Represents either a pull request the viewer can access or a restricted contribution.</p>",
      "possibleTypes": [
        {
          "name": "CreatedPullRequestContribution",
          "id": "createdpullrequestcontribution",
          "href": "/graphql/reference/objects#createdpullrequestcontribution"
        },
        {
          "name": "RestrictedContribution",
          "id": "restrictedcontribution",
          "href": "/graphql/reference/objects#restrictedcontribution"
        }
      ]
    },
    {
      "name": "CreatedRepositoryOrRestrictedContribution",
      "kind": "unions",
      "id": "createdrepositoryorrestrictedcontribution",
      "href": "/graphql/reference/unions#createdrepositoryorrestrictedcontribution",
      "description": "<p>Represents either a repository the viewer can access or a restricted contribution.</p>",
      "possibleTypes": [
        {
          "name": "CreatedRepositoryContribution",
          "id": "createdrepositorycontribution",
          "href": "/graphql/reference/objects#createdrepositorycontribution"
        },
        {
          "name": "RestrictedContribution",
          "id": "restrictedcontribution",
          "href": "/graphql/reference/objects#restrictedcontribution"
        }
      ]
    },
    {
      "name": "IssueOrPullRequest",
      "kind": "unions",
      "id": "issueorpullrequest",
      "href": "/graphql/reference/unions#issueorpullrequest",
      "description": "<p>Used for return value of Repository.issueOrPullRequest.</p>",
      "possibleTypes": [
        {
          "name": "Issue",
          "id": "issue",
          "href": "/graphql/reference/objects#issue"
        },
        {
          "name": "PullRequest",
          "id": "pullrequest",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "IssueTimelineItem",
      "kind": "unions",
      "id": "issuetimelineitem",
      "href": "/graphql/reference/unions#issuetimelineitem",
      "description": "<p>An item in an issue timeline.</p>",
      "possibleTypes": [
        {
          "name": "AssignedEvent",
          "id": "assignedevent",
          "href": "/graphql/reference/objects#assignedevent"
        },
        {
          "name": "ClosedEvent",
          "id": "closedevent",
          "href": "/graphql/reference/objects#closedevent"
        },
        {
          "name": "Commit",
          "id": "commit",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "CrossReferencedEvent",
          "id": "crossreferencedevent",
          "href": "/graphql/reference/objects#crossreferencedevent"
        },
        {
          "name": "DemilestonedEvent",
          "id": "demilestonedevent",
          "href": "/graphql/reference/objects#demilestonedevent"
        },
        {
          "name": "IssueComment",
          "id": "issuecomment",
          "href": "/graphql/reference/objects#issuecomment"
        },
        {
          "name": "LabeledEvent",
          "id": "labeledevent",
          "href": "/graphql/reference/objects#labeledevent"
        },
        {
          "name": "LockedEvent",
          "id": "lockedevent",
          "href": "/graphql/reference/objects#lockedevent"
        },
        {
          "name": "MilestonedEvent",
          "id": "milestonedevent",
          "href": "/graphql/reference/objects#milestonedevent"
        },
        {
          "name": "ReferencedEvent",
          "id": "referencedevent",
          "href": "/graphql/reference/objects#referencedevent"
        },
        {
          "name": "RenamedTitleEvent",
          "id": "renamedtitleevent",
          "href": "/graphql/reference/objects#renamedtitleevent"
        },
        {
          "name": "ReopenedEvent",
          "id": "reopenedevent",
          "href": "/graphql/reference/objects#reopenedevent"
        },
        {
          "name": "SubscribedEvent",
          "id": "subscribedevent",
          "href": "/graphql/reference/objects#subscribedevent"
        },
        {
          "name": "TransferredEvent",
          "id": "transferredevent",
          "href": "/graphql/reference/objects#transferredevent"
        },
        {
          "name": "UnassignedEvent",
          "id": "unassignedevent",
          "href": "/graphql/reference/objects#unassignedevent"
        },
        {
          "name": "UnlabeledEvent",
          "id": "unlabeledevent",
          "href": "/graphql/reference/objects#unlabeledevent"
        },
        {
          "name": "UnlockedEvent",
          "id": "unlockedevent",
          "href": "/graphql/reference/objects#unlockedevent"
        },
        {
          "name": "UnsubscribedEvent",
          "id": "unsubscribedevent",
          "href": "/graphql/reference/objects#unsubscribedevent"
        },
        {
          "name": "UserBlockedEvent",
          "id": "userblockedevent",
          "href": "/graphql/reference/objects#userblockedevent"
        }
      ]
    },
    {
      "name": "IssueTimelineItems",
      "kind": "unions",
      "id": "issuetimelineitems",
      "href": "/graphql/reference/unions#issuetimelineitems",
      "description": "<p>An item in an issue timeline.</p>",
      "possibleTypes": [
        {
          "name": "AddedToProjectEvent",
          "id": "addedtoprojectevent",
          "href": "/graphql/reference/objects#addedtoprojectevent"
        },
        {
          "name": "AssignedEvent",
          "id": "assignedevent",
          "href": "/graphql/reference/objects#assignedevent"
        },
        {
          "name": "ClosedEvent",
          "id": "closedevent",
          "href": "/graphql/reference/objects#closedevent"
        },
        {
          "name": "CommentDeletedEvent",
          "id": "commentdeletedevent",
          "href": "/graphql/reference/objects#commentdeletedevent"
        },
        {
          "name": "ConvertedNoteToIssueEvent",
          "id": "convertednotetoissueevent",
          "href": "/graphql/reference/objects#convertednotetoissueevent"
        },
        {
          "name": "CrossReferencedEvent",
          "id": "crossreferencedevent",
          "href": "/graphql/reference/objects#crossreferencedevent"
        },
        {
          "name": "DemilestonedEvent",
          "id": "demilestonedevent",
          "href": "/graphql/reference/objects#demilestonedevent"
        },
        {
          "name": "IssueComment",
          "id": "issuecomment",
          "href": "/graphql/reference/objects#issuecomment"
        },
        {
          "name": "LabeledEvent",
          "id": "labeledevent",
          "href": "/graphql/reference/objects#labeledevent"
        },
        {
          "name": "LockedEvent",
          "id": "lockedevent",
          "href": "/graphql/reference/objects#lockedevent"
        },
        {
          "name": "MentionedEvent",
          "id": "mentionedevent",
          "href": "/graphql/reference/objects#mentionedevent"
        },
        {
          "name": "MilestonedEvent",
          "id": "milestonedevent",
          "href": "/graphql/reference/objects#milestonedevent"
        },
        {
          "name": "MovedColumnsInProjectEvent",
          "id": "movedcolumnsinprojectevent",
          "href": "/graphql/reference/objects#movedcolumnsinprojectevent"
        },
        {
          "name": "PinnedEvent",
          "id": "pinnedevent",
          "href": "/graphql/reference/objects#pinnedevent"
        },
        {
          "name": "ReferencedEvent",
          "id": "referencedevent",
          "href": "/graphql/reference/objects#referencedevent"
        },
        {
          "name": "RemovedFromProjectEvent",
          "id": "removedfromprojectevent",
          "href": "/graphql/reference/objects#removedfromprojectevent"
        },
        {
          "name": "RenamedTitleEvent",
          "id": "renamedtitleevent",
          "href": "/graphql/reference/objects#renamedtitleevent"
        },
        {
          "name": "ReopenedEvent",
          "id": "reopenedevent",
          "href": "/graphql/reference/objects#reopenedevent"
        },
        {
          "name": "SubscribedEvent",
          "id": "subscribedevent",
          "href": "/graphql/reference/objects#subscribedevent"
        },
        {
          "name": "TransferredEvent",
          "id": "transferredevent",
          "href": "/graphql/reference/objects#transferredevent"
        },
        {
          "name": "UnassignedEvent",
          "id": "unassignedevent",
          "href": "/graphql/reference/objects#unassignedevent"
        },
        {
          "name": "UnlabeledEvent",
          "id": "unlabeledevent",
          "href": "/graphql/reference/objects#unlabeledevent"
        },
        {
          "name": "UnlockedEvent",
          "id": "unlockedevent",
          "href": "/graphql/reference/objects#unlockedevent"
        },
        {
          "name": "UnpinnedEvent",
          "id": "unpinnedevent",
          "href": "/graphql/reference/objects#unpinnedevent"
        },
        {
          "name": "UnsubscribedEvent",
          "id": "unsubscribedevent",
          "href": "/graphql/reference/objects#unsubscribedevent"
        },
        {
          "name": "UserBlockedEvent",
          "id": "userblockedevent",
          "href": "/graphql/reference/objects#userblockedevent"
        }
      ]
    },
    {
      "name": "MilestoneItem",
      "kind": "unions",
      "id": "milestoneitem",
      "href": "/graphql/reference/unions#milestoneitem",
      "description": "<p>Types that can be inside a Milestone.</p>",
      "possibleTypes": [
        {
          "name": "Issue",
          "id": "issue",
          "href": "/graphql/reference/objects#issue"
        },
        {
          "name": "PullRequest",
          "id": "pullrequest",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "PermissionGranter",
      "kind": "unions",
      "id": "permissiongranter",
      "href": "/graphql/reference/unions#permissiongranter",
      "description": "<p>Types that can grant permissions on a repository to a user.</p>",
      "possibleTypes": [
        {
          "name": "Organization",
          "id": "organization",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "Repository",
          "id": "repository",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "Team",
          "id": "team",
          "href": "/graphql/reference/objects#team"
        }
      ]
    },
    {
      "name": "PinnableItem",
      "kind": "unions",
      "id": "pinnableitem",
      "href": "/graphql/reference/unions#pinnableitem",
      "description": "<p>Types that can be pinned to a profile page.</p>",
      "possibleTypes": [
        {
          "name": "Gist",
          "id": "gist",
          "href": "/graphql/reference/objects#gist"
        },
        {
          "name": "Repository",
          "id": "repository",
          "href": "/graphql/reference/objects#repository"
        }
      ]
    },
    {
      "name": "ProjectCardItem",
      "kind": "unions",
      "id": "projectcarditem",
      "href": "/graphql/reference/unions#projectcarditem",
      "description": "<p>Types that can be inside Project Cards.</p>",
      "possibleTypes": [
        {
          "name": "Issue",
          "id": "issue",
          "href": "/graphql/reference/objects#issue"
        },
        {
          "name": "PullRequest",
          "id": "pullrequest",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "PullRequestTimelineItem",
      "kind": "unions",
      "id": "pullrequesttimelineitem",
      "href": "/graphql/reference/unions#pullrequesttimelineitem",
      "description": "<p>An item in an pull request timeline.</p>",
      "possibleTypes": [
        {
          "name": "AssignedEvent",
          "id": "assignedevent",
          "href": "/graphql/reference/objects#assignedevent"
        },
        {
          "name": "BaseRefForcePushedEvent",
          "id": "baserefforcepushedevent",
          "href": "/graphql/reference/objects#baserefforcepushedevent"
        },
        {
          "name": "ClosedEvent",
          "id": "closedevent",
          "href": "/graphql/reference/objects#closedevent"
        },
        {
          "name": "Commit",
          "id": "commit",
          "href": "/graphql/reference/objects#commit"
        },
        {
          "name": "CommitCommentThread",
          "id": "commitcommentthread",
          "href": "/graphql/reference/objects#commitcommentthread"
        },
        {
          "name": "CrossReferencedEvent",
          "id": "crossreferencedevent",
          "href": "/graphql/reference/objects#crossreferencedevent"
        },
        {
          "name": "DemilestonedEvent",
          "id": "demilestonedevent",
          "href": "/graphql/reference/objects#demilestonedevent"
        },
        {
          "name": "DeployedEvent",
          "id": "deployedevent",
          "href": "/graphql/reference/objects#deployedevent"
        },
        {
          "name": "DeploymentEnvironmentChangedEvent",
          "id": "deploymentenvironmentchangedevent",
          "href": "/graphql/reference/objects#deploymentenvironmentchangedevent"
        },
        {
          "name": "HeadRefDeletedEvent",
          "id": "headrefdeletedevent",
          "href": "/graphql/reference/objects#headrefdeletedevent"
        },
        {
          "name": "HeadRefForcePushedEvent",
          "id": "headrefforcepushedevent",
          "href": "/graphql/reference/objects#headrefforcepushedevent"
        },
        {
          "name": "HeadRefRestoredEvent",
          "id": "headrefrestoredevent",
          "href": "/graphql/reference/objects#headrefrestoredevent"
        },
        {
          "name": "IssueComment",
          "id": "issuecomment",
          "href": "/graphql/reference/objects#issuecomment"
        },
        {
          "name": "LabeledEvent",
          "id": "labeledevent",
          "href": "/graphql/reference/objects#labeledevent"
        },
        {
          "name": "LockedEvent",
          "id": "lockedevent",
          "href": "/graphql/reference/objects#lockedevent"
        },
        {
          "name": "MergedEvent",
          "id": "mergedevent",
          "href": "/graphql/reference/objects#mergedevent"
        },
        {
          "name": "MilestonedEvent",
          "id": "milestonedevent",
          "href": "/graphql/reference/objects#milestonedevent"
        },
        {
          "name": "PullRequestReview",
          "id": "pullrequestreview",
          "href": "/graphql/reference/objects#pullrequestreview"
        },
        {
          "name": "PullRequestReviewComment",
          "id": "pullrequestreviewcomment",
          "href": "/graphql/reference/objects#pullrequestreviewcomment"
        },
        {
          "name": "PullRequestReviewThread",
          "id": "pullrequestreviewthread",
          "href": "/graphql/reference/objects#pullrequestreviewthread"
        },
        {
          "name": "ReferencedEvent",
          "id": "referencedevent",
          "href": "/graphql/reference/objects#referencedevent"
        },
        {
          "name": "RenamedTitleEvent",
          "id": "renamedtitleevent",
          "href": "/graphql/reference/objects#renamedtitleevent"
        },
        {
          "name": "ReopenedEvent",
          "id": "reopenedevent",
          "href": "/graphql/reference/objects#reopenedevent"
        },
        {
          "name": "ReviewDismissedEvent",
          "id": "reviewdismissedevent",
          "href": "/graphql/reference/objects#reviewdismissedevent"
        },
        {
          "name": "ReviewRequestRemovedEvent",
          "id": "reviewrequestremovedevent",
          "href": "/graphql/reference/objects#reviewrequestremovedevent"
        },
        {
          "name": "ReviewRequestedEvent",
          "id": "reviewrequestedevent",
          "href": "/graphql/reference/objects#reviewrequestedevent"
        },
        {
          "name": "SubscribedEvent",
          "id": "subscribedevent",
          "href": "/graphql/reference/objects#subscribedevent"
        },
        {
          "name": "UnassignedEvent",
          "id": "unassignedevent",
          "href": "/graphql/reference/objects#unassignedevent"
        },
        {
          "name": "UnlabeledEvent",
          "id": "unlabeledevent",
          "href": "/graphql/reference/objects#unlabeledevent"
        },
        {
          "name": "UnlockedEvent",
          "id": "unlockedevent",
          "href": "/graphql/reference/objects#unlockedevent"
        },
        {
          "name": "UnsubscribedEvent",
          "id": "unsubscribedevent",
          "href": "/graphql/reference/objects#unsubscribedevent"
        },
        {
          "name": "UserBlockedEvent",
          "id": "userblockedevent",
          "href": "/graphql/reference/objects#userblockedevent"
        }
      ]
    },
    {
      "name": "PullRequestTimelineItems",
      "kind": "unions",
      "id": "pullrequesttimelineitems",
      "href": "/graphql/reference/unions#pullrequesttimelineitems",
      "description": "<p>An item in a pull request timeline.</p>",
      "possibleTypes": [
        {
          "name": "AddedToProjectEvent",
          "id": "addedtoprojectevent",
          "href": "/graphql/reference/objects#addedtoprojectevent"
        },
        {
          "name": "AssignedEvent",
          "id": "assignedevent",
          "href": "/graphql/reference/objects#assignedevent"
        },
        {
          "name": "BaseRefChangedEvent",
          "id": "baserefchangedevent",
          "href": "/graphql/reference/objects#baserefchangedevent"
        },
        {
          "name": "BaseRefForcePushedEvent",
          "id": "baserefforcepushedevent",
          "href": "/graphql/reference/objects#baserefforcepushedevent"
        },
        {
          "name": "ClosedEvent",
          "id": "closedevent",
          "href": "/graphql/reference/objects#closedevent"
        },
        {
          "name": "CommentDeletedEvent",
          "id": "commentdeletedevent",
          "href": "/graphql/reference/objects#commentdeletedevent"
        },
        {
          "name": "ConvertedNoteToIssueEvent",
          "id": "convertednotetoissueevent",
          "href": "/graphql/reference/objects#convertednotetoissueevent"
        },
        {
          "name": "CrossReferencedEvent",
          "id": "crossreferencedevent",
          "href": "/graphql/reference/objects#crossreferencedevent"
        },
        {
          "name": "DemilestonedEvent",
          "id": "demilestonedevent",
          "href": "/graphql/reference/objects#demilestonedevent"
        },
        {
          "name": "DeployedEvent",
          "id": "deployedevent",
          "href": "/graphql/reference/objects#deployedevent"
        },
        {
          "name": "DeploymentEnvironmentChangedEvent",
          "id": "deploymentenvironmentchangedevent",
          "href": "/graphql/reference/objects#deploymentenvironmentchangedevent"
        },
        {
          "name": "HeadRefDeletedEvent",
          "id": "headrefdeletedevent",
          "href": "/graphql/reference/objects#headrefdeletedevent"
        },
        {
          "name": "HeadRefForcePushedEvent",
          "id": "headrefforcepushedevent",
          "href": "/graphql/reference/objects#headrefforcepushedevent"
        },
        {
          "name": "HeadRefRestoredEvent",
          "id": "headrefrestoredevent",
          "href": "/graphql/reference/objects#headrefrestoredevent"
        },
        {
          "name": "IssueComment",
          "id": "issuecomment",
          "href": "/graphql/reference/objects#issuecomment"
        },
        {
          "name": "LabeledEvent",
          "id": "labeledevent",
          "href": "/graphql/reference/objects#labeledevent"
        },
        {
          "name": "LockedEvent",
          "id": "lockedevent",
          "href": "/graphql/reference/objects#lockedevent"
        },
        {
          "name": "MentionedEvent",
          "id": "mentionedevent",
          "href": "/graphql/reference/objects#mentionedevent"
        },
        {
          "name": "MergedEvent",
          "id": "mergedevent",
          "href": "/graphql/reference/objects#mergedevent"
        },
        {
          "name": "MilestonedEvent",
          "id": "milestonedevent",
          "href": "/graphql/reference/objects#milestonedevent"
        },
        {
          "name": "MovedColumnsInProjectEvent",
          "id": "movedcolumnsinprojectevent",
          "href": "/graphql/reference/objects#movedcolumnsinprojectevent"
        },
        {
          "name": "PinnedEvent",
          "id": "pinnedevent",
          "href": "/graphql/reference/objects#pinnedevent"
        },
        {
          "name": "PullRequestCommit",
          "id": "pullrequestcommit",
          "href": "/graphql/reference/objects#pullrequestcommit"
        },
        {
          "name": "PullRequestCommitCommentThread",
          "id": "pullrequestcommitcommentthread",
          "href": "/graphql/reference/objects#pullrequestcommitcommentthread"
        },
        {
          "name": "PullRequestReview",
          "id": "pullrequestreview",
          "href": "/graphql/reference/objects#pullrequestreview"
        },
        {
          "name": "PullRequestReviewThread",
          "id": "pullrequestreviewthread",
          "href": "/graphql/reference/objects#pullrequestreviewthread"
        },
        {
          "name": "PullRequestRevisionMarker",
          "id": "pullrequestrevisionmarker",
          "href": "/graphql/reference/objects#pullrequestrevisionmarker"
        },
        {
          "name": "ReferencedEvent",
          "id": "referencedevent",
          "href": "/graphql/reference/objects#referencedevent"
        },
        {
          "name": "RemovedFromProjectEvent",
          "id": "removedfromprojectevent",
          "href": "/graphql/reference/objects#removedfromprojectevent"
        },
        {
          "name": "RenamedTitleEvent",
          "id": "renamedtitleevent",
          "href": "/graphql/reference/objects#renamedtitleevent"
        },
        {
          "name": "ReopenedEvent",
          "id": "reopenedevent",
          "href": "/graphql/reference/objects#reopenedevent"
        },
        {
          "name": "ReviewDismissedEvent",
          "id": "reviewdismissedevent",
          "href": "/graphql/reference/objects#reviewdismissedevent"
        },
        {
          "name": "ReviewRequestRemovedEvent",
          "id": "reviewrequestremovedevent",
          "href": "/graphql/reference/objects#reviewrequestremovedevent"
        },
        {
          "name": "ReviewRequestedEvent",
          "id": "reviewrequestedevent",
          "href": "/graphql/reference/objects#reviewrequestedevent"
        },
        {
          "name": "SubscribedEvent",
          "id": "subscribedevent",
          "href": "/graphql/reference/objects#subscribedevent"
        },
        {
          "name": "TransferredEvent",
          "id": "transferredevent",
          "href": "/graphql/reference/objects#transferredevent"
        },
        {
          "name": "UnassignedEvent",
          "id": "unassignedevent",
          "href": "/graphql/reference/objects#unassignedevent"
        },
        {
          "name": "UnlabeledEvent",
          "id": "unlabeledevent",
          "href": "/graphql/reference/objects#unlabeledevent"
        },
        {
          "name": "UnlockedEvent",
          "id": "unlockedevent",
          "href": "/graphql/reference/objects#unlockedevent"
        },
        {
          "name": "UnpinnedEvent",
          "id": "unpinnedevent",
          "href": "/graphql/reference/objects#unpinnedevent"
        },
        {
          "name": "UnsubscribedEvent",
          "id": "unsubscribedevent",
          "href": "/graphql/reference/objects#unsubscribedevent"
        },
        {
          "name": "UserBlockedEvent",
          "id": "userblockedevent",
          "href": "/graphql/reference/objects#userblockedevent"
        }
      ]
    },
    {
      "name": "PushAllowanceActor",
      "kind": "unions",
      "id": "pushallowanceactor",
      "href": "/graphql/reference/unions#pushallowanceactor",
      "description": "<p>Types that can be an actor.</p>",
      "possibleTypes": [
        {
          "name": "Team",
          "id": "team",
          "href": "/graphql/reference/objects#team"
        },
        {
          "name": "User",
          "id": "user",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "ReferencedSubject",
      "kind": "unions",
      "id": "referencedsubject",
      "href": "/graphql/reference/unions#referencedsubject",
      "description": "<p>Any referencable object.</p>",
      "possibleTypes": [
        {
          "name": "Issue",
          "id": "issue",
          "href": "/graphql/reference/objects#issue"
        },
        {
          "name": "PullRequest",
          "id": "pullrequest",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "RenamedTitleSubject",
      "kind": "unions",
      "id": "renamedtitlesubject",
      "href": "/graphql/reference/unions#renamedtitlesubject",
      "description": "<p>An object which has a renamable title.</p>",
      "possibleTypes": [
        {
          "name": "Issue",
          "id": "issue",
          "href": "/graphql/reference/objects#issue"
        },
        {
          "name": "PullRequest",
          "id": "pullrequest",
          "href": "/graphql/reference/objects#pullrequest"
        }
      ]
    },
    {
      "name": "RequestedReviewer",
      "kind": "unions",
      "id": "requestedreviewer",
      "href": "/graphql/reference/unions#requestedreviewer",
      "description": "<p>Types that can be requested reviewers.</p>",
      "possibleTypes": [
        {
          "name": "Team",
          "id": "team",
          "href": "/graphql/reference/objects#team"
        },
        {
          "name": "User",
          "id": "user",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "ReviewDismissalAllowanceActor",
      "kind": "unions",
      "id": "reviewdismissalallowanceactor",
      "href": "/graphql/reference/unions#reviewdismissalallowanceactor",
      "description": "<p>Types that can be an actor.</p>",
      "possibleTypes": [
        {
          "name": "Team",
          "id": "team",
          "href": "/graphql/reference/objects#team"
        },
        {
          "name": "User",
          "id": "user",
          "href": "/graphql/reference/objects#user"
        }
      ]
    },
    {
      "name": "SearchResultItem",
      "kind": "unions",
      "id": "searchresultitem",
      "href": "/graphql/reference/unions#searchresultitem",
      "description": "<p>The results of a search.</p>",
      "possibleTypes": [
        {
          "name": "Issue",
          "id": "issue",
          "href": "/graphql/reference/objects#issue"
        },
        {
          "name": "Organization",
          "id": "organization",
          "href": "/graphql/reference/objects#organization"
        },
        {
          "name": "PullRequest",
          "id": "pullrequest",
          "href": "/graphql/reference/objects#pullrequest"
        },
        {
          "name": "Repository",
          "id": "repository",
          "href": "/graphql/reference/objects#repository"
        },
        {
          "name": "User",
          "id": "user",
          "href": "/graphql/reference/objects#user"
        }
      ]
    }
  ],
  "inputObjects": [
    {
      "name": "AddAssigneesToAssignableInput",
      "kind": "inputObjects",
      "id": "addassigneestoassignableinput",
      "href": "/graphql/reference/input-objects#addassigneestoassignableinput",
      "description": "<p>Autogenerated input type of AddAssigneesToAssignable.</p>",
      "inputFields": [
        {
          "name": "assignableId",
          "description": "<p>The id of the assignable object to add assignees to.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "assigneeIds",
          "description": "<p>The id of users to add as assignees.</p>",
          "type": "[ID!]!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "AddCommentInput",
      "kind": "inputObjects",
      "id": "addcommentinput",
      "href": "/graphql/reference/input-objects#addcommentinput",
      "description": "<p>Autogenerated input type of AddComment.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The contents of the comment.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "subjectId",
          "description": "<p>The Node ID of the subject to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "AddLabelsToLabelableInput",
      "kind": "inputObjects",
      "id": "addlabelstolabelableinput",
      "href": "/graphql/reference/input-objects#addlabelstolabelableinput",
      "description": "<p>Autogenerated input type of AddLabelsToLabelable.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "labelIds",
          "description": "<p>The ids of the labels to add.</p>",
          "type": "[ID!]!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "labelableId",
          "description": "<p>The id of the labelable object to add labels to.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "AddProjectCardInput",
      "kind": "inputObjects",
      "id": "addprojectcardinput",
      "href": "/graphql/reference/input-objects#addprojectcardinput",
      "description": "<p>Autogenerated input type of AddProjectCard.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "contentId",
          "description": "<p>The content of the card. Must be a member of the ProjectCardItem union.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "note",
          "description": "<p>The note on the card.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "projectColumnId",
          "description": "<p>The Node ID of the ProjectColumn.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "AddProjectColumnInput",
      "kind": "inputObjects",
      "id": "addprojectcolumninput",
      "href": "/graphql/reference/input-objects#addprojectcolumninput",
      "description": "<p>Autogenerated input type of AddProjectColumn.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The name of the column.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "projectId",
          "description": "<p>The Node ID of the project.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "AddPullRequestReviewCommentInput",
      "kind": "inputObjects",
      "id": "addpullrequestreviewcommentinput",
      "href": "/graphql/reference/input-objects#addpullrequestreviewcommentinput",
      "description": "<p>Autogenerated input type of AddPullRequestReviewComment.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The text of the comment.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "commitOID",
          "description": "<p>The SHA of the commit to comment on.</p>",
          "type": "GitObjectID",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "inReplyTo",
          "description": "<p>The comment id to reply to.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "path",
          "description": "<p>The relative path of the file to comment on.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "position",
          "description": "<p>The line index in the diff to comment on.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "pullRequestReviewId",
          "description": "<p>The Node ID of the review to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "AddPullRequestReviewInput",
      "kind": "inputObjects",
      "id": "addpullrequestreviewinput",
      "href": "/graphql/reference/input-objects#addpullrequestreviewinput",
      "description": "<p>Autogenerated input type of AddPullRequestReview.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The contents of the review body comment.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "comments",
          "description": "<p>The review line comments.</p>",
          "type": "[DraftPullRequestReviewComment]",
          "id": "draftpullrequestreviewcomment",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#draftpullrequestreviewcomment"
        },
        {
          "name": "commitOID",
          "description": "<p>The commit OID the review pertains to.</p>",
          "type": "GitObjectID",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "event",
          "description": "<p>The event to perform on the pull request review.</p>",
          "type": "PullRequestReviewEvent",
          "id": "pullrequestreviewevent",
          "kind": "enums",
          "href": "/graphql/reference/enums#pullrequestreviewevent"
        },
        {
          "name": "pullRequestId",
          "description": "<p>The Node ID of the pull request to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "AddReactionInput",
      "kind": "inputObjects",
      "id": "addreactioninput",
      "href": "/graphql/reference/input-objects#addreactioninput",
      "description": "<p>Autogenerated input type of AddReaction.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "content",
          "description": "<p>The name of the emoji to react with.</p>",
          "type": "ReactionContent!",
          "id": "reactioncontent",
          "kind": "enums",
          "href": "/graphql/reference/enums#reactioncontent"
        },
        {
          "name": "subjectId",
          "description": "<p>The Node ID of the subject to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "AddStarInput",
      "kind": "inputObjects",
      "id": "addstarinput",
      "href": "/graphql/reference/input-objects#addstarinput",
      "description": "<p>Autogenerated input type of AddStar.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "starrableId",
          "description": "<p>The Starrable ID to star.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "ChangeUserStatusInput",
      "kind": "inputObjects",
      "id": "changeuserstatusinput",
      "href": "/graphql/reference/input-objects#changeuserstatusinput",
      "description": "<p>Autogenerated input type of ChangeUserStatus.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "emoji",
          "description": "<p>The emoji to represent your status. Can either be a native Unicode emoji or an emoji name with colons, e.g., 😀.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "limitedAvailability",
          "description": "<p>Whether this status should indicate you are not fully available on GitHub, e.g., you are away.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "message",
          "description": "<p>A short description of your current status.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationId",
          "description": "<p>The ID of the organization whose members will be allowed to see the status. If\nomitted, the status will be publicly visible.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "CheckAnnotationData",
      "kind": "inputObjects",
      "id": "checkannotationdata",
      "href": "/graphql/reference/input-objects#checkannotationdata",
      "description": "<p>Information from a check run analysis to specific lines of code.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "inputFields": [
        {
          "name": "annotationLevel",
          "description": "<p>Represents an annotation's information level.</p>",
          "type": "CheckAnnotationLevel!",
          "id": "checkannotationlevel",
          "kind": "enums",
          "href": "/graphql/reference/enums#checkannotationlevel"
        },
        {
          "name": "location",
          "description": "<p>The location of the annotation.</p>",
          "type": "CheckAnnotationRange!",
          "id": "checkannotationrange",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#checkannotationrange"
        },
        {
          "name": "message",
          "description": "<p>A short description of the feedback for these lines of code.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "path",
          "description": "<p>The path of the file to add an annotation to.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "rawDetails",
          "description": "<p>Details about this annotation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "title",
          "description": "<p>The title that represents the annotation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "CheckAnnotationRange",
      "kind": "inputObjects",
      "id": "checkannotationrange",
      "href": "/graphql/reference/input-objects#checkannotationrange",
      "description": "<p>Information from a check run analysis to specific lines of code.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "inputFields": [
        {
          "name": "endColumn",
          "description": "<p>The ending column of the range.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "endLine",
          "description": "<p>The ending line of the range.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "startColumn",
          "description": "<p>The starting column of the range.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "startLine",
          "description": "<p>The starting line of the range.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "CheckRunAction",
      "kind": "inputObjects",
      "id": "checkrunaction",
      "href": "/graphql/reference/input-objects#checkrunaction",
      "description": "<p>Possible further actions the integrator can perform.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "inputFields": [
        {
          "name": "description",
          "description": "<p>A short explanation of what this action would do.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "identifier",
          "description": "<p>A reference for the action on the integrator's system.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "label",
          "description": "<p>The text to be displayed on a button in the web UI.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "CheckRunFilter",
      "kind": "inputObjects",
      "id": "checkrunfilter",
      "href": "/graphql/reference/input-objects#checkrunfilter",
      "description": "<p>The filters that are available when fetching check runs.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "inputFields": [
        {
          "name": "appId",
          "description": "<p>Filters the check runs created by this application ID.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "checkName",
          "description": "<p>Filters the check runs by this name.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "checkType",
          "description": "<p>Filters the check runs by this type.</p>",
          "type": "CheckRunType",
          "id": "checkruntype",
          "kind": "enums",
          "href": "/graphql/reference/enums#checkruntype"
        },
        {
          "name": "status",
          "description": "<p>Filters the check runs by this status.</p>",
          "type": "CheckStatusState",
          "id": "checkstatusstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#checkstatusstate"
        }
      ]
    },
    {
      "name": "CheckRunOutput",
      "kind": "inputObjects",
      "id": "checkrunoutput",
      "href": "/graphql/reference/input-objects#checkrunoutput",
      "description": "<p>Descriptive details about the check run.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "inputFields": [
        {
          "name": "annotations",
          "description": "<p>The annotations that are made as part of the check run.</p>",
          "type": "[CheckAnnotationData!]",
          "id": "checkannotationdata",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#checkannotationdata"
        },
        {
          "name": "images",
          "description": "<p>Images attached to the check run output displayed in the GitHub pull request UI.</p>",
          "type": "[CheckRunOutputImage!]",
          "id": "checkrunoutputimage",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#checkrunoutputimage"
        },
        {
          "name": "summary",
          "description": "<p>The summary of the check run (supports Commonmark).</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "text",
          "description": "<p>The details of the check run (supports Commonmark).</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "title",
          "description": "<p>A title to provide for this check run.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "CheckRunOutputImage",
      "kind": "inputObjects",
      "id": "checkrunoutputimage",
      "href": "/graphql/reference/input-objects#checkrunoutputimage",
      "description": "<p>Images attached to the check run output displayed in the GitHub pull request UI.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "inputFields": [
        {
          "name": "alt",
          "description": "<p>The alternative text for the image.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "caption",
          "description": "<p>A short image description.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "imageUrl",
          "description": "<p>The full URL of the image.</p>",
          "type": "URI!",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        }
      ]
    },
    {
      "name": "CheckSuiteAutoTriggerPreference",
      "kind": "inputObjects",
      "id": "checksuiteautotriggerpreference",
      "href": "/graphql/reference/input-objects#checksuiteautotriggerpreference",
      "description": "<p>The auto-trigger preferences that are available for check suites.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "inputFields": [
        {
          "name": "appId",
          "description": "<p>The node ID of the application that owns the check suite.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "setting",
          "description": "<p>Set to <code>true</code> to enable automatic creation of CheckSuite events upon pushes to the repository.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "CheckSuiteFilter",
      "kind": "inputObjects",
      "id": "checksuitefilter",
      "href": "/graphql/reference/input-objects#checksuitefilter",
      "description": "<p>The filters that are available when fetching check suites.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "inputFields": [
        {
          "name": "appId",
          "description": "<p>Filters the check suites created by this application ID.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "checkName",
          "description": "<p>Filters the check suites by this name.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "ClearLabelsFromLabelableInput",
      "kind": "inputObjects",
      "id": "clearlabelsfromlabelableinput",
      "href": "/graphql/reference/input-objects#clearlabelsfromlabelableinput",
      "description": "<p>Autogenerated input type of ClearLabelsFromLabelable.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "labelableId",
          "description": "<p>The id of the labelable object to clear the labels from.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "CloneProjectInput",
      "kind": "inputObjects",
      "id": "cloneprojectinput",
      "href": "/graphql/reference/input-objects#cloneprojectinput",
      "description": "<p>Autogenerated input type of CloneProject.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The description of the project.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "includeWorkflows",
          "description": "<p>Whether or not to clone the source project's workflows.</p>",
          "type": "Boolean!",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "name",
          "description": "<p>The name of the project.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "public",
          "description": "<p>The visibility of the project, defaults to false (private).</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "sourceId",
          "description": "<p>The source project to clone.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "targetOwnerId",
          "description": "<p>The owner ID to create the project under.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "CloseIssueInput",
      "kind": "inputObjects",
      "id": "closeissueinput",
      "href": "/graphql/reference/input-objects#closeissueinput",
      "description": "<p>Autogenerated input type of CloseIssue.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "issueId",
          "description": "<p>ID of the issue to be closed.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "ClosePullRequestInput",
      "kind": "inputObjects",
      "id": "closepullrequestinput",
      "href": "/graphql/reference/input-objects#closepullrequestinput",
      "description": "<p>Autogenerated input type of ClosePullRequest.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequestId",
          "description": "<p>ID of the pull request to be closed.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "CommitAuthor",
      "kind": "inputObjects",
      "id": "commitauthor",
      "href": "/graphql/reference/input-objects#commitauthor",
      "description": "<p>Specifies an author for filtering Git commits.</p>",
      "inputFields": [
        {
          "name": "emails",
          "description": "<p>Email addresses to filter by. Commits authored by any of the specified email addresses will be returned.</p>",
          "type": "[String!]",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>ID of a User to filter by. If non-null, only commits authored by this user\nwill be returned. This field takes precedence over emails.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        }
      ]
    },
    {
      "name": "CommitContributionOrder",
      "kind": "inputObjects",
      "id": "commitcontributionorder",
      "href": "/graphql/reference/input-objects#commitcontributionorder",
      "description": "<p>Ordering options for commit contribution connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field by which to order commit contributions.</p>",
          "type": "CommitContributionOrderField!",
          "id": "commitcontributionorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#commitcontributionorderfield"
        }
      ]
    },
    {
      "name": "ContributionOrder",
      "kind": "inputObjects",
      "id": "contributionorder",
      "href": "/graphql/reference/input-objects#contributionorder",
      "description": "<p>Ordering options for contribution connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field by which to order contributions.</p>",
          "type": "ContributionOrderField!",
          "id": "contributionorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#contributionorderfield"
        }
      ]
    },
    {
      "name": "ConvertProjectCardNoteToIssueInput",
      "kind": "inputObjects",
      "id": "convertprojectcardnotetoissueinput",
      "href": "/graphql/reference/input-objects#convertprojectcardnotetoissueinput",
      "description": "<p>Autogenerated input type of ConvertProjectCardNoteToIssue.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The body of the newly created issue.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "projectCardId",
          "description": "<p>The ProjectCard ID to convert.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "repositoryId",
          "description": "<p>The ID of the repository to create the issue in.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "title",
          "description": "<p>The title of the newly created issue. Defaults to the card's note text.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "CreateBranchProtectionRuleInput",
      "kind": "inputObjects",
      "id": "createbranchprotectionruleinput",
      "href": "/graphql/reference/input-objects#createbranchprotectionruleinput",
      "description": "<p>Autogenerated input type of CreateBranchProtectionRule.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "dismissesStaleReviews",
          "description": "<p>Will new commits pushed to matching branches dismiss pull request review approvals.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isAdminEnforced",
          "description": "<p>Can admins overwrite branch protection.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "pattern",
          "description": "<p>The glob-like pattern used to determine matching branches.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pushActorIds",
          "description": "<p>A list of User or Team IDs allowed to push to matching branches.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "repositoryId",
          "description": "<p>The global relay id of the repository in which a new branch protection rule should be created in.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "requiredApprovingReviewCount",
          "description": "<p>Number of approving reviews required to update matching branches.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "requiredStatusCheckContexts",
          "description": "<p>List of required status check contexts that must pass for commits to be accepted to matching branches.</p>",
          "type": "[String!]",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "requiresApprovingReviews",
          "description": "<p>Are approving reviews required to update matching branches.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresCodeOwnerReviews",
          "description": "<p>Are reviews from code owners required to update matching branches.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresCommitSignatures",
          "description": "<p>Are commits required to be signed.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresStatusChecks",
          "description": "<p>Are status checks required to update matching branches.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresStrictStatusChecks",
          "description": "<p>Are branches required to be up to date before merging.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "restrictsPushes",
          "description": "<p>Is pushing to matching branches restricted.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "restrictsReviewDismissals",
          "description": "<p>Is dismissal of pull request reviews restricted.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "reviewDismissalActorIds",
          "description": "<p>A list of User or Team IDs allowed to dismiss reviews on pull requests targeting matching branches.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        }
      ]
    },
    {
      "name": "CreateCheckRunInput",
      "kind": "inputObjects",
      "id": "createcheckruninput",
      "href": "/graphql/reference/input-objects#createcheckruninput",
      "description": "<p>Autogenerated input type of CreateCheckRun.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "inputFields": [
        {
          "name": "actions",
          "description": "<p>Possible further actions the integrator can perform, which a user may trigger.</p>",
          "type": "[CheckRunAction!]",
          "id": "checkrunaction",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#checkrunaction"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "completedAt",
          "description": "<p>The time that the check run finished.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "conclusion",
          "description": "<p>The final conclusion of the check.</p>",
          "type": "CheckConclusionState",
          "id": "checkconclusionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#checkconclusionstate"
        },
        {
          "name": "detailsUrl",
          "description": "<p>The URL of the integrator's site that has the full details of the check.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "externalId",
          "description": "<p>A reference for the run on the integrator's system.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "headSha",
          "description": "<p>The SHA of the head commit.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "name",
          "description": "<p>The name of the check.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "output",
          "description": "<p>Descriptive details about the run.</p>",
          "type": "CheckRunOutput",
          "id": "checkrunoutput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#checkrunoutput"
        },
        {
          "name": "repositoryId",
          "description": "<p>The node ID of the repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "startedAt",
          "description": "<p>The time that the check run began.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "status",
          "description": "<p>The current status.</p>",
          "type": "RequestableCheckStatusState",
          "id": "requestablecheckstatusstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#requestablecheckstatusstate"
        }
      ]
    },
    {
      "name": "CreateCheckSuiteInput",
      "kind": "inputObjects",
      "id": "createchecksuiteinput",
      "href": "/graphql/reference/input-objects#createchecksuiteinput",
      "description": "<p>Autogenerated input type of CreateCheckSuite.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "headSha",
          "description": "<p>The SHA of the head commit.</p>",
          "type": "GitObjectID!",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "repositoryId",
          "description": "<p>The Node ID of the repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "CreateContentAttachmentInput",
      "kind": "inputObjects",
      "id": "createcontentattachmentinput",
      "href": "/graphql/reference/input-objects#createcontentattachmentinput",
      "description": "<p>Autogenerated input type of CreateContentAttachment.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The body of the content attachment, which may contain markdown.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "contentReferenceId",
          "description": "<p>The node ID of the content_reference.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "title",
          "description": "<p>The title of the content attachment.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "CreateDeploymentInput",
      "kind": "inputObjects",
      "id": "createdeploymentinput",
      "href": "/graphql/reference/input-objects#createdeploymentinput",
      "description": "<p>Autogenerated input type of CreateDeployment.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Deployments preview",
        "description": "This preview adds support for deployments mutations and new deployments features.",
        "toggled_by": "flash-preview",
        "toggled_on": [
          "DeploymentStatus.environment",
          "Mutation.createDeploymentStatus",
          "Mutation.createDeployment"
        ],
        "owning_teams": [
          "@github/ecosystem-api"
        ],
        "accept_header": "application/vnd.github.flash-preview+json",
        "href": "/graphql/overview/schema-previews#deployments-preview"
      },
      "inputFields": [
        {
          "name": "autoMerge",
          "description": "<p>Attempt to automatically merge the default branch into the requested ref, defaults to true.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "description",
          "description": "<p>Short description of the deployment.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "environment",
          "description": "<p>Name for the target deployment environment.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "payload",
          "description": "<p>JSON payload with extra information about the deployment.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "refId",
          "description": "<p>The node ID of the ref to be deployed.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "repositoryId",
          "description": "<p>The node ID of the repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "requiredContexts",
          "description": "<p>The status contexts to verify against commit status checks. To bypass required\ncontexts, pass an empty array. Defaults to all unique contexts.</p>",
          "type": "[String!]",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "task",
          "description": "<p>Specifies a task to execute.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "CreateDeploymentStatusInput",
      "kind": "inputObjects",
      "id": "createdeploymentstatusinput",
      "href": "/graphql/reference/input-objects#createdeploymentstatusinput",
      "description": "<p>Autogenerated input type of CreateDeploymentStatus.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Deployments preview",
        "description": "This preview adds support for deployments mutations and new deployments features.",
        "toggled_by": "flash-preview",
        "toggled_on": [
          "DeploymentStatus.environment",
          "Mutation.createDeploymentStatus",
          "Mutation.createDeployment"
        ],
        "owning_teams": [
          "@github/ecosystem-api"
        ],
        "accept_header": "application/vnd.github.flash-preview+json",
        "href": "/graphql/overview/schema-previews#deployments-preview"
      },
      "inputFields": [
        {
          "name": "autoInactive",
          "description": "<p>Adds a new inactive status to all non-transient, non-production environment\ndeployments with the same repository and environment name as the created\nstatus's deployment.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "deploymentId",
          "description": "<p>The node ID of the deployment.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "description",
          "description": "<p>A short description of the status. Maximum length of 140 characters.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "environment",
          "description": "<p>If provided, updates the environment of the deploy. Otherwise, does not modify the environment.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "environmentUrl",
          "description": "<p>Sets the URL for accessing your environment.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "logUrl",
          "description": "<p>The log URL to associate with this status.       This URL should contain\noutput to keep the user updated while the task is running       or serve as\nhistorical information for what happened in the deployment.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "state",
          "description": "<p>The state of the deployment.</p>",
          "type": "DeploymentStatusState!",
          "id": "deploymentstatusstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#deploymentstatusstate"
        }
      ]
    },
    {
      "name": "CreateIssueInput",
      "kind": "inputObjects",
      "id": "createissueinput",
      "href": "/graphql/reference/input-objects#createissueinput",
      "description": "<p>Autogenerated input type of CreateIssue.</p>",
      "inputFields": [
        {
          "name": "assigneeIds",
          "description": "<p>The Node ID for the user assignee for this issue.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "body",
          "description": "<p>The body for the issue description.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "labelIds",
          "description": "<p>An array of Node IDs of labels for this issue.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "milestoneId",
          "description": "<p>The Node ID of the milestone for this issue.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "projectIds",
          "description": "<p>An array of Node IDs for projects associated with this issue.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "repositoryId",
          "description": "<p>The Node ID of the repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "title",
          "description": "<p>The title for the issue.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "CreateLabelInput",
      "kind": "inputObjects",
      "id": "createlabelinput",
      "href": "/graphql/reference/input-objects#createlabelinput",
      "description": "<p>Autogenerated input type of CreateLabel.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Labels preview",
        "description": "This preview adds support for adding, updating, creating and deleting labels.",
        "toggled_by": "bane-preview",
        "toggled_on": [
          "Mutation.createLabel",
          "Mutation.deleteLabel",
          "Mutation.updateLabel"
        ],
        "owning_teams": [
          "@github/pe-pull-requests"
        ],
        "accept_header": "application/vnd.github.bane-preview+json",
        "href": "/graphql/overview/schema-previews#labels-preview"
      },
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "color",
          "description": "<p>A 6 character hex code, without the leading #, identifying the color of the label.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The name of the label.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryId",
          "description": "<p>The Node ID of the repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "CreateProjectInput",
      "kind": "inputObjects",
      "id": "createprojectinput",
      "href": "/graphql/reference/input-objects#createprojectinput",
      "description": "<p>Autogenerated input type of CreateProject.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The description of project.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The name of project.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "ownerId",
          "description": "<p>The owner ID to create the project under.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "CreatePullRequestInput",
      "kind": "inputObjects",
      "id": "createpullrequestinput",
      "href": "/graphql/reference/input-objects#createpullrequestinput",
      "description": "<p>Autogenerated input type of CreatePullRequest.</p>",
      "inputFields": [
        {
          "name": "baseRefName",
          "description": "<p>The name of the branch you want your changes pulled into. This should be an existing branch\non the current repository. You cannot update the base branch on a pull request to point\nto another repository.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "body",
          "description": "<p>The contents of the pull request.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "draft",
          "description": "<p>Indicates whether this pull request should be a draft.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean",
          "isDeprecated": false,
          "preview": {
            "title": "Draft pull requests preview",
            "description": "This preview adds support for draft pull requests.",
            "toggled_by": "shadow-cat-preview",
            "toggled_on": [
              "Mutation.markPullRequestReadyForReview",
              "CreatePullRequestInput.draft",
              "PullRequest.isDraft"
            ],
            "owning_teams": [
              "@github/pe-pull-requests"
            ],
            "accept_header": "application/vnd.github.shadow-cat-preview+json",
            "href": "/graphql/overview/schema-previews#draft-pull-requests-preview"
          }
        },
        {
          "name": "headRefName",
          "description": "<p>The name of the branch where your changes are implemented. For cross-repository pull requests\nin the same network, namespace <code>head_ref_name</code> with a user like this: <code>username:branch</code>.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "maintainerCanModify",
          "description": "<p>Indicates whether maintainers can modify the pull request.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "repositoryId",
          "description": "<p>The Node ID of the repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "title",
          "description": "<p>The title of the pull request.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "CreateTeamDiscussionCommentInput",
      "kind": "inputObjects",
      "id": "createteamdiscussioncommentinput",
      "href": "/graphql/reference/input-objects#createteamdiscussioncommentinput",
      "description": "<p>Autogenerated input type of CreateTeamDiscussionComment.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Team discussions preview",
        "description": "Adds support for reading and managing discussions within teams.",
        "toggled_by": "echo-preview",
        "toggled_on": [
          "Mutation.createTeamDiscussion",
          "Mutation.createTeamDiscussionComment",
          "Mutation.deleteTeamDiscussion",
          "Mutation.deleteTeamDiscussionComment",
          "Mutation.updateTeamDiscussion",
          "Mutation.updateTeamDiscussionComment",
          "Team.discussion",
          "Team.discussions",
          "Team.discussionsResourcePath",
          "Team.discussionsUrl",
          "TeamDiscussion",
          "TeamDiscussionComment",
          "TeamDiscussionCommentConnection",
          "TeamDiscussionCommentEdge",
          "TeamDiscussionCommentOrder",
          "TeamDiscussionCommentOrderField",
          "TeamDiscussionConnection",
          "TeamDiscussionEdge",
          "TeamDiscussionOrder",
          "TeamDiscussionOrderField"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.echo-preview+json",
        "href": "/graphql/overview/schema-previews#team-discussions-preview"
      },
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The content of the comment.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "discussionId",
          "description": "<p>The ID of the discussion to which the comment belongs.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "CreateTeamDiscussionInput",
      "kind": "inputObjects",
      "id": "createteamdiscussioninput",
      "href": "/graphql/reference/input-objects#createteamdiscussioninput",
      "description": "<p>Autogenerated input type of CreateTeamDiscussion.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Team discussions preview",
        "description": "Adds support for reading and managing discussions within teams.",
        "toggled_by": "echo-preview",
        "toggled_on": [
          "Mutation.createTeamDiscussion",
          "Mutation.createTeamDiscussionComment",
          "Mutation.deleteTeamDiscussion",
          "Mutation.deleteTeamDiscussionComment",
          "Mutation.updateTeamDiscussion",
          "Mutation.updateTeamDiscussionComment",
          "Team.discussion",
          "Team.discussions",
          "Team.discussionsResourcePath",
          "Team.discussionsUrl",
          "TeamDiscussion",
          "TeamDiscussionComment",
          "TeamDiscussionCommentConnection",
          "TeamDiscussionCommentEdge",
          "TeamDiscussionCommentOrder",
          "TeamDiscussionCommentOrderField",
          "TeamDiscussionConnection",
          "TeamDiscussionEdge",
          "TeamDiscussionOrder",
          "TeamDiscussionOrderField"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.echo-preview+json",
        "href": "/graphql/overview/schema-previews#team-discussions-preview"
      },
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The content of the discussion.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "private",
          "description": "<p>If true, restricts the visiblity of this discussion to team members and\norganization admins. If false or not specified, allows any organization member\nto view this discussion.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "teamId",
          "description": "<p>The ID of the team to which the discussion belongs.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "title",
          "description": "<p>The title of the discussion.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "DeleteBranchProtectionRuleInput",
      "kind": "inputObjects",
      "id": "deletebranchprotectionruleinput",
      "href": "/graphql/reference/input-objects#deletebranchprotectionruleinput",
      "description": "<p>Autogenerated input type of DeleteBranchProtectionRule.</p>",
      "inputFields": [
        {
          "name": "branchProtectionRuleId",
          "description": "<p>The global relay id of the branch protection rule to be deleted.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "DeleteIssueCommentInput",
      "kind": "inputObjects",
      "id": "deleteissuecommentinput",
      "href": "/graphql/reference/input-objects#deleteissuecommentinput",
      "description": "<p>Autogenerated input type of DeleteIssueComment.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The ID of the comment to delete.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeleteIssueInput",
      "kind": "inputObjects",
      "id": "deleteissueinput",
      "href": "/graphql/reference/input-objects#deleteissueinput",
      "description": "<p>Autogenerated input type of DeleteIssue.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "issueId",
          "description": "<p>The ID of the issue to delete.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeleteLabelInput",
      "kind": "inputObjects",
      "id": "deletelabelinput",
      "href": "/graphql/reference/input-objects#deletelabelinput",
      "description": "<p>Autogenerated input type of DeleteLabel.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Labels preview",
        "description": "This preview adds support for adding, updating, creating and deleting labels.",
        "toggled_by": "bane-preview",
        "toggled_on": [
          "Mutation.createLabel",
          "Mutation.deleteLabel",
          "Mutation.updateLabel"
        ],
        "owning_teams": [
          "@github/pe-pull-requests"
        ],
        "accept_header": "application/vnd.github.bane-preview+json",
        "href": "/graphql/overview/schema-previews#labels-preview"
      },
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The Node ID of the label to be deleted.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeleteProjectCardInput",
      "kind": "inputObjects",
      "id": "deleteprojectcardinput",
      "href": "/graphql/reference/input-objects#deleteprojectcardinput",
      "description": "<p>Autogenerated input type of DeleteProjectCard.</p>",
      "inputFields": [
        {
          "name": "cardId",
          "description": "<p>The id of the card to delete.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "DeleteProjectColumnInput",
      "kind": "inputObjects",
      "id": "deleteprojectcolumninput",
      "href": "/graphql/reference/input-objects#deleteprojectcolumninput",
      "description": "<p>Autogenerated input type of DeleteProjectColumn.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "columnId",
          "description": "<p>The id of the column to delete.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeleteProjectInput",
      "kind": "inputObjects",
      "id": "deleteprojectinput",
      "href": "/graphql/reference/input-objects#deleteprojectinput",
      "description": "<p>Autogenerated input type of DeleteProject.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "projectId",
          "description": "<p>The Project ID to update.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeletePullRequestReviewCommentInput",
      "kind": "inputObjects",
      "id": "deletepullrequestreviewcommentinput",
      "href": "/graphql/reference/input-objects#deletepullrequestreviewcommentinput",
      "description": "<p>Autogenerated input type of DeletePullRequestReviewComment.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The ID of the comment to delete.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeletePullRequestReviewInput",
      "kind": "inputObjects",
      "id": "deletepullrequestreviewinput",
      "href": "/graphql/reference/input-objects#deletepullrequestreviewinput",
      "description": "<p>Autogenerated input type of DeletePullRequestReview.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequestReviewId",
          "description": "<p>The Node ID of the pull request review to delete.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeleteTeamDiscussionCommentInput",
      "kind": "inputObjects",
      "id": "deleteteamdiscussioncommentinput",
      "href": "/graphql/reference/input-objects#deleteteamdiscussioncommentinput",
      "description": "<p>Autogenerated input type of DeleteTeamDiscussionComment.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Team discussions preview",
        "description": "Adds support for reading and managing discussions within teams.",
        "toggled_by": "echo-preview",
        "toggled_on": [
          "Mutation.createTeamDiscussion",
          "Mutation.createTeamDiscussionComment",
          "Mutation.deleteTeamDiscussion",
          "Mutation.deleteTeamDiscussionComment",
          "Mutation.updateTeamDiscussion",
          "Mutation.updateTeamDiscussionComment",
          "Team.discussion",
          "Team.discussions",
          "Team.discussionsResourcePath",
          "Team.discussionsUrl",
          "TeamDiscussion",
          "TeamDiscussionComment",
          "TeamDiscussionCommentConnection",
          "TeamDiscussionCommentEdge",
          "TeamDiscussionCommentOrder",
          "TeamDiscussionCommentOrderField",
          "TeamDiscussionConnection",
          "TeamDiscussionEdge",
          "TeamDiscussionOrder",
          "TeamDiscussionOrderField"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.echo-preview+json",
        "href": "/graphql/overview/schema-previews#team-discussions-preview"
      },
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The ID of the comment to delete.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeleteTeamDiscussionInput",
      "kind": "inputObjects",
      "id": "deleteteamdiscussioninput",
      "href": "/graphql/reference/input-objects#deleteteamdiscussioninput",
      "description": "<p>Autogenerated input type of DeleteTeamDiscussion.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Team discussions preview",
        "description": "Adds support for reading and managing discussions within teams.",
        "toggled_by": "echo-preview",
        "toggled_on": [
          "Mutation.createTeamDiscussion",
          "Mutation.createTeamDiscussionComment",
          "Mutation.deleteTeamDiscussion",
          "Mutation.deleteTeamDiscussionComment",
          "Mutation.updateTeamDiscussion",
          "Mutation.updateTeamDiscussionComment",
          "Team.discussion",
          "Team.discussions",
          "Team.discussionsResourcePath",
          "Team.discussionsUrl",
          "TeamDiscussion",
          "TeamDiscussionComment",
          "TeamDiscussionCommentConnection",
          "TeamDiscussionCommentEdge",
          "TeamDiscussionCommentOrder",
          "TeamDiscussionCommentOrderField",
          "TeamDiscussionConnection",
          "TeamDiscussionEdge",
          "TeamDiscussionOrder",
          "TeamDiscussionOrderField"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.echo-preview+json",
        "href": "/graphql/overview/schema-previews#team-discussions-preview"
      },
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The discussion ID to delete.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DeploymentOrder",
      "kind": "inputObjects",
      "id": "deploymentorder",
      "href": "/graphql/reference/input-objects#deploymentorder",
      "description": "<p>Ordering options for deployment connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order deployments by.</p>",
          "type": "DeploymentOrderField!",
          "id": "deploymentorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#deploymentorderfield"
        }
      ]
    },
    {
      "name": "DismissPullRequestReviewInput",
      "kind": "inputObjects",
      "id": "dismisspullrequestreviewinput",
      "href": "/graphql/reference/input-objects#dismisspullrequestreviewinput",
      "description": "<p>Autogenerated input type of DismissPullRequestReview.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "message",
          "description": "<p>The contents of the pull request review dismissal message.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequestReviewId",
          "description": "<p>The Node ID of the pull request review to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "DraftPullRequestReviewComment",
      "kind": "inputObjects",
      "id": "draftpullrequestreviewcomment",
      "href": "/graphql/reference/input-objects#draftpullrequestreviewcomment",
      "description": "<p>Specifies a review comment to be left with a Pull Request Review.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>Body of the comment to leave.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "path",
          "description": "<p>Path to the file being commented on.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "position",
          "description": "<p>Position in the file to leave a comment on.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "GistOrder",
      "kind": "inputObjects",
      "id": "gistorder",
      "href": "/graphql/reference/input-objects#gistorder",
      "description": "<p>Ordering options for gist connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order repositories by.</p>",
          "type": "GistOrderField!",
          "id": "gistorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#gistorderfield"
        }
      ]
    },
    {
      "name": "ImportProjectInput",
      "kind": "inputObjects",
      "id": "importprojectinput",
      "href": "/graphql/reference/input-objects#importprojectinput",
      "description": "<p>Autogenerated input type of ImportProject.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The description of Project.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "columnImports",
          "description": "<p>A list of columns containing issues and pull requests.</p>",
          "type": "[ProjectColumnImport!]!",
          "id": "projectcolumnimport",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#projectcolumnimport"
        },
        {
          "name": "name",
          "description": "<p>The name of Project.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "ownerName",
          "description": "<p>The name of the Organization or User to create the Project under.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "public",
          "description": "<p>Whether the Project is public or not.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "IssueFilters",
      "kind": "inputObjects",
      "id": "issuefilters",
      "href": "/graphql/reference/input-objects#issuefilters",
      "description": "<p>Ways in which to filter lists of issues.</p>",
      "inputFields": [
        {
          "name": "assignee",
          "description": "<p>List issues assigned to given name. Pass in <code>null</code> for issues with no assigned\nuser, and <code>*</code> for issues assigned to any user.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "createdBy",
          "description": "<p>List issues created by given name.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "labels",
          "description": "<p>List issues where the list of label names exist on the issue.</p>",
          "type": "[String!]",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "mentioned",
          "description": "<p>List issues where the given name is mentioned in the issue.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "milestone",
          "description": "<p>List issues by given milestone argument. If an string representation of an\ninteger is passed, it should refer to a milestone by its number field. Pass in\n<code>null</code> for issues with no milestone, and <code>*</code> for issues that are assigned to any milestone.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "since",
          "description": "<p>List issues that have been updated at or after the given date.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "states",
          "description": "<p>List issues filtered by the list of states given.</p>",
          "type": "[IssueState!]",
          "id": "issuestate",
          "kind": "enums",
          "href": "/graphql/reference/enums#issuestate"
        },
        {
          "name": "viewerSubscribed",
          "description": "<p>List issues subscribed to by viewer.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        }
      ]
    },
    {
      "name": "IssueOrder",
      "kind": "inputObjects",
      "id": "issueorder",
      "href": "/graphql/reference/input-objects#issueorder",
      "description": "<p>Ways in which lists of issues can be ordered upon return.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order issues by the specified field.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field in which to order issues by.</p>",
          "type": "IssueOrderField!",
          "id": "issueorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#issueorderfield"
        }
      ]
    },
    {
      "name": "LanguageOrder",
      "kind": "inputObjects",
      "id": "languageorder",
      "href": "/graphql/reference/input-objects#languageorder",
      "description": "<p>Ordering options for language connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order languages by.</p>",
          "type": "LanguageOrderField!",
          "id": "languageorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#languageorderfield"
        }
      ]
    },
    {
      "name": "LockLockableInput",
      "kind": "inputObjects",
      "id": "locklockableinput",
      "href": "/graphql/reference/input-objects#locklockableinput",
      "description": "<p>Autogenerated input type of LockLockable.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "lockReason",
          "description": "<p>A reason for why the issue or pull request will be locked.</p>",
          "type": "LockReason",
          "id": "lockreason",
          "kind": "enums",
          "href": "/graphql/reference/enums#lockreason"
        },
        {
          "name": "lockableId",
          "description": "<p>ID of the issue or pull request to be locked.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "MarkPullRequestReadyForReviewInput",
      "kind": "inputObjects",
      "id": "markpullrequestreadyforreviewinput",
      "href": "/graphql/reference/input-objects#markpullrequestreadyforreviewinput",
      "description": "<p>Autogenerated input type of MarkPullRequestReadyForReview.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Draft pull requests preview",
        "description": "This preview adds support for draft pull requests.",
        "toggled_by": "shadow-cat-preview",
        "toggled_on": [
          "Mutation.markPullRequestReadyForReview",
          "CreatePullRequestInput.draft",
          "PullRequest.isDraft"
        ],
        "owning_teams": [
          "@github/pe-pull-requests"
        ],
        "accept_header": "application/vnd.github.shadow-cat-preview+json",
        "href": "/graphql/overview/schema-previews#draft-pull-requests-preview"
      },
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequestId",
          "description": "<p>ID of the pull request to be marked as ready for review.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "MergePullRequestInput",
      "kind": "inputObjects",
      "id": "mergepullrequestinput",
      "href": "/graphql/reference/input-objects#mergepullrequestinput",
      "description": "<p>Autogenerated input type of MergePullRequest.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "commitBody",
          "description": "<p>Commit body to use for the merge commit; if omitted, a default message will be used.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "commitHeadline",
          "description": "<p>Commit headline to use for the merge commit; if omitted, a default message will be used.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "expectedHeadOid",
          "description": "<p>OID that the pull request head ref must match to allow merge; if omitted, no check is performed.</p>",
          "type": "GitObjectID",
          "id": "gitobjectid",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#gitobjectid"
        },
        {
          "name": "pullRequestId",
          "description": "<p>ID of the pull request to be merged.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "MilestoneOrder",
      "kind": "inputObjects",
      "id": "milestoneorder",
      "href": "/graphql/reference/input-objects#milestoneorder",
      "description": "<p>Ordering options for milestone connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order milestones by.</p>",
          "type": "MilestoneOrderField!",
          "id": "milestoneorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#milestoneorderfield"
        }
      ]
    },
    {
      "name": "MinimizeCommentInput",
      "kind": "inputObjects",
      "id": "minimizecommentinput",
      "href": "/graphql/reference/input-objects#minimizecommentinput",
      "description": "<p>Autogenerated input type of MinimizeComment.</p>",
      "inputFields": [
        {
          "name": "classifier",
          "description": "<p>The classification of comment.</p>",
          "type": "ReportedContentClassifiers!",
          "id": "reportedcontentclassifiers",
          "kind": "enums",
          "href": "/graphql/reference/enums#reportedcontentclassifiers"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "subjectId",
          "description": "<p>The Node ID of the subject to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "MoveProjectCardInput",
      "kind": "inputObjects",
      "id": "moveprojectcardinput",
      "href": "/graphql/reference/input-objects#moveprojectcardinput",
      "description": "<p>Autogenerated input type of MoveProjectCard.</p>",
      "inputFields": [
        {
          "name": "afterCardId",
          "description": "<p>Place the new card after the card with this id. Pass null to place it at the top.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "cardId",
          "description": "<p>The id of the card to move.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "columnId",
          "description": "<p>The id of the column to move it into.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "MoveProjectColumnInput",
      "kind": "inputObjects",
      "id": "moveprojectcolumninput",
      "href": "/graphql/reference/input-objects#moveprojectcolumninput",
      "description": "<p>Autogenerated input type of MoveProjectColumn.</p>",
      "inputFields": [
        {
          "name": "afterColumnId",
          "description": "<p>Place the new column after the column with this id. Pass null to place it at the front.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "columnId",
          "description": "<p>The id of the column to move.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "PinIssueInput",
      "kind": "inputObjects",
      "id": "pinissueinput",
      "href": "/graphql/reference/input-objects#pinissueinput",
      "description": "<p>Autogenerated input type of PinIssue.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "issueId",
          "description": "<p>The ID of the issue to be pinned.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "ProjectCardImport",
      "kind": "inputObjects",
      "id": "projectcardimport",
      "href": "/graphql/reference/input-objects#projectcardimport",
      "description": "<p>An issue or PR and its owning repository to be used in a project card.</p>",
      "inputFields": [
        {
          "name": "number",
          "description": "<p>The issue or pull request number.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "repository",
          "description": "<p>Repository name with owner (owner/repository).</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "ProjectColumnImport",
      "kind": "inputObjects",
      "id": "projectcolumnimport",
      "href": "/graphql/reference/input-objects#projectcolumnimport",
      "description": "<p>A project column and a list of its issues and PRs.</p>",
      "inputFields": [
        {
          "name": "columnName",
          "description": "<p>The name of the column.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "issues",
          "description": "<p>A list of issues and pull requests in the column.</p>",
          "type": "[ProjectCardImport!]",
          "id": "projectcardimport",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#projectcardimport"
        },
        {
          "name": "position",
          "description": "<p>The position of the column, starting from 0.</p>",
          "type": "Int!",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        }
      ]
    },
    {
      "name": "ProjectOrder",
      "kind": "inputObjects",
      "id": "projectorder",
      "href": "/graphql/reference/input-objects#projectorder",
      "description": "<p>Ways in which lists of projects can be ordered upon return.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order projects by the specified field.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field in which to order projects by.</p>",
          "type": "ProjectOrderField!",
          "id": "projectorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#projectorderfield"
        }
      ]
    },
    {
      "name": "PullRequestOrder",
      "kind": "inputObjects",
      "id": "pullrequestorder",
      "href": "/graphql/reference/input-objects#pullrequestorder",
      "description": "<p>Ways in which lists of issues can be ordered upon return.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order pull requests by the specified field.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field in which to order pull requests by.</p>",
          "type": "PullRequestOrderField!",
          "id": "pullrequestorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#pullrequestorderfield"
        }
      ]
    },
    {
      "name": "ReactionOrder",
      "kind": "inputObjects",
      "id": "reactionorder",
      "href": "/graphql/reference/input-objects#reactionorder",
      "description": "<p>Ways in which lists of reactions can be ordered upon return.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order reactions by the specified field.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field in which to order reactions by.</p>",
          "type": "ReactionOrderField!",
          "id": "reactionorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#reactionorderfield"
        }
      ]
    },
    {
      "name": "RefOrder",
      "kind": "inputObjects",
      "id": "reforder",
      "href": "/graphql/reference/input-objects#reforder",
      "description": "<p>Ways in which lists of git refs can be ordered upon return.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order refs by the specified field.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field in which to order refs by.</p>",
          "type": "RefOrderField!",
          "id": "reforderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#reforderfield"
        }
      ]
    },
    {
      "name": "ReleaseOrder",
      "kind": "inputObjects",
      "id": "releaseorder",
      "href": "/graphql/reference/input-objects#releaseorder",
      "description": "<p>Ways in which lists of releases can be ordered upon return.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order releases by the specified field.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field in which to order releases by.</p>",
          "type": "ReleaseOrderField!",
          "id": "releaseorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#releaseorderfield"
        }
      ]
    },
    {
      "name": "RemoveAssigneesFromAssignableInput",
      "kind": "inputObjects",
      "id": "removeassigneesfromassignableinput",
      "href": "/graphql/reference/input-objects#removeassigneesfromassignableinput",
      "description": "<p>Autogenerated input type of RemoveAssigneesFromAssignable.</p>",
      "inputFields": [
        {
          "name": "assignableId",
          "description": "<p>The id of the assignable object to remove assignees from.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "assigneeIds",
          "description": "<p>The id of users to remove as assignees.</p>",
          "type": "[ID!]!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "RemoveLabelsFromLabelableInput",
      "kind": "inputObjects",
      "id": "removelabelsfromlabelableinput",
      "href": "/graphql/reference/input-objects#removelabelsfromlabelableinput",
      "description": "<p>Autogenerated input type of RemoveLabelsFromLabelable.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "labelIds",
          "description": "<p>The ids of labels to remove.</p>",
          "type": "[ID!]!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "labelableId",
          "description": "<p>The id of the Labelable to remove labels from.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "RemoveOutsideCollaboratorInput",
      "kind": "inputObjects",
      "id": "removeoutsidecollaboratorinput",
      "href": "/graphql/reference/input-objects#removeoutsidecollaboratorinput",
      "description": "<p>Autogenerated input type of RemoveOutsideCollaborator.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "organizationId",
          "description": "<p>The ID of the organization to remove the outside collaborator from.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "userId",
          "description": "<p>The ID of the outside collaborator to remove.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "RemoveReactionInput",
      "kind": "inputObjects",
      "id": "removereactioninput",
      "href": "/graphql/reference/input-objects#removereactioninput",
      "description": "<p>Autogenerated input type of RemoveReaction.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "content",
          "description": "<p>The name of the emoji reaction to remove.</p>",
          "type": "ReactionContent!",
          "id": "reactioncontent",
          "kind": "enums",
          "href": "/graphql/reference/enums#reactioncontent"
        },
        {
          "name": "subjectId",
          "description": "<p>The Node ID of the subject to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "RemoveStarInput",
      "kind": "inputObjects",
      "id": "removestarinput",
      "href": "/graphql/reference/input-objects#removestarinput",
      "description": "<p>Autogenerated input type of RemoveStar.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "starrableId",
          "description": "<p>The Starrable ID to unstar.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "ReopenIssueInput",
      "kind": "inputObjects",
      "id": "reopenissueinput",
      "href": "/graphql/reference/input-objects#reopenissueinput",
      "description": "<p>Autogenerated input type of ReopenIssue.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "issueId",
          "description": "<p>ID of the issue to be opened.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "ReopenPullRequestInput",
      "kind": "inputObjects",
      "id": "reopenpullrequestinput",
      "href": "/graphql/reference/input-objects#reopenpullrequestinput",
      "description": "<p>Autogenerated input type of ReopenPullRequest.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequestId",
          "description": "<p>ID of the pull request to be reopened.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "RepositoryOrder",
      "kind": "inputObjects",
      "id": "repositoryorder",
      "href": "/graphql/reference/input-objects#repositoryorder",
      "description": "<p>Ordering options for repository connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order repositories by.</p>",
          "type": "RepositoryOrderField!",
          "id": "repositoryorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#repositoryorderfield"
        }
      ]
    },
    {
      "name": "RequestReviewsInput",
      "kind": "inputObjects",
      "id": "requestreviewsinput",
      "href": "/graphql/reference/input-objects#requestreviewsinput",
      "description": "<p>Autogenerated input type of RequestReviews.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequestId",
          "description": "<p>The Node ID of the pull request to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "teamIds",
          "description": "<p>The Node IDs of the team to request.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "union",
          "description": "<p>Add users to the set rather than replace.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "userIds",
          "description": "<p>The Node IDs of the user to request.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "RerequestCheckSuiteInput",
      "kind": "inputObjects",
      "id": "rerequestchecksuiteinput",
      "href": "/graphql/reference/input-objects#rerequestchecksuiteinput",
      "description": "<p>Autogenerated input type of RerequestCheckSuite.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "inputFields": [
        {
          "name": "checkSuiteId",
          "description": "<p>The Node ID of the check suite.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryId",
          "description": "<p>The Node ID of the repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "ResolveReviewThreadInput",
      "kind": "inputObjects",
      "id": "resolvereviewthreadinput",
      "href": "/graphql/reference/input-objects#resolvereviewthreadinput",
      "description": "<p>Autogenerated input type of ResolveReviewThread.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "threadId",
          "description": "<p>The ID of the thread to resolve.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "StarOrder",
      "kind": "inputObjects",
      "id": "starorder",
      "href": "/graphql/reference/input-objects#starorder",
      "description": "<p>Ways in which star connections can be ordered.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order nodes.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field in which to order nodes by.</p>",
          "type": "StarOrderField!",
          "id": "starorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#starorderfield"
        }
      ]
    },
    {
      "name": "SubmitPullRequestReviewInput",
      "kind": "inputObjects",
      "id": "submitpullrequestreviewinput",
      "href": "/graphql/reference/input-objects#submitpullrequestreviewinput",
      "description": "<p>Autogenerated input type of SubmitPullRequestReview.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The text field to set on the Pull Request Review.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "event",
          "description": "<p>The event to send to the Pull Request Review.</p>",
          "type": "PullRequestReviewEvent!",
          "id": "pullrequestreviewevent",
          "kind": "enums",
          "href": "/graphql/reference/enums#pullrequestreviewevent"
        },
        {
          "name": "pullRequestReviewId",
          "description": "<p>The Pull Request Review ID to submit.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "TeamDiscussionCommentOrder",
      "kind": "inputObjects",
      "id": "teamdiscussioncommentorder",
      "href": "/graphql/reference/input-objects#teamdiscussioncommentorder",
      "description": "<p>Ways in which team discussion comment connections can be ordered.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Team discussions preview",
        "description": "Adds support for reading and managing discussions within teams.",
        "toggled_by": "echo-preview",
        "toggled_on": [
          "Mutation.createTeamDiscussion",
          "Mutation.createTeamDiscussionComment",
          "Mutation.deleteTeamDiscussion",
          "Mutation.deleteTeamDiscussionComment",
          "Mutation.updateTeamDiscussion",
          "Mutation.updateTeamDiscussionComment",
          "Team.discussion",
          "Team.discussions",
          "Team.discussionsResourcePath",
          "Team.discussionsUrl",
          "TeamDiscussion",
          "TeamDiscussionComment",
          "TeamDiscussionCommentConnection",
          "TeamDiscussionCommentEdge",
          "TeamDiscussionCommentOrder",
          "TeamDiscussionCommentOrderField",
          "TeamDiscussionConnection",
          "TeamDiscussionEdge",
          "TeamDiscussionOrder",
          "TeamDiscussionOrderField"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.echo-preview+json",
        "href": "/graphql/overview/schema-previews#team-discussions-preview"
      },
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order nodes.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field by which to order nodes.</p>",
          "type": "TeamDiscussionCommentOrderField!",
          "id": "teamdiscussioncommentorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#teamdiscussioncommentorderfield"
        }
      ]
    },
    {
      "name": "TeamDiscussionOrder",
      "kind": "inputObjects",
      "id": "teamdiscussionorder",
      "href": "/graphql/reference/input-objects#teamdiscussionorder",
      "description": "<p>Ways in which team discussion connections can be ordered.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Team discussions preview",
        "description": "Adds support for reading and managing discussions within teams.",
        "toggled_by": "echo-preview",
        "toggled_on": [
          "Mutation.createTeamDiscussion",
          "Mutation.createTeamDiscussionComment",
          "Mutation.deleteTeamDiscussion",
          "Mutation.deleteTeamDiscussionComment",
          "Mutation.updateTeamDiscussion",
          "Mutation.updateTeamDiscussionComment",
          "Team.discussion",
          "Team.discussions",
          "Team.discussionsResourcePath",
          "Team.discussionsUrl",
          "TeamDiscussion",
          "TeamDiscussionComment",
          "TeamDiscussionCommentConnection",
          "TeamDiscussionCommentEdge",
          "TeamDiscussionCommentOrder",
          "TeamDiscussionCommentOrderField",
          "TeamDiscussionConnection",
          "TeamDiscussionEdge",
          "TeamDiscussionOrder",
          "TeamDiscussionOrderField"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.echo-preview+json",
        "href": "/graphql/overview/schema-previews#team-discussions-preview"
      },
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order nodes.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field by which to order nodes.</p>",
          "type": "TeamDiscussionOrderField!",
          "id": "teamdiscussionorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#teamdiscussionorderfield"
        }
      ]
    },
    {
      "name": "TeamMemberOrder",
      "kind": "inputObjects",
      "id": "teammemberorder",
      "href": "/graphql/reference/input-objects#teammemberorder",
      "description": "<p>Ordering options for team member connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order team members by.</p>",
          "type": "TeamMemberOrderField!",
          "id": "teammemberorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#teammemberorderfield"
        }
      ]
    },
    {
      "name": "TeamOrder",
      "kind": "inputObjects",
      "id": "teamorder",
      "href": "/graphql/reference/input-objects#teamorder",
      "description": "<p>Ways in which team connections can be ordered.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The direction in which to order nodes.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field in which to order nodes by.</p>",
          "type": "TeamOrderField!",
          "id": "teamorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#teamorderfield"
        }
      ]
    },
    {
      "name": "TeamRepositoryOrder",
      "kind": "inputObjects",
      "id": "teamrepositoryorder",
      "href": "/graphql/reference/input-objects#teamrepositoryorder",
      "description": "<p>Ordering options for team repository connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order repositories by.</p>",
          "type": "TeamRepositoryOrderField!",
          "id": "teamrepositoryorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#teamrepositoryorderfield"
        }
      ]
    },
    {
      "name": "UnlockLockableInput",
      "kind": "inputObjects",
      "id": "unlocklockableinput",
      "href": "/graphql/reference/input-objects#unlocklockableinput",
      "description": "<p>Autogenerated input type of UnlockLockable.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "lockableId",
          "description": "<p>ID of the issue or pull request to be unlocked.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UnmarkIssueAsDuplicateInput",
      "kind": "inputObjects",
      "id": "unmarkissueasduplicateinput",
      "href": "/graphql/reference/input-objects#unmarkissueasduplicateinput",
      "description": "<p>Autogenerated input type of UnmarkIssueAsDuplicate.</p>",
      "inputFields": [
        {
          "name": "canonicalId",
          "description": "<p>ID of the issue or pull request currently considered canonical/authoritative/original.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "duplicateId",
          "description": "<p>ID of the issue or pull request currently marked as a duplicate.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UnminimizeCommentInput",
      "kind": "inputObjects",
      "id": "unminimizecommentinput",
      "href": "/graphql/reference/input-objects#unminimizecommentinput",
      "description": "<p>Autogenerated input type of UnminimizeComment.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "subjectId",
          "description": "<p>The Node ID of the subject to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UnpinIssueInput",
      "kind": "inputObjects",
      "id": "unpinissueinput",
      "href": "/graphql/reference/input-objects#unpinissueinput",
      "description": "<p>Autogenerated input type of UnpinIssue.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "issueId",
          "description": "<p>The ID of the issue to be unpinned.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UnresolveReviewThreadInput",
      "kind": "inputObjects",
      "id": "unresolvereviewthreadinput",
      "href": "/graphql/reference/input-objects#unresolvereviewthreadinput",
      "description": "<p>Autogenerated input type of UnresolveReviewThread.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "threadId",
          "description": "<p>The ID of the thread to unresolve.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdateBranchProtectionRuleInput",
      "kind": "inputObjects",
      "id": "updatebranchprotectionruleinput",
      "href": "/graphql/reference/input-objects#updatebranchprotectionruleinput",
      "description": "<p>Autogenerated input type of UpdateBranchProtectionRule.</p>",
      "inputFields": [
        {
          "name": "branchProtectionRuleId",
          "description": "<p>The global relay id of the branch protection rule to be updated.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "dismissesStaleReviews",
          "description": "<p>Will new commits pushed to matching branches dismiss pull request review approvals.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "isAdminEnforced",
          "description": "<p>Can admins overwrite branch protection.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "pattern",
          "description": "<p>The glob-like pattern used to determine matching branches.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pushActorIds",
          "description": "<p>A list of User or Team IDs allowed to push to matching branches.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "requiredApprovingReviewCount",
          "description": "<p>Number of approving reviews required to update matching branches.</p>",
          "type": "Int",
          "id": "int",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#int"
        },
        {
          "name": "requiredStatusCheckContexts",
          "description": "<p>List of required status check contexts that must pass for commits to be accepted to matching branches.</p>",
          "type": "[String!]",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "requiresApprovingReviews",
          "description": "<p>Are approving reviews required to update matching branches.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresCodeOwnerReviews",
          "description": "<p>Are reviews from code owners required to update matching branches.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresCommitSignatures",
          "description": "<p>Are commits required to be signed.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresStatusChecks",
          "description": "<p>Are status checks required to update matching branches.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "requiresStrictStatusChecks",
          "description": "<p>Are branches required to be up to date before merging.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "restrictsPushes",
          "description": "<p>Is pushing to matching branches restricted.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "restrictsReviewDismissals",
          "description": "<p>Is dismissal of pull request reviews restricted.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "reviewDismissalActorIds",
          "description": "<p>A list of User or Team IDs allowed to dismiss reviews on pull requests targeting matching branches.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        }
      ]
    },
    {
      "name": "UpdateCheckRunInput",
      "kind": "inputObjects",
      "id": "updatecheckruninput",
      "href": "/graphql/reference/input-objects#updatecheckruninput",
      "description": "<p>Autogenerated input type of UpdateCheckRun.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "inputFields": [
        {
          "name": "actions",
          "description": "<p>Possible further actions the integrator can perform, which a user may trigger.</p>",
          "type": "[CheckRunAction!]",
          "id": "checkrunaction",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#checkrunaction"
        },
        {
          "name": "checkRunId",
          "description": "<p>The node of the check.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "completedAt",
          "description": "<p>The time that the check run finished.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "conclusion",
          "description": "<p>The final conclusion of the check.</p>",
          "type": "CheckConclusionState",
          "id": "checkconclusionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#checkconclusionstate"
        },
        {
          "name": "detailsUrl",
          "description": "<p>The URL of the integrator's site that has the full details of the check.</p>",
          "type": "URI",
          "id": "uri",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#uri"
        },
        {
          "name": "externalId",
          "description": "<p>A reference for the run on the integrator's system.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The name of the check.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "output",
          "description": "<p>Descriptive details about the run.</p>",
          "type": "CheckRunOutput",
          "id": "checkrunoutput",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#checkrunoutput"
        },
        {
          "name": "repositoryId",
          "description": "<p>The node ID of the repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "startedAt",
          "description": "<p>The time that the check run began.</p>",
          "type": "DateTime",
          "id": "datetime",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#datetime"
        },
        {
          "name": "status",
          "description": "<p>The current status.</p>",
          "type": "RequestableCheckStatusState",
          "id": "requestablecheckstatusstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#requestablecheckstatusstate"
        }
      ]
    },
    {
      "name": "UpdateCheckSuitePreferencesInput",
      "kind": "inputObjects",
      "id": "updatechecksuitepreferencesinput",
      "href": "/graphql/reference/input-objects#updatechecksuitepreferencesinput",
      "description": "<p>Autogenerated input type of UpdateCheckSuitePreferences.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Checks preview",
        "description": "This preview adds support for reading checks created by GitHub Apps.",
        "toggled_by": "antiope-preview",
        "toggled_on": [
          "CheckAnnotationRange",
          "CheckAnnotationPosition",
          "CheckAnnotationSpan",
          "CheckAnnotation",
          "CheckAnnotationConnection.nodes",
          "CheckAnnotationData",
          "CheckAnnotationEdge.node",
          "CheckAnnotationLevel",
          "CheckConclusionState",
          "CheckStatusState",
          "CheckSuiteAutoTriggerPreference",
          "CheckRun",
          "CheckRunConnection.nodes",
          "CheckRunEdge.node",
          "CheckRunAction",
          "CheckRunFilter",
          "CheckRunOutput",
          "CheckRunOutputImage",
          "CheckRunType",
          "CheckSuite",
          "CheckSuiteConnection.nodes",
          "CheckSuiteEdge.node",
          "CheckSuiteFilter",
          "Commit.checkSuites",
          "Mutation.createCheckRun",
          "Mutation.createCheckSuite",
          "Mutation.rerequestCheckSuite",
          "Mutation.updateCheckRun",
          "Mutation.updateCheckSuitePreferences",
          "Push",
          "RequestableCheckStatusState"
        ],
        "owning_teams": [
          "@github/ecosystem-primitives"
        ],
        "accept_header": "application/vnd.github.antiope-preview+json",
        "href": "/graphql/overview/schema-previews#checks-preview"
      },
      "inputFields": [
        {
          "name": "autoTriggerPreferences",
          "description": "<p>The check suite preferences to modify.</p>",
          "type": "[CheckSuiteAutoTriggerPreference!]!",
          "id": "checksuiteautotriggerpreference",
          "kind": "input-objects",
          "href": "/graphql/reference/input-objects#checksuiteautotriggerpreference"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryId",
          "description": "<p>The Node ID of the repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdateIssueCommentInput",
      "kind": "inputObjects",
      "id": "updateissuecommentinput",
      "href": "/graphql/reference/input-objects#updateissuecommentinput",
      "description": "<p>Autogenerated input type of UpdateIssueComment.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The updated text of the comment.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The ID of the IssueComment to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdateIssueInput",
      "kind": "inputObjects",
      "id": "updateissueinput",
      "href": "/graphql/reference/input-objects#updateissueinput",
      "description": "<p>Autogenerated input type of UpdateIssue.</p>",
      "inputFields": [
        {
          "name": "assigneeIds",
          "description": "<p>An array of Node IDs of users for this issue.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "body",
          "description": "<p>The body for the issue description.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The ID of the Issue to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "labelIds",
          "description": "<p>An array of Node IDs of labels for this issue.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "milestoneId",
          "description": "<p>The Node ID of the milestone for this issue.</p>",
          "type": "ID",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "projectIds",
          "description": "<p>An array of Node IDs for projects associated with this issue.</p>",
          "type": "[ID!]",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id"
        },
        {
          "name": "state",
          "description": "<p>The desired issue state.</p>",
          "type": "IssueState",
          "id": "issuestate",
          "kind": "enums",
          "href": "/graphql/reference/enums#issuestate"
        },
        {
          "name": "title",
          "description": "<p>The title for the issue.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "UpdateLabelInput",
      "kind": "inputObjects",
      "id": "updatelabelinput",
      "href": "/graphql/reference/input-objects#updatelabelinput",
      "description": "<p>Autogenerated input type of UpdateLabel.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Labels preview",
        "description": "This preview adds support for adding, updating, creating and deleting labels.",
        "toggled_by": "bane-preview",
        "toggled_on": [
          "Mutation.createLabel",
          "Mutation.deleteLabel",
          "Mutation.updateLabel"
        ],
        "owning_teams": [
          "@github/pe-pull-requests"
        ],
        "accept_header": "application/vnd.github.bane-preview+json",
        "href": "/graphql/overview/schema-previews#labels-preview"
      },
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "color",
          "description": "<p>A 6 character hex code, without the leading #, identifying the updated color of the label.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The Node ID of the label to be updated.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "name",
          "description": "<p>The updated name of the label.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "UpdateProjectCardInput",
      "kind": "inputObjects",
      "id": "updateprojectcardinput",
      "href": "/graphql/reference/input-objects#updateprojectcardinput",
      "description": "<p>Autogenerated input type of UpdateProjectCard.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "isArchived",
          "description": "<p>Whether or not the ProjectCard should be archived.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "note",
          "description": "<p>The note of ProjectCard.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "projectCardId",
          "description": "<p>The ProjectCard ID to update.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdateProjectColumnInput",
      "kind": "inputObjects",
      "id": "updateprojectcolumninput",
      "href": "/graphql/reference/input-objects#updateprojectcolumninput",
      "description": "<p>Autogenerated input type of UpdateProjectColumn.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The name of project column.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "projectColumnId",
          "description": "<p>The ProjectColumn ID to update.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdateProjectInput",
      "kind": "inputObjects",
      "id": "updateprojectinput",
      "href": "/graphql/reference/input-objects#updateprojectinput",
      "description": "<p>Autogenerated input type of UpdateProject.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The description of project.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "name",
          "description": "<p>The name of project.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "projectId",
          "description": "<p>The Project ID to update.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "public",
          "description": "<p>Whether the project is public or not.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "state",
          "description": "<p>Whether the project is open or closed.</p>",
          "type": "ProjectState",
          "id": "projectstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#projectstate"
        }
      ]
    },
    {
      "name": "UpdatePullRequestInput",
      "kind": "inputObjects",
      "id": "updatepullrequestinput",
      "href": "/graphql/reference/input-objects#updatepullrequestinput",
      "description": "<p>Autogenerated input type of UpdatePullRequest.</p>",
      "inputFields": [
        {
          "name": "baseRefName",
          "description": "<p>The name of the branch you want your changes pulled into. This should be an existing branch\non the current repository.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "body",
          "description": "<p>The contents of the pull request.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "maintainerCanModify",
          "description": "<p>Indicates whether maintainers can modify the pull request.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "pullRequestId",
          "description": "<p>The Node ID of the pull request.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "title",
          "description": "<p>The title of the pull request.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "UpdatePullRequestReviewCommentInput",
      "kind": "inputObjects",
      "id": "updatepullrequestreviewcommentinput",
      "href": "/graphql/reference/input-objects#updatepullrequestreviewcommentinput",
      "description": "<p>Autogenerated input type of UpdatePullRequestReviewComment.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The text of the comment.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequestReviewCommentId",
          "description": "<p>The Node ID of the comment to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdatePullRequestReviewInput",
      "kind": "inputObjects",
      "id": "updatepullrequestreviewinput",
      "href": "/graphql/reference/input-objects#updatepullrequestreviewinput",
      "description": "<p>Autogenerated input type of UpdatePullRequestReview.</p>",
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The contents of the pull request review body.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "pullRequestReviewId",
          "description": "<p>The Node ID of the pull request review to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdateSubscriptionInput",
      "kind": "inputObjects",
      "id": "updatesubscriptioninput",
      "href": "/graphql/reference/input-objects#updatesubscriptioninput",
      "description": "<p>Autogenerated input type of UpdateSubscription.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "state",
          "description": "<p>The new state of the subscription.</p>",
          "type": "SubscriptionState!",
          "id": "subscriptionstate",
          "kind": "enums",
          "href": "/graphql/reference/enums#subscriptionstate"
        },
        {
          "name": "subscribableId",
          "description": "<p>The Node ID of the subscribable object to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdateTeamDiscussionCommentInput",
      "kind": "inputObjects",
      "id": "updateteamdiscussioncommentinput",
      "href": "/graphql/reference/input-objects#updateteamdiscussioncommentinput",
      "description": "<p>Autogenerated input type of UpdateTeamDiscussionComment.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Team discussions preview",
        "description": "Adds support for reading and managing discussions within teams.",
        "toggled_by": "echo-preview",
        "toggled_on": [
          "Mutation.createTeamDiscussion",
          "Mutation.createTeamDiscussionComment",
          "Mutation.deleteTeamDiscussion",
          "Mutation.deleteTeamDiscussionComment",
          "Mutation.updateTeamDiscussion",
          "Mutation.updateTeamDiscussionComment",
          "Team.discussion",
          "Team.discussions",
          "Team.discussionsResourcePath",
          "Team.discussionsUrl",
          "TeamDiscussion",
          "TeamDiscussionComment",
          "TeamDiscussionCommentConnection",
          "TeamDiscussionCommentEdge",
          "TeamDiscussionCommentOrder",
          "TeamDiscussionCommentOrderField",
          "TeamDiscussionConnection",
          "TeamDiscussionEdge",
          "TeamDiscussionOrder",
          "TeamDiscussionOrderField"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.echo-preview+json",
        "href": "/graphql/overview/schema-previews#team-discussions-preview"
      },
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The updated text of the comment.</p>",
          "type": "String!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyVersion",
          "description": "<p>The current version of the body content.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The ID of the comment to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        }
      ]
    },
    {
      "name": "UpdateTeamDiscussionInput",
      "kind": "inputObjects",
      "id": "updateteamdiscussioninput",
      "href": "/graphql/reference/input-objects#updateteamdiscussioninput",
      "description": "<p>Autogenerated input type of UpdateTeamDiscussion.</p>",
      "isDeprecated": false,
      "preview": {
        "title": "Team discussions preview",
        "description": "Adds support for reading and managing discussions within teams.",
        "toggled_by": "echo-preview",
        "toggled_on": [
          "Mutation.createTeamDiscussion",
          "Mutation.createTeamDiscussionComment",
          "Mutation.deleteTeamDiscussion",
          "Mutation.deleteTeamDiscussionComment",
          "Mutation.updateTeamDiscussion",
          "Mutation.updateTeamDiscussionComment",
          "Team.discussion",
          "Team.discussions",
          "Team.discussionsResourcePath",
          "Team.discussionsUrl",
          "TeamDiscussion",
          "TeamDiscussionComment",
          "TeamDiscussionCommentConnection",
          "TeamDiscussionCommentEdge",
          "TeamDiscussionCommentOrder",
          "TeamDiscussionCommentOrderField",
          "TeamDiscussionConnection",
          "TeamDiscussionEdge",
          "TeamDiscussionOrder",
          "TeamDiscussionOrderField"
        ],
        "owning_teams": [
          "@github/identity"
        ],
        "accept_header": "application/vnd.github.echo-preview+json",
        "href": "/graphql/overview/schema-previews#team-discussions-preview"
      },
      "inputFields": [
        {
          "name": "body",
          "description": "<p>The updated text of the discussion.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "bodyVersion",
          "description": "<p>The current version of the body content. If provided, this update operation\nwill be rejected if the given version does not match the latest version on the server.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "id",
          "description": "<p>The Node ID of the discussion to modify.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "pinned",
          "description": "<p>If provided, sets the pinned state of the updated discussion.</p>",
          "type": "Boolean",
          "id": "boolean",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#boolean"
        },
        {
          "name": "title",
          "description": "<p>The updated title of the discussion.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "UpdateTopicsInput",
      "kind": "inputObjects",
      "id": "updatetopicsinput",
      "href": "/graphql/reference/input-objects#updatetopicsinput",
      "description": "<p>Autogenerated input type of UpdateTopics.</p>",
      "inputFields": [
        {
          "name": "clientMutationId",
          "description": "<p>A unique identifier for the client performing the mutation.</p>",
          "type": "String",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        },
        {
          "name": "repositoryId",
          "description": "<p>The Node ID of the repository.</p>",
          "type": "ID!",
          "id": "id",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#id",
          "isDeprecated": false
        },
        {
          "name": "topicNames",
          "description": "<p>An array of topic names.</p>",
          "type": "[String!]!",
          "id": "string",
          "kind": "scalars",
          "href": "/graphql/reference/scalars#string"
        }
      ]
    },
    {
      "name": "UserStatusOrder",
      "kind": "inputObjects",
      "id": "userstatusorder",
      "href": "/graphql/reference/input-objects#userstatusorder",
      "description": "<p>Ordering options for user status connections.</p>",
      "inputFields": [
        {
          "name": "direction",
          "description": "<p>The ordering direction.</p>",
          "type": "OrderDirection!",
          "id": "orderdirection",
          "kind": "enums",
          "href": "/graphql/reference/enums#orderdirection"
        },
        {
          "name": "field",
          "description": "<p>The field to order user statuses by.</p>",
          "type": "UserStatusOrderField!",
          "id": "userstatusorderfield",
          "kind": "enums",
          "href": "/graphql/reference/enums#userstatusorderfield"
        }
      ]
    }
  ],
  "scalars": [
    {
      "name": "Boolean",
      "description": "Represents `true` or `false` values.",
      "id": "boolean",
      "href": "/graphql/reference/scalars#boolean"
    },
    {
      "name": "Date",
      "kind": "scalars",
      "id": "date",
      "href": "/graphql/reference/scalars#date",
      "description": "<p>An ISO-8601 encoded date string.</p>"
    },
    {
      "name": "DateTime",
      "kind": "scalars",
      "id": "datetime",
      "href": "/graphql/reference/scalars#datetime",
      "description": "<p>An ISO-8601 encoded UTC date string.</p>"
    },
    {
      "name": "Float",
      "description": "Represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",
      "id": "float",
      "href": "/graphql/reference/scalars#float"
    },
    {
      "name": "GitObjectID",
      "kind": "scalars",
      "id": "gitobjectid",
      "href": "/graphql/reference/scalars#gitobjectid",
      "description": "<p>A Git object ID.</p>"
    },
    {
      "name": "GitSSHRemote",
      "kind": "scalars",
      "id": "gitsshremote",
      "href": "/graphql/reference/scalars#gitsshremote",
      "description": "<p>Git SSH string.</p>"
    },
    {
      "name": "GitTimestamp",
      "kind": "scalars",
      "id": "gittimestamp",
      "href": "/graphql/reference/scalars#gittimestamp",
      "description": "<p>An ISO-8601 encoded date string. Unlike the DateTime type, GitTimestamp is not converted in UTC.</p>"
    },
    {
      "name": "HTML",
      "kind": "scalars",
      "id": "html",
      "href": "/graphql/reference/scalars#html",
      "description": "<p>A string containing HTML code.</p>"
    },
    {
      "name": "ID",
      "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
      "id": "id",
      "href": "/graphql/reference/scalars#id"
    },
    {
      "name": "Int",
      "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
      "id": "int",
      "href": "/graphql/reference/scalars#int"
    },
    {
      "name": "String",
      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
      "id": "string",
      "href": "/graphql/reference/scalars#string"
    },
    {
      "name": "URI",
      "kind": "scalars",
      "id": "uri",
      "href": "/graphql/reference/scalars#uri",
      "description": "<p>An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.</p>"
    },
    {
      "name": "X509Certificate",
      "kind": "scalars",
      "id": "x509certificate",
      "href": "/graphql/reference/scalars#x509certificate",
      "description": "<p>A valid x509 certificate string.</p>"
    }
  ]
}